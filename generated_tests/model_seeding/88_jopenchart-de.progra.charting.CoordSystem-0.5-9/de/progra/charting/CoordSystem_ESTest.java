/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 17:49:42 GMT 2019
 */

package de.progra.charting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.Axis;
import de.progra.charting.CoordSystem;
import de.progra.charting.PointToPixelTranslator;
import de.progra.charting.model.ChartDataModel;
import de.progra.charting.model.ChartDataModelConstraints;
import de.progra.charting.model.DataSet;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import java.awt.BasicStroke;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.Locale;
import java.util.NoSuchElementException;
import javax.swing.JCheckBox;
import javax.swing.JToolBar;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.StrokeBorder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CoordSystem_ESTest extends CoordSystem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      ChartDataModelConstraints chartDataModelConstraints0 = coordSystem0.getChartDataModelConstraints((-309));
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertNull(chartDataModelConstraints0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, true, true, false);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      
      boolean boolean0 = coordSystem0.isPaintLabels();
      assertTrue(boolean0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, false, false, true);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertFalse(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      
      boolean boolean0 = coordSystem0.isPaintLabels();
      assertTrue(boolean0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertFalse(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, false, true, true);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      boolean boolean0 = coordSystem0.isPaintOnlyTick();
      assertTrue(boolean0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, true, false, true);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      
      boolean boolean0 = coordSystem0.isPaintOnlyTick();
      assertTrue(boolean0);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      PointToPixelTranslator pointToPixelTranslator0 = coordSystem0.getPointToPixelTranslator((-40));
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertNotNull(pointToPixelTranslator0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      
      Axis axis0 = new Axis(15, (ChartDataModelConstraints) null);
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(1, axis0.getAlignment());
      assertNotNull(axis0);
      assertEquals(4, Axis.LINEAR);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(2, Axis.VERTICAL);
      
      coordSystem0.setFirstYAxis(axis0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(1, axis0.getAlignment());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(4, Axis.LINEAR);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(2, Axis.VERTICAL);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      
      CoordSystem coordSystem1 = new CoordSystem(objectChartDataModel0, "V$)L148 |}o8-ol", "x");
      assertFalse(coordSystem1.equals((Object)coordSystem0));
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem1.isPaintLabels());
      assertEquals("x", coordSystem1.getYAxisUnit());
      assertTrue(coordSystem1.isDrawArrows());
      assertTrue(coordSystem1.isPaintOnlyTick());
      assertTrue(coordSystem1.isPaintAltTick());
      assertEquals("V$)L148 |}o8-ol", coordSystem1.getXAxisUnit());
      assertNotNull(coordSystem1);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem1.ARROWLENGTH);
      assertEquals(20, coordSystem1.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      
      Axis axis0 = coordSystem0.getFirstYAxis();
      assertFalse(coordSystem0.equals((Object)coordSystem1));
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(2, axis0.getAlignment());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertNotNull(axis0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(2, Axis.VERTICAL);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(4, Axis.LINEAR);
      assertNotSame(coordSystem0, coordSystem1);
      
      coordSystem1.setXAxis(axis0);
      assertFalse(coordSystem0.equals((Object)coordSystem1));
      assertFalse(coordSystem1.equals((Object)coordSystem0));
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem1.isPaintLabels());
      assertEquals("x", coordSystem1.getYAxisUnit());
      assertTrue(coordSystem1.isDrawArrows());
      assertTrue(coordSystem1.isPaintOnlyTick());
      assertTrue(coordSystem1.isPaintAltTick());
      assertEquals("V$)L148 |}o8-ol", coordSystem1.getXAxisUnit());
      assertEquals(2, axis0.getAlignment());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem1.ARROWLENGTH);
      assertEquals(20, coordSystem1.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(2, Axis.VERTICAL);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(4, Axis.LINEAR);
      assertNotSame(coordSystem0, coordSystem1);
      assertNotSame(coordSystem1, coordSystem0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      Axis axis0 = mock(Axis.class, new ViolatedAssumptionAnswer());
      doReturn((-1400.000777846)).when(axis0).getPixelForValue(anyDouble());
      doReturn(0.0).when(axis0).getPointToPixelRatio();
      doReturn("", "").when(axis0).toString();
      coordSystem0.setSecondYAxis(axis0);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      JCheckBox jCheckBox0 = new JCheckBox("");
      assertFalse(jCheckBox0.isFocusCycleRoot());
      assertFalse(jCheckBox0.isFocusTraversalPolicyProvider());
      assertTrue(jCheckBox0.getFocusTraversalKeysEnabled());
      assertFalse(jCheckBox0.getIgnoreRepaint());
      assertFalse(jCheckBox0.isFocusTraversalPolicySet());
      assertNotNull(jCheckBox0);
      
      BasicStroke basicStroke0 = new BasicStroke();
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      StrokeBorder strokeBorder0 = new StrokeBorder(basicStroke0);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(strokeBorder0);
      
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jCheckBox0, (Border) strokeBorder0, 30, 1, (-2147483637), 1);
      assertFalse(jCheckBox0.isFocusCycleRoot());
      assertFalse(jCheckBox0.isFocusTraversalPolicyProvider());
      assertTrue(jCheckBox0.getFocusTraversalKeysEnabled());
      assertFalse(jCheckBox0.getIgnoreRepaint());
      assertFalse(jCheckBox0.isFocusTraversalPolicySet());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2.0, rectangle0.getY(), 0.01);
      assertEquals(31.0, rectangle0.getX(), 0.01);
      assertEquals((-1.0), rectangle0.getHeight(), 0.01);
      assertEquals(1.5, rectangle0.getCenterY(), 0.01);
      assertEquals((-2.147483639E9), rectangle0.getWidth(), 0.01);
      assertEquals(2.0, rectangle0.getMinY(), 0.01);
      assertEquals(31.0, rectangle0.getMinX(), 0.01);
      assertEquals((-2.147483608E9), rectangle0.getMaxX(), 0.01);
      assertEquals((-1.0737417885E9), rectangle0.getCenterX(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(1.0, rectangle0.getMaxY(), 0.01);
      assertNotNull(rectangle0);
      assertEquals(2, rectangle0.y);
      assertEquals((-2147483639), rectangle0.width);
      assertEquals((-1), rectangle0.height);
      assertEquals(31, rectangle0.x);
      
      coordSystem0.setBounds(rectangle0);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertFalse(jCheckBox0.isFocusCycleRoot());
      assertFalse(jCheckBox0.isFocusTraversalPolicyProvider());
      assertTrue(jCheckBox0.getFocusTraversalKeysEnabled());
      assertFalse(jCheckBox0.getIgnoreRepaint());
      assertFalse(jCheckBox0.isFocusTraversalPolicySet());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2.0, rectangle0.getY(), 0.01);
      assertEquals(31.0, rectangle0.getX(), 0.01);
      assertEquals((-1.0), rectangle0.getHeight(), 0.01);
      assertEquals(1.5, rectangle0.getCenterY(), 0.01);
      assertEquals((-2.147483639E9), rectangle0.getWidth(), 0.01);
      assertEquals(2.0, rectangle0.getMinY(), 0.01);
      assertEquals(31.0, rectangle0.getMinX(), 0.01);
      assertEquals((-2.147483608E9), rectangle0.getMaxX(), 0.01);
      assertEquals((-1.0737417885E9), rectangle0.getCenterX(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(1.0, rectangle0.getMaxY(), 0.01);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(2, rectangle0.y);
      assertEquals((-2147483639), rectangle0.width);
      assertEquals((-1), rectangle0.height);
      assertEquals(31, rectangle0.x);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, false, true, true);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertFalse(coordSystem0.isDrawArrows());
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      
      Axis axis0 = coordSystem0.xaxis;
      assertEquals(1, axis0.getAlignment());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertNotNull(axis0);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(4, Axis.LINEAR);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(2, Axis.VERTICAL);
      
      coordSystem0.setSecondYAxis(axis0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertFalse(coordSystem0.isDrawArrows());
      assertEquals(1, axis0.getAlignment());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(4, Axis.LINEAR);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(2, Axis.VERTICAL);
      
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform(1);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertFalse(coordSystem0.isDrawArrows());
      assertEquals((-2.147483647E9), affineTransform0.getScaleY(), 0.01);
      assertEquals(2.147483647E9, affineTransform0.getScaleX(), 0.01);
      assertEquals(50.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals((-4.6116860141324206E18), affineTransform0.getDeterminant(), 0.01);
      assertEquals(2.147483617E9, affineTransform0.getTranslateY(), 0.01);
      assertEquals(0.0, affineTransform0.getShearY(), 0.01);
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertNotNull(affineTransform0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertNotNull(editableChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      
      AffineTransform affineTransform0 = AffineTransform.getShearInstance(20, 1955.19508994);
      assertEquals(1955.19508994, affineTransform0.getShearY(), 0.01);
      assertEquals(20.0, affineTransform0.getShearX(), 0.01);
      assertEquals((-39102.9017988), affineTransform0.getDeterminant(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals(1.0, affineTransform0.getScaleY(), 0.01);
      assertEquals(1.0, affineTransform0.getScaleX(), 0.01);
      assertNotNull(affineTransform0);
      
      coordSystem0.y1transform = affineTransform0;
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(1955.19508994, affineTransform0.getShearY(), 0.01);
      assertEquals(20.0, affineTransform0.getShearX(), 0.01);
      assertEquals((-39102.9017988), affineTransform0.getDeterminant(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals(1.0, affineTransform0.getScaleY(), 0.01);
      assertEquals(1.0, affineTransform0.getScaleX(), 0.01);
      assertEquals(1.0, coordSystem0.y1transform.getScaleX(), 0.01);
      assertEquals(1.0, coordSystem0.y1transform.getScaleY(), 0.01);
      assertEquals((-39102.9017988), coordSystem0.y1transform.getDeterminant(), 0.01);
      assertEquals(20.0, coordSystem0.y1transform.getShearX(), 0.01);
      assertEquals(0.0, coordSystem0.y1transform.getTranslateX(), 0.01);
      assertEquals(0.0, coordSystem0.y1transform.getTranslateY(), 0.01);
      assertEquals(1955.19508994, coordSystem0.y1transform.getShearY(), 0.01);
      
      AffineTransform affineTransform1 = coordSystem0.getTransform(1);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNull(affineTransform1);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      
      AffineTransform affineTransform0 = AffineTransform.getShearInstance(0.0, 0.0);
      assertEquals(1.0, affineTransform0.getDeterminant(), 0.01);
      assertEquals(0.0, affineTransform0.getShearY(), 0.01);
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertEquals(1.0, affineTransform0.getScaleY(), 0.01);
      assertEquals(1.0, affineTransform0.getScaleX(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateX(), 0.01);
      assertNotNull(affineTransform0);
      
      coordSystem0.y2transform = affineTransform0;
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(1.0, affineTransform0.getDeterminant(), 0.01);
      assertEquals(0.0, affineTransform0.getShearY(), 0.01);
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertEquals(1.0, affineTransform0.getScaleY(), 0.01);
      assertEquals(1.0, affineTransform0.getScaleX(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals(1.0, coordSystem0.y2transform.getScaleX(), 0.01);
      assertEquals(0.0, coordSystem0.y2transform.getShearX(), 0.01);
      assertEquals(1.0, coordSystem0.y2transform.getScaleY(), 0.01);
      assertEquals(0.0, coordSystem0.y2transform.getShearY(), 0.01);
      assertEquals(0.0, coordSystem0.y2transform.getTranslateX(), 0.01);
      assertEquals(0.0, coordSystem0.y2transform.getTranslateY(), 0.01);
      assertEquals(1.0, coordSystem0.y2transform.getDeterminant(), 0.01);
      
      AffineTransform affineTransform1 = coordSystem0.getTransform(0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertNull(affineTransform1);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      
      coordSystem0.setRightMargin((-1027));
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (String) null, (String) null);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNull(coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNull(coordSystem0.getXAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      coordSystem0.shouldPaintAltTick = false;
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertNull(coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNull(coordSystem0.getXAxisUnit());
      
      boolean boolean0 = coordSystem0.isPaintAltTick();
      assertFalse(boolean0);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertNull(coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNull(coordSystem0.getXAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, false, true, true);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      
      boolean boolean0 = coordSystem0.isDrawArrows();
      assertFalse(boolean0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, false, true, true);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      
      DecimalFormat decimalFormat0 = coordSystem0.getYDecimalFormat();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNull(decimalFormat0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DataSet[] dataSetArray0 = new DataSet[0];
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(dataSetArray0, dataSetArray0);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertNotNull(objectChartDataModel0);
      assertEquals(0, dataSetArray0.length);
      
      Locale locale0 = Locale.CANADA;
      assertEquals("CA", locale0.getCountry());
      assertEquals("en_CA", locale0.toString());
      assertEquals("eng", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("en", locale0.getLanguage());
      assertEquals("CAN", locale0.getISO3Country());
      assertNotNull(locale0);
      
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols(locale0);
      assertEquals("CA", locale0.getCountry());
      assertEquals("en_CA", locale0.toString());
      assertEquals("eng", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("en", locale0.getLanguage());
      assertEquals("CAN", locale0.getISO3Country());
      assertEquals(',', decimalFormatSymbols0.getGroupingSeparator());
      assertEquals('.', decimalFormatSymbols0.getMonetaryDecimalSeparator());
      assertEquals('%', decimalFormatSymbols0.getPercent());
      assertEquals('.', decimalFormatSymbols0.getDecimalSeparator());
      assertEquals('#', decimalFormatSymbols0.getDigit());
      assertEquals(';', decimalFormatSymbols0.getPatternSeparator());
      assertEquals("\uFFFD", decimalFormatSymbols0.getNaN());
      assertEquals("\u221E", decimalFormatSymbols0.getInfinity());
      assertEquals("$", decimalFormatSymbols0.getCurrencySymbol());
      assertEquals("CAD", decimalFormatSymbols0.getInternationalCurrencySymbol());
      assertEquals("E", decimalFormatSymbols0.getExponentSeparator());
      assertEquals('-', decimalFormatSymbols0.getMinusSign());
      assertEquals('0', decimalFormatSymbols0.getZeroDigit());
      assertEquals('\u2030', decimalFormatSymbols0.getPerMill());
      assertNotNull(decimalFormatSymbols0);
      
      DecimalFormat decimalFormat0 = new DecimalFormat("U", decimalFormatSymbols0);
      assertEquals("CA", locale0.getCountry());
      assertEquals("en_CA", locale0.toString());
      assertEquals("eng", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("en", locale0.getLanguage());
      assertEquals("CAN", locale0.getISO3Country());
      assertEquals(',', decimalFormatSymbols0.getGroupingSeparator());
      assertEquals('.', decimalFormatSymbols0.getMonetaryDecimalSeparator());
      assertEquals('%', decimalFormatSymbols0.getPercent());
      assertEquals('.', decimalFormatSymbols0.getDecimalSeparator());
      assertEquals('#', decimalFormatSymbols0.getDigit());
      assertEquals(';', decimalFormatSymbols0.getPatternSeparator());
      assertEquals("\uFFFD", decimalFormatSymbols0.getNaN());
      assertEquals("\u221E", decimalFormatSymbols0.getInfinity());
      assertEquals("$", decimalFormatSymbols0.getCurrencySymbol());
      assertEquals("CAD", decimalFormatSymbols0.getInternationalCurrencySymbol());
      assertEquals("E", decimalFormatSymbols0.getExponentSeparator());
      assertEquals('-', decimalFormatSymbols0.getMinusSign());
      assertEquals('0', decimalFormatSymbols0.getZeroDigit());
      assertEquals('\u2030', decimalFormatSymbols0.getPerMill());
      assertEquals(0, decimalFormat0.getMaximumFractionDigits());
      assertEquals(0, decimalFormat0.getGroupingSize());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(0, decimalFormat0.getMinimumFractionDigits());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals("U#", decimalFormat0.toPattern());
      assertEquals("U#", decimalFormat0.toLocalizedPattern());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertEquals(0, decimalFormat0.getMinimumIntegerDigits());
      assertEquals("-U", decimalFormat0.getNegativePrefix());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("U", decimalFormat0.getPositivePrefix());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertFalse(decimalFormat0.isGroupingUsed());
      assertNotNull(decimalFormat0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, decimalFormat0, false, false, false);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals("CA", locale0.getCountry());
      assertEquals("en_CA", locale0.toString());
      assertEquals("eng", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("en", locale0.getLanguage());
      assertEquals("CAN", locale0.getISO3Country());
      assertEquals(',', decimalFormatSymbols0.getGroupingSeparator());
      assertEquals('.', decimalFormatSymbols0.getMonetaryDecimalSeparator());
      assertEquals('%', decimalFormatSymbols0.getPercent());
      assertEquals('.', decimalFormatSymbols0.getDecimalSeparator());
      assertEquals('#', decimalFormatSymbols0.getDigit());
      assertEquals(';', decimalFormatSymbols0.getPatternSeparator());
      assertEquals("\uFFFD", decimalFormatSymbols0.getNaN());
      assertEquals("\u221E", decimalFormatSymbols0.getInfinity());
      assertEquals("$", decimalFormatSymbols0.getCurrencySymbol());
      assertEquals("CAD", decimalFormatSymbols0.getInternationalCurrencySymbol());
      assertEquals("E", decimalFormatSymbols0.getExponentSeparator());
      assertEquals('-', decimalFormatSymbols0.getMinusSign());
      assertEquals('0', decimalFormatSymbols0.getZeroDigit());
      assertEquals('\u2030', decimalFormatSymbols0.getPerMill());
      assertEquals(0, decimalFormat0.getMaximumFractionDigits());
      assertEquals(0, decimalFormat0.getGroupingSize());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(0, decimalFormat0.getMinimumFractionDigits());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals("U#", decimalFormat0.toPattern());
      assertEquals("U#", decimalFormat0.toLocalizedPattern());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertEquals(0, decimalFormat0.getMinimumIntegerDigits());
      assertEquals("-U", decimalFormat0.getNegativePrefix());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("U", decimalFormat0.getPositivePrefix());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertFalse(decimalFormat0.isGroupingUsed());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertFalse(coordSystem0.isPaintAltTick());
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, dataSetArray0.length);
      
      DecimalFormat decimalFormat1 = coordSystem0.getYDecimalFormat();
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals("CA", locale0.getCountry());
      assertEquals("en_CA", locale0.toString());
      assertEquals("eng", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("en", locale0.getLanguage());
      assertEquals("CAN", locale0.getISO3Country());
      assertEquals(',', decimalFormatSymbols0.getGroupingSeparator());
      assertEquals('.', decimalFormatSymbols0.getMonetaryDecimalSeparator());
      assertEquals('%', decimalFormatSymbols0.getPercent());
      assertEquals('.', decimalFormatSymbols0.getDecimalSeparator());
      assertEquals('#', decimalFormatSymbols0.getDigit());
      assertEquals(';', decimalFormatSymbols0.getPatternSeparator());
      assertEquals("\uFFFD", decimalFormatSymbols0.getNaN());
      assertEquals("\u221E", decimalFormatSymbols0.getInfinity());
      assertEquals("$", decimalFormatSymbols0.getCurrencySymbol());
      assertEquals("CAD", decimalFormatSymbols0.getInternationalCurrencySymbol());
      assertEquals("E", decimalFormatSymbols0.getExponentSeparator());
      assertEquals('-', decimalFormatSymbols0.getMinusSign());
      assertEquals('0', decimalFormatSymbols0.getZeroDigit());
      assertEquals('\u2030', decimalFormatSymbols0.getPerMill());
      assertEquals(0, decimalFormat0.getMaximumFractionDigits());
      assertEquals(0, decimalFormat0.getGroupingSize());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(0, decimalFormat0.getMinimumFractionDigits());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals("U#", decimalFormat0.toPattern());
      assertEquals("U#", decimalFormat0.toLocalizedPattern());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertEquals(0, decimalFormat0.getMinimumIntegerDigits());
      assertEquals("-U", decimalFormat0.getNegativePrefix());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("U", decimalFormat0.getPositivePrefix());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertFalse(decimalFormat0.isGroupingUsed());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertFalse(coordSystem0.isPaintAltTick());
      assertEquals("U#", decimalFormat1.toLocalizedPattern());
      assertFalse(decimalFormat1.isGroupingUsed());
      assertEquals("U", decimalFormat1.getPositivePrefix());
      assertEquals("", decimalFormat1.getPositiveSuffix());
      assertFalse(decimalFormat1.isParseIntegerOnly());
      assertEquals(0, decimalFormat1.getGroupingSize());
      assertFalse(decimalFormat1.isDecimalSeparatorAlwaysShown());
      assertFalse(decimalFormat1.isParseBigDecimal());
      assertEquals(0, decimalFormat1.getMinimumIntegerDigits());
      assertEquals(0, decimalFormat1.getMinimumFractionDigits());
      assertEquals("U#", decimalFormat1.toPattern());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat1.getRoundingMode());
      assertEquals(0, decimalFormat1.getMaximumFractionDigits());
      assertEquals(1, decimalFormat1.getMultiplier());
      assertEquals(Integer.MAX_VALUE, decimalFormat1.getMaximumIntegerDigits());
      assertEquals("", decimalFormat1.getNegativeSuffix());
      assertEquals("-U", decimalFormat1.getNegativePrefix());
      assertNotNull(decimalFormat1);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertSame(decimalFormat0, decimalFormat1);
      assertSame(decimalFormat1, decimalFormat0);
      assertEquals(0, dataSetArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (String) null, (String) null);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNull(coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertNull(coordSystem0.getXAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      
      String string0 = coordSystem0.getYAxisUnit();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNull(coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertNull(coordSystem0.getXAxisUnit());
      assertNull(string0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (String) null, "");
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals("", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNull(coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      
      String string0 = coordSystem0.getYAxisUnit();
      assertEquals("", string0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals("", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNull(coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNotNull(string0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (String) null, (String) null);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNull(coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNull(coordSystem0.getXAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      String string0 = coordSystem0.getXAxisUnit();
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNull(coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNull(coordSystem0.getXAxisUnit());
      assertNull(string0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertNotNull(editableChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "", "%`G7Vi3@([yvhww");
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("%`G7Vi3@([yvhww", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      
      String string0 = coordSystem0.getXAxisUnit();
      assertEquals("", string0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("%`G7Vi3@([yvhww", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNotNull(string0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      BasicStroke basicStroke0 = new BasicStroke();
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertNotNull(basicStroke0);
      
      StrokeBorder strokeBorder0 = new StrokeBorder(basicStroke0);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertNotNull(strokeBorder0);
      
      JToolBar.Separator jToolBar_Separator0 = new JToolBar.Separator((Dimension) null);
      assertTrue(jToolBar_Separator0.getFocusTraversalKeysEnabled());
      assertFalse(jToolBar_Separator0.getIgnoreRepaint());
      assertFalse(jToolBar_Separator0.isFocusTraversalPolicySet());
      assertFalse(jToolBar_Separator0.isFocusCycleRoot());
      assertFalse(jToolBar_Separator0.isFocusTraversalPolicyProvider());
      assertNotNull(jToolBar_Separator0);
      
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jToolBar_Separator0, (Border) strokeBorder0, 0, (-3248), (-449), 1);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertTrue(jToolBar_Separator0.getFocusTraversalKeysEnabled());
      assertFalse(jToolBar_Separator0.getIgnoreRepaint());
      assertFalse(jToolBar_Separator0.isFocusTraversalPolicySet());
      assertFalse(jToolBar_Separator0.isFocusCycleRoot());
      assertFalse(jToolBar_Separator0.isFocusTraversalPolicyProvider());
      assertEquals((-450.0), rectangle0.getMaxX(), 0.01);
      assertEquals((-3247.0), rectangle0.getY(), 0.01);
      assertEquals(1.0, rectangle0.getX(), 0.01);
      assertEquals((-3248.0), rectangle0.getMaxY(), 0.01);
      assertEquals((-3247.0), rectangle0.getMinY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(1.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1.0), rectangle0.getHeight(), 0.01);
      assertEquals((-451.0), rectangle0.getWidth(), 0.01);
      assertEquals((-224.5), rectangle0.getCenterX(), 0.01);
      assertEquals((-3247.5), rectangle0.getCenterY(), 0.01);
      assertNotNull(rectangle0);
      assertEquals(1, rectangle0.x);
      assertEquals((-3247), rectangle0.y);
      assertEquals((-451), rectangle0.width);
      assertEquals((-1), rectangle0.height);
      
      coordSystem0.setBounds(rectangle0);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertTrue(jToolBar_Separator0.getFocusTraversalKeysEnabled());
      assertFalse(jToolBar_Separator0.getIgnoreRepaint());
      assertFalse(jToolBar_Separator0.isFocusTraversalPolicySet());
      assertFalse(jToolBar_Separator0.isFocusCycleRoot());
      assertFalse(jToolBar_Separator0.isFocusTraversalPolicyProvider());
      assertEquals((-450.0), rectangle0.getMaxX(), 0.01);
      assertEquals((-3247.0), rectangle0.getY(), 0.01);
      assertEquals(1.0, rectangle0.getX(), 0.01);
      assertEquals((-3248.0), rectangle0.getMaxY(), 0.01);
      assertEquals((-3247.0), rectangle0.getMinY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(1.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1.0), rectangle0.getHeight(), 0.01);
      assertEquals((-451.0), rectangle0.getWidth(), 0.01);
      assertEquals((-224.5), rectangle0.getCenterX(), 0.01);
      assertEquals((-3247.5), rectangle0.getCenterY(), 0.01);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, rectangle0.x);
      assertEquals((-3247), rectangle0.y);
      assertEquals((-451), rectangle0.width);
      assertEquals((-1), rectangle0.height);
      
      Axis axis0 = coordSystem0.getXAxis();
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals((-498), axis0.getLength());
      assertEquals(1, axis0.getAlignment());
      assertNotNull(axis0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(2, Axis.VERTICAL);
      assertEquals(4, Axis.LINEAR);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(objectChartDataModel0);
      
      DecimalFormat decimalFormat0 = new DecimalFormat();
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertTrue(decimalFormat0.isGroupingUsed());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals(0, decimalFormat0.getMinimumFractionDigits());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals(3, decimalFormat0.getGroupingSize());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertEquals("#,##0.###", decimalFormat0.toPattern());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals("-", decimalFormat0.getNegativePrefix());
      assertEquals("#,##0.###", decimalFormat0.toLocalizedPattern());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertEquals(3, decimalFormat0.getMaximumFractionDigits());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals("", decimalFormat0.getPositivePrefix());
      assertNotNull(decimalFormat0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, decimalFormat0, false, false, false);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertTrue(decimalFormat0.isGroupingUsed());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals(0, decimalFormat0.getMinimumFractionDigits());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals(3, decimalFormat0.getGroupingSize());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertEquals("#,##0.###", decimalFormat0.toPattern());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals("-", decimalFormat0.getNegativePrefix());
      assertEquals("#,##0.###", decimalFormat0.toLocalizedPattern());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertEquals(3, decimalFormat0.getMaximumFractionDigits());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals("", decimalFormat0.getPositivePrefix());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertFalse(coordSystem0.isPaintAltTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      int int0 = coordSystem0.getTopMargin();
      assertEquals(20, int0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertTrue(decimalFormat0.isGroupingUsed());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals(0, decimalFormat0.getMinimumFractionDigits());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals(3, decimalFormat0.getGroupingSize());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertEquals("#,##0.###", decimalFormat0.toPattern());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals("-", decimalFormat0.getNegativePrefix());
      assertEquals("#,##0.###", decimalFormat0.toLocalizedPattern());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertEquals(3, decimalFormat0.getMaximumFractionDigits());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals("", decimalFormat0.getPositivePrefix());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertFalse(coordSystem0.isPaintAltTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      
      Axis axis0 = coordSystem0.yaxis;
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(2, axis0.getAlignment());
      assertNotNull(axis0);
      assertEquals(4, Axis.LINEAR);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(2, Axis.VERTICAL);
      assertEquals(3, Axis.LOGARITHMIC);
      
      coordSystem0.setSecondYAxis(axis0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(2, axis0.getAlignment());
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(4, Axis.LINEAR);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(2, Axis.VERTICAL);
      assertEquals(3, Axis.LOGARITHMIC);
      
      Axis axis1 = coordSystem0.getSecondYAxis();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(2, axis1.getAlignment());
      assertEquals(Integer.MAX_VALUE, axis1.getLength());
      assertNotNull(axis1);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(2, Axis.VERTICAL);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(4, Axis.LINEAR);
      assertSame(axis1, axis0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      
      int int0 = coordSystem0.getRightMargin();
      assertEquals(30, int0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertNotNull(editableChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      
      int int0 = coordSystem0.getLeftMargin();
      assertEquals(50, int0);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      
      coordSystem0.setTopMargin(0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(1.0737418085E9, rectangle0.getCenterY(), 0.01);
      assertEquals(49.0, rectangle0.getX(), 0.01);
      assertEquals(2.147483569E9, rectangle0.getWidth(), 0.01);
      assertEquals((-1.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1.0), rectangle0.getY(), 0.01);
      assertEquals(1.0737418335E9, rectangle0.getCenterX(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(2.147483618E9, rectangle0.getMaxY(), 0.01);
      assertEquals(2.147483618E9, rectangle0.getMaxX(), 0.01);
      assertEquals(49.0, rectangle0.getMinX(), 0.01);
      assertEquals(2.147483619E9, rectangle0.getHeight(), 0.01);
      assertNotNull(rectangle0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(2147483619, rectangle0.height);
      assertEquals(49, rectangle0.x);
      assertEquals(2147483569, rectangle0.width);
      assertEquals((-1), rectangle0.y);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      
      coordSystem0.setBottomMargin((-138));
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals((-2.147483529E9), rectangle0.getHeight(), 0.01);
      assertEquals((-2.14748351E9), rectangle0.getMaxY(), 0.01);
      assertEquals(2.147483618E9, rectangle0.getMaxX(), 0.01);
      assertEquals(49.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1.0737417455E9), rectangle0.getCenterY(), 0.01);
      assertEquals(2.147483569E9, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(49.0, rectangle0.getX(), 0.01);
      assertEquals(1.0737418335E9, rectangle0.getCenterX(), 0.01);
      assertEquals(19.0, rectangle0.getMinY(), 0.01);
      assertEquals(19.0, rectangle0.getY(), 0.01);
      assertNotNull(rectangle0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(2147483569, rectangle0.width);
      assertEquals(49, rectangle0.x);
      assertEquals(19, rectangle0.y);
      assertEquals((-2147483529), rectangle0.height);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, false, true, true);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      coordSystem0.setLeftMargin((-153));
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals((-2.147483678E9), rectangle0.getMaxX(), 0.01);
      assertEquals(2.147483618E9, rectangle0.getMaxY(), 0.01);
      assertEquals(2.147483599E9, rectangle0.getHeight(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals((-154.0), rectangle0.getMinX(), 0.01);
      assertEquals((-154.0), rectangle0.getX(), 0.01);
      assertEquals((-2.147483524E9), rectangle0.getWidth(), 0.01);
      assertEquals(1.0737418185E9, rectangle0.getCenterY(), 0.01);
      assertEquals(19.0, rectangle0.getMinY(), 0.01);
      assertEquals(19.0, rectangle0.getY(), 0.01);
      assertEquals((-1.073741916E9), rectangle0.getCenterX(), 0.01);
      assertNotNull(rectangle0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals((-2147483524), rectangle0.width);
      assertEquals(2147483599, rectangle0.height);
      assertEquals((-154), rectangle0.x);
      assertEquals(19, rectangle0.y);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertNotNull(editableChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      
      Axis axis0 = coordSystem0.yaxis;
      assertEquals(2, axis0.getAlignment());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertNotNull(axis0);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(2, Axis.VERTICAL);
      assertEquals(4, Axis.LINEAR);
      assertEquals(1, Axis.HORIZONTAL);
      
      axis0.length = 0;
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(2, axis0.getAlignment());
      assertEquals(0, axis0.getLength());
      
      Axis axis1 = coordSystem0.getFirstYAxis();
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(2, axis1.getAlignment());
      assertEquals(0, axis1.getLength());
      assertNotNull(axis1);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(4, Axis.LINEAR);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(2, Axis.VERTICAL);
      assertEquals(3, Axis.LOGARITHMIC);
      assertSame(axis1, axis0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[][] doubleArray0 = new double[1][2];
      double[] doubleArray1 = new double[6];
      doubleArray1[1] = (-396.2079535);
      doubleArray0[0] = doubleArray1;
      String[] stringArray0 = new String[1];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(doubleArray0, doubleArray1, stringArray0);
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertNotNull(editableChartDataModel0);
      assertArrayEquals(new double[] {0.0, (-396.2079535), 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertEquals(1, doubleArray0.length);
      assertEquals(6, doubleArray1.length);
      assertEquals(1, stringArray0.length);
      
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, (DecimalFormat) null, true, true, true);
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertNotNull(coordSystem0);
      assertArrayEquals(new double[] {0.0, (-396.2079535), 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, doubleArray0.length);
      assertEquals(6, doubleArray1.length);
      assertEquals(1, stringArray0.length);
      
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform(0);
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(5420092.221848848, affineTransform0.getScaleX(), 0.01);
      assertEquals((-5420092.221848848), affineTransform0.getScaleY(), 0.01);
      assertEquals(0.0, affineTransform0.getShearY(), 0.01);
      assertEquals(2.147483697E9, affineTransform0.getTranslateX(), 0.01);
      assertEquals((-29.99999976158142), affineTransform0.getTranslateY(), 0.01);
      assertEquals((-2.9377399693346383E13), affineTransform0.getDeterminant(), 0.01);
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertNotNull(affineTransform0);
      assertArrayEquals(new double[] {0.0, (-396.2079535), 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, doubleArray0.length);
      assertEquals(6, doubleArray1.length);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, false, true, true);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      coordSystem0.setLeftMargin((-153));
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform((-1896));
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(-0.0, affineTransform0.getDeterminant(), 0.01);
      assertEquals(2.147483647E9, affineTransform0.getScaleX(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertEquals(-0.0, affineTransform0.getScaleY(), 0.01);
      assertEquals(0.0, affineTransform0.getShearY(), 0.01);
      assertEquals((-153.0), affineTransform0.getTranslateX(), 0.01);
      assertNotNull(affineTransform0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[][] intArray0 = new int[3][2];
      double[] doubleArray0 = new double[1];
      String[] stringArray0 = new String[4];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(3, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      assertNotNull(editableChartDataModel0);
      assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(4, stringArray0.length);
      
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(3, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertNotNull(coordSystem0);
      assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(4, stringArray0.length);
      
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform(Integer.MIN_VALUE);
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(3, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(0.0, affineTransform0.getShearY(), 0.01);
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertEquals(-0.0, affineTransform0.getScaleY(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, affineTransform0.getScaleX(), 0.01);
      assertEquals(Double.NaN, affineTransform0.getDeterminant(), 0.01);
      assertEquals(Double.NaN, affineTransform0.getTranslateX(), 0.01);
      assertNotNull(affineTransform0);
      assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      int int0 = coordSystem0.getBottomMargin();
      assertEquals(30, int0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertNotNull(editableChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "^6Gp>7lzFXK;RNI3", "B*");
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("^6Gp>7lzFXK;RNI3", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("B*", coordSystem0.getYAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("^6Gp>7lzFXK;RNI3", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("B*", coordSystem0.getYAxisUnit());
      assertEquals(49.0, rectangle0.getX(), 0.01);
      assertEquals(19.0, rectangle0.getMinY(), 0.01);
      assertEquals(1.0737418335E9, rectangle0.getCenterX(), 0.01);
      assertEquals(2.147483618E9, rectangle0.getMaxY(), 0.01);
      assertEquals(2.147483618E9, rectangle0.getMaxX(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(1.0737418185E9, rectangle0.getCenterY(), 0.01);
      assertEquals(49.0, rectangle0.getMinX(), 0.01);
      assertEquals(19.0, rectangle0.getY(), 0.01);
      assertEquals(2.147483569E9, rectangle0.getWidth(), 0.01);
      assertEquals(2.147483599E9, rectangle0.getHeight(), 0.01);
      assertNotNull(rectangle0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(19, rectangle0.y);
      assertEquals(49, rectangle0.x);
      assertEquals(2147483599, rectangle0.height);
      assertEquals(2147483569, rectangle0.width);
      
      // Undeclared exception!
      try { 
        coordSystem0.setBounds(rectangle0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, false, true, true);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(49.0, rectangle0.getMinX(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(19.0, rectangle0.getY(), 0.01);
      assertEquals(2.147483569E9, rectangle0.getWidth(), 0.01);
      assertEquals(2.147483599E9, rectangle0.getHeight(), 0.01);
      assertEquals(49.0, rectangle0.getX(), 0.01);
      assertEquals(19.0, rectangle0.getMinY(), 0.01);
      assertEquals(1.0737418185E9, rectangle0.getCenterY(), 0.01);
      assertEquals(2.147483618E9, rectangle0.getMaxX(), 0.01);
      assertEquals(1.0737418335E9, rectangle0.getCenterX(), 0.01);
      assertEquals(2.147483618E9, rectangle0.getMaxY(), 0.01);
      assertNotNull(rectangle0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(49, rectangle0.x);
      assertEquals(2147483599, rectangle0.height);
      assertEquals(2147483569, rectangle0.width);
      assertEquals(19, rectangle0.y);
      
      // Undeclared exception!
      try { 
        coordSystem0.setBounds(rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (String) null, "1~");
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("1~", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertNull(coordSystem0.getXAxisUnit());
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("1~", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertNull(coordSystem0.getXAxisUnit());
      assertEquals(2.147483569E9, rectangle0.getWidth(), 0.01);
      assertEquals(1.0737418185E9, rectangle0.getCenterY(), 0.01);
      assertEquals(19.0, rectangle0.getMinY(), 0.01);
      assertEquals(1.0737418335E9, rectangle0.getCenterX(), 0.01);
      assertEquals(2.147483618E9, rectangle0.getMaxY(), 0.01);
      assertEquals(2.147483618E9, rectangle0.getMaxX(), 0.01);
      assertEquals(2.147483599E9, rectangle0.getHeight(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(19.0, rectangle0.getY(), 0.01);
      assertEquals(49.0, rectangle0.getMinX(), 0.01);
      assertEquals(49.0, rectangle0.getX(), 0.01);
      assertNotNull(rectangle0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(49, rectangle0.x);
      assertEquals(19, rectangle0.y);
      assertEquals(2147483599, rectangle0.height);
      assertEquals(2147483569, rectangle0.width);
      
      // Undeclared exception!
      try { 
        coordSystem0.setBounds(rectangle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null string passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertNotNull(objectChartDataModel0);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      
      // Undeclared exception!
      try { 
        coordSystem0.render((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "", "");
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        coordSystem0.paintDefault(graphics2D0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "2>8*[f}srA^0`[(}", "2>8*[f}srA^0`[(}");
      // Undeclared exception!
      try { 
        coordSystem0.paintDefault((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystem0.getDefaultTransform(0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CoordSystem coordSystem0 = null;
      try {
        coordSystem0 = new CoordSystem((ChartDataModel) null, (DecimalFormat) null, true, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CoordSystem coordSystem0 = null;
      try {
        coordSystem0 = new CoordSystem((ChartDataModel) null, "au", "au");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CoordSystem coordSystem0 = null;
      try {
        coordSystem0 = new CoordSystem((ChartDataModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.setTransform((AffineTransform) null, 0);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      Axis axis0 = coordSystem0.getSecondYAxis();
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertNull(axis0);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("y", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Font font0 = coordSystem0.getFont();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("sans", font0.getName());
      assertEquals(9, font0.getSize());
      assertFalse(font0.isBold());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      FontRenderContext fontRenderContext0 = coordSystem0.getFontRenderContext();
      assertFalse(fontRenderContext0.isAntiAliased());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "mI(K{Md&", "mI(K{Md&");
      coordSystem0.getXDecimalFormat();
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("mI(K{Md&", coordSystem0.getXAxisUnit());
      assertEquals("mI(K{Md&", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      String string0 = coordSystem0.getYAxisUnit();
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", string0);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      String string0 = coordSystem0.getXAxisUnit();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", string0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.setYAxisUnit(" ");
      assertEquals(" ", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.getYDecimalFormat();
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, false, true, true);
      coordSystem0.setXAxisUnit("c&#eB");
      assertEquals("c&#eB", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, false, true, true);
      ChartDataModelConstraints chartDataModelConstraints0 = coordSystem0.getChartDataModelConstraints(1);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(chartDataModelConstraints0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "djeT;cEg2od]ia#m6cB", "B35o`/=Y'[N7i");
      ChartDataModelConstraints chartDataModelConstraints0 = coordSystem0.getChartDataModelConstraints(0);
      assertEquals("B35o`/=Y'[N7i", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNotNull(chartDataModelConstraints0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("djeT;cEg2od]ia#m6cB", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.getPointToPixelTranslator(0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, false, true, true);
      // Undeclared exception!
      try { 
        coordSystem0.getDefaultTransform(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (String) null, (String) null);
      coordSystem0.getTransform((-879));
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.setTransform((AffineTransform) null, 1);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      AffineTransform affineTransform0 = new AffineTransform();
      coordSystem0.setTransform(affineTransform0, 2);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, decimalFormat0, false, false, false);
      boolean boolean0 = coordSystem0.isPaintOnlyTick();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintLabels());
      assertFalse(boolean0);
      assertFalse(coordSystem0.isPaintAltTick());
      assertFalse(coordSystem0.isDrawArrows());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "", "");
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        coordSystem0.render(graphics2D0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (String) null, (String) null);
      assertTrue(coordSystem0.isPaintLabels());
      
      coordSystem0.setPaintLabels(false);
      assertFalse(coordSystem0.isPaintLabels());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      boolean boolean0 = coordSystem0.isDrawArrows();
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(boolean0);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      Dimension dimension0 = coordSystem0.getPreferredSize();
      assertEquals(Integer.MIN_VALUE, dimension0.width);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(Integer.MIN_VALUE, dimension0.height);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.setFont((Font) null);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (String) null, (String) null);
      boolean boolean0 = coordSystem0.isPaintAltTick();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(boolean0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Axis axis0 = coordSystem0.getXAxis();
      coordSystem0.setSecondYAxis(axis0);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(1, axis0.getAlignment());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isDrawArrows());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "^6Gp>7lzFXK;RNI3", "B*");
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      coordSystem0.setBounds(rectangle0);
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform((-39));
      assertEquals((-128.0), affineTransform0.getScaleX(), 0.01);
      assertEquals(0.0, affineTransform0.getShearY(), 0.01);
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertEquals(32.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.0, affineTransform0.getDeterminant(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("B*", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "", "");
      coordSystem0.getPointToPixelTranslator(15);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("", coordSystem0.getXAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
  }
}
