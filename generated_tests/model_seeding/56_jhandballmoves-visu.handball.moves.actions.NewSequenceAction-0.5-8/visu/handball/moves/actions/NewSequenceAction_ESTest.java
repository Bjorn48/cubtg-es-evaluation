/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 16:22:46 GMT 2019
 */

package visu.handball.moves.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.event.ActionEvent;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.model.player.Defender;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NewSequenceAction_ESTest extends NewSequenceAction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      newSequenceAction0.modelChanged();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NewSequenceAction newSequenceAction0 = null;
      try {
        newSequenceAction0 = new NewSequenceAction((HandballModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("visu.handball.moves.actions.NewSequenceAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      Defender defender0 = new Defender(407, 407);
      MoveEvent moveEvent0 = new MoveEvent(defender0, 33);
      handballModel0.addMoveEvent(moveEvent0);
      MoveEvent moveEvent1 = new MoveEvent(defender0, 0, 0);
      handballModel0.setActualMoveEvent(moveEvent1);
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      handballModel0.setState(handballModel_State0);
      assertFalse(handballModel0.isBallSet());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      Defender defender0 = new Defender(0, 0);
      MoveEvent moveEvent0 = new MoveEvent(defender0, 0, 0);
      handballModel0.setActualMoveEvent(moveEvent0);
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      handballModel0.setState(handballModel_State0);
      assertEquals(0, handballModel0.getAcutalSequenceNr());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      handballModel0.setState(handballModel_State0);
      assertEquals(0, handballModel0.getAcutalSequenceNr());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      Defender defender0 = new Defender(1, 1);
      MoveEvent moveEvent0 = new MoveEvent(defender0, 1, 1);
      handballModel0.setActualMoveEvent(moveEvent0);
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      ActionEvent actionEvent0 = new ActionEvent(defaultTableModel0, 1, "", 1, 173);
      newSequenceAction0.actionPerformed(actionEvent0);
      assertEquals("", actionEvent0.getActionCommand());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      newSequenceAction0.actionPerformed((ActionEvent) null);
  }
}
