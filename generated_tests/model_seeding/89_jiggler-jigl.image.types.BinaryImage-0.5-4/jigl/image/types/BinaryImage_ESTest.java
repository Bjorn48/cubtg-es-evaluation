/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 12:31:27 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.JLayeredPane;
import jigl.image.ROI;
import jigl.image.types.BinaryImage;
import jigl.image.types.GrayImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.KernelType;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BinaryImage_ESTest extends BinaryImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      RealGrayImage realGrayImage0 = new RealGrayImage(imageKernel0);
      realGrayImage0.X();
      BinaryImage binaryImage0 = new BinaryImage(3, 3);
      BinaryImage binaryImage1 = binaryImage0.difference((BinaryImage) null);
      Byte.toUnsignedLong((byte)89);
      Byte byte0 = new Byte((byte) (-4));
      binaryImage1.max();
      BinaryImage binaryImage2 = new BinaryImage();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Float float0 = new Float((double) 58);
      Float float1 = new Float((double) 58);
      Float float2 = new Float(4.0);
      float2.floatValue();
      Float float3 = new Float(4.0);
      Float float4 = new Float(4.0F);
      float4.floatValue();
      RealGrayImage realGrayImage0 = mock(RealGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(58).when(realGrayImage0).X();
      doReturn(58).when(realGrayImage0).Y();
      doReturn(float0, float1, float0, float0, 4.0F).when(realGrayImage0).get(anyInt() , anyInt());
      BinaryImage binaryImage0 = new BinaryImage(realGrayImage0);
      BinaryImage binaryImage1 = binaryImage0.shift((-1423), (-900));
      binaryImage1.toString();
      Byte byte0 = new Byte((byte)16);
      BinaryImage binaryImage2 = binaryImage0.union(binaryImage1);
      binaryImage2.X();
      ROI rOI0 = new ROI(1479, (-4323), (-604), (-4323));
      rOI0.ux();
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4323
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((RealGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 1919);
      binaryImage0.getJavaImage();
      binaryImage0.min();
      Byte.compare((byte)11, (byte)0);
      Byte.toUnsignedInt((byte)0);
      Byte.toUnsignedInt((byte)1);
      int int0 = (-924);
      Byte.toUnsignedLong((byte)1);
      Byte byte0 = new Byte((byte)78);
      byte0.byteValue();
      // Undeclared exception!
      try { 
        binaryImage0.set((-879), 1901, (Byte) (byte)78);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -879
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RealGrayImage realGrayImage0 = mock(RealGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(realGrayImage0).X();
      doReturn(0).when(realGrayImage0).Y();
      BinaryImage binaryImage0 = new BinaryImage(realGrayImage0);
      BinaryImage binaryImage1 = binaryImage0.shift((-1423), (-900));
      binaryImage1.toString();
      binaryImage1.toString();
      binaryImage0.max();
      Byte.compare((byte) (-13), (byte) (-13));
      int int0 = 2;
      ROI rOI0 = new ROI((-1476), Integer.MAX_VALUE, 1615, (-387));
      rOI0.setROI(5, 255, (-1476), 1615);
      rOI0.setROI(1148, (-662), 2, Integer.MAX_VALUE);
      Byte.toUnsignedLong((byte)25);
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 0;
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.Y();
      int int1 = 9;
      // Undeclared exception!
      try { 
        binaryImage0.get(9, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(53, 1642);
      binaryImage1.copy();
      int int0 = 255;
      // Undeclared exception!
      binaryImage1.shift(255, 1642);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      RealGrayImage realGrayImage0 = new RealGrayImage(imageKernel0);
      realGrayImage0.X();
      BinaryImage binaryImage0 = new BinaryImage(3, 3);
      Float float0 = new Float((-581.6749F));
      float0.floatValue();
      BinaryImage binaryImage1 = new BinaryImage(imageKernel0);
      binaryImage1.shift((-1423), (-796));
      BinaryImage binaryImage2 = binaryImage0.compliment();
      binaryImage2.shift((-16777216), (-796));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = binaryImage0.difference((BinaryImage) null);
      binaryImage1.toString();
      Byte.toUnsignedLong((byte)17);
      Byte byte0 = new Byte((byte) (-4));
      binaryImage1.max();
      BinaryImage binaryImage2 = binaryImage0.compliment();
      binaryImage1.intersection(binaryImage2);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 1919);
      binaryImage0.getJavaImage();
      binaryImage0.min();
      Byte.compare((byte)0, (byte)95);
      Byte.toUnsignedInt((byte)86);
      byte byte0 = (byte) (-74);
      Byte.toUnsignedInt((byte) (-74));
      Byte.toUnsignedLong((byte)0);
      Byte.toUnsignedLong((byte)86);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      try { 
        Byte.valueOf((String) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = binaryImage0.shift(255, 255);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        binaryImage1.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.difference(binaryImage0);
      byte byte0 = (byte)17;
      Byte.toUnsignedLong((byte)109);
      Byte byte1 = new Byte((byte)125);
      ROI rOI0 = new ROI(1234, (-16777216), 1816, (-736));
      // Undeclared exception!
      try { 
        binaryImage0.set((int) (byte)125, 1816, byte1, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 1;
      Integer integer0 = Integer.valueOf(128);
      integer0.byteValue();
      GrayImage grayImage0 = mock(GrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(grayImage0).X();
      doReturn(1).when(grayImage0).Y();
      doReturn(integer0).when(grayImage0).get(anyInt() , anyInt());
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      binaryImage0.copy();
      byte byte0 = (byte)100;
      Byte.compare((byte)100, (byte)100);
      Byte byte1 = new Byte((byte) (-75));
      Byte.toUnsignedLong((byte)107);
      byte byte2 = (byte)31;
      Byte.toUnsignedLong((byte)31);
      Byte byte3 = new Byte((byte) (-75));
      Byte.toUnsignedLong((byte)32);
      // Undeclared exception!
      try { 
        binaryImage0.set((int) (byte)0, 51, byte3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Float float0 = new Float((double) 58);
      Float float1 = new Float((double) 58);
      Float float2 = new Float(4.0);
      float2.floatValue();
      Float float3 = new Float(4.0);
      Float float4 = new Float(4.0F);
      float4.floatValue();
      RealGrayImage realGrayImage0 = mock(RealGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(58).when(realGrayImage0).X();
      doReturn(58).when(realGrayImage0).Y();
      doReturn(float0, float1, float0, float0, 4.0F).when(realGrayImage0).get(anyInt() , anyInt());
      BinaryImage binaryImage0 = new BinaryImage(realGrayImage0);
      BinaryImage binaryImage1 = binaryImage0.shift((-1423), (-900));
      binaryImage1.toString();
      Byte byte0 = new Byte((byte)16);
      binaryImage1.toString();
      // Undeclared exception!
      try { 
        binaryImage1.union((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Float float0 = new Float((double) 58);
      Float float1 = new Float((double) 58);
      Float float2 = new Float(4.0);
      float2.floatValue();
      Float float3 = new Float(4.0);
      Float float4 = new Float(4.0F);
      Byte.toUnsignedLong((byte)0);
      Byte byte0 = new Byte((byte)78);
      Byte byte1 = new Byte((byte)33);
      byte1.byteValue();
      Byte byte2 = new Byte((byte)33);
      byte[][] byteArray0 = new byte[1][3];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.min();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      ROI rOI0 = new ROI(1479, (-4323), (-604), (-4323));
      // Undeclared exception!
      try { 
        binaryImage0.set((-604), (-1513), (Byte) null, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      RealGrayImage realGrayImage0 = new RealGrayImage(imageKernel0);
      realGrayImage0.X();
      BinaryImage binaryImage0 = new BinaryImage(3, 3);
      Byte.toUnsignedLong((byte)89);
      Byte byte0 = new Byte((byte)89);
      binaryImage0.compliment();
      binaryImage0.shift((byte)89, 979);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 1919);
      binaryImage0.getJavaImage();
      binaryImage0.min();
      Byte.compare((byte)0, (byte)95);
      Byte.toUnsignedInt((byte)86);
      byte byte0 = (byte) (-74);
      Byte.toUnsignedInt((byte) (-74));
      Byte.toUnsignedLong((byte)0);
      Byte.toUnsignedLong((byte)86);
      ROI rOI0 = new ROI();
      rOI0.X();
      rOI0.setROI(42, 42, (-448), 1899);
      rOI0.Y();
      rOI0.uy();
      rOI0.X();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = binaryImage0.difference((BinaryImage) null);
      Byte.toUnsignedLong((byte)17);
      Byte byte0 = new Byte((byte) (-4));
      binaryImage0.getJavaImage();
      binaryImage1.max();
      binaryImage0.union((BinaryImage) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.shift(255, 255);
      binaryImage0.getData();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      RealGrayImage realGrayImage0 = new RealGrayImage(imageKernel0);
      realGrayImage0.X();
      BinaryImage binaryImage0 = new BinaryImage(3, 3);
      BinaryImage binaryImage1 = binaryImage0.difference((BinaryImage) null);
      Byte.toUnsignedLong((byte)89);
      Byte byte0 = new Byte((byte) (-4));
      binaryImage1.max();
      binaryImage0.compliment();
      binaryImage1.intersection(binaryImage0);
      binaryImage0.shift((byte)89, 979);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
      binaryImage0.min();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)80;
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage(53, 1598, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.toString();
      binaryImage0.copy();
      binaryImage0.getData();
      BinaryImage binaryImage1 = binaryImage0.compliment();
      binaryImage1.shift((byte) (-58), (byte) (-58));
      binaryImage0.intersection(binaryImage1);
      binaryImage0.shift((byte) (-58), (byte) (-58));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GrayImage grayImage0 = mock(GrayImage.class, new ViolatedAssumptionAnswer());
      doReturn((-278)).when(grayImage0).X();
      doReturn((-278)).when(grayImage0).Y();
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(grayImage0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      RealGrayImage realGrayImage0 = new RealGrayImage(imageKernel0);
      realGrayImage0.X();
      BinaryImage binaryImage0 = new BinaryImage(3, 3);
      BinaryImage binaryImage1 = binaryImage0.difference((BinaryImage) null);
      Integer integer0 = new Integer((byte)89);
      binaryImage1.max();
      binaryImage1.toString();
      binaryImage0.compliment();
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.copy();
      binaryImage0.getData();
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = binaryImage0.difference((BinaryImage) null);
      BinaryImage binaryImage2 = new BinaryImage(797, 797);
      binaryImage0.difference(binaryImage1);
      byte byte0 = (byte)89;
      Byte.toUnsignedLong((byte)89);
      Byte byte1 = new Byte((byte)89);
      // Undeclared exception!
      binaryImage2.compliment();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      GrayImage grayImage0 = null;
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[][] byteArray0 = new byte[8][0];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)97;
      byteArray1[1] = (byte) (-106);
      byteArray1[2] = (byte)123;
      byteArray1[3] = (byte) (-30);
      byteArray1[4] = (byte) (-42);
      byteArray1[5] = (byte)32;
      byteArray1[6] = (byte)8;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)32;
      byteArray2[1] = (byte)97;
      byteArray2[2] = (byte)97;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)24;
      byteArray3[1] = (byte) (-1);
      byteArray3[2] = (byte) (-42);
      byteArray3[3] = (byte) (-30);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte)24;
      byteArray4[1] = (byte)32;
      byteArray4[2] = (byte)24;
      byteArray4[3] = (byte)123;
      byteArray4[4] = (byte) (-1);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte)24;
      byteArray5[1] = (byte) (-30);
      byteArray5[2] = (byte) (-106);
      byteArray5[3] = (byte) (-42);
      byteArray5[4] = (byte)8;
      byteArray5[5] = (byte) (-75);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte) (-30);
      byteArray6[1] = (byte) (-30);
      byteArray6[2] = (byte)123;
      byteArray6[3] = (byte)0;
      byteArray6[4] = (byte)97;
      byteArray6[5] = (byte) (-1);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[2];
      byteArray7[0] = (byte) (-106);
      byteArray7[1] = (byte) (-1);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[4];
      byteArray8[0] = (byte)8;
      byteArray8[1] = (byte)97;
      byteArray8[2] = (byte)8;
      byteArray8[3] = (byte)97;
      byteArray0[7] = byteArray8;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.copy();
      binaryImage0.toString();
      binaryImage0.X();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage0 = new BinaryImage(imageKernel0);
      // Undeclared exception!
      try { 
        binaryImage0.difference((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Byte.toUnsignedLong((byte)17);
      Byte byte0 = new Byte((byte)17);
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.max();
      binaryImage0.X();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      RealGrayImage realGrayImage0 = new RealGrayImage(imageKernel0);
      realGrayImage0.X();
      BinaryImage binaryImage0 = new BinaryImage(3, 3);
      Byte.toUnsignedLong((byte)89);
      Byte byte0 = new Byte((byte)89);
      binaryImage0.max();
      binaryImage0.max();
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-49);
      byteArray0[4] = (byte) (-105);
      byteArray0[5] = (byte)114;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)61;
      byteArray0[8] = (byte) (-64);
      BinaryImage binaryImage0 = new BinaryImage(0, 0, byteArray0);
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Float float0 = new Float((double) 58);
      Float float1 = new Float((double) 58);
      Float float2 = new Float(4.0);
      float2.floatValue();
      Float float3 = new Float(4.0);
      Float float4 = new Float(4.0F);
      float4.floatValue();
      RealGrayImage realGrayImage0 = mock(RealGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(58).when(realGrayImage0).X();
      doReturn(58).when(realGrayImage0).Y();
      doReturn(float0, float1, float0, float0, 4.0F).when(realGrayImage0).get(anyInt() , anyInt());
      BinaryImage binaryImage0 = new BinaryImage(realGrayImage0);
      Float.min(4.0F, 4.0F);
      BinaryImage binaryImage1 = binaryImage0.shift((-1423), (-900));
      binaryImage1.toString();
      binaryImage1.getJavaImage();
      Byte byte0 = new Byte((byte)16);
      binaryImage0.union(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Float float0 = new Float((double) 58);
      Float float1 = new Float((double) 58);
      Float float2 = new Float(4.0);
      float2.floatValue();
      Float float3 = new Float(4.0);
      Float float4 = new Float(4.0F);
      float4.floatValue();
      RealGrayImage realGrayImage0 = mock(RealGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(58).when(realGrayImage0).X();
      doReturn(58).when(realGrayImage0).Y();
      doReturn(float0, float1, float0, float0, 4.0F).when(realGrayImage0).get(anyInt() , anyInt());
      BinaryImage binaryImage0 = new BinaryImage(realGrayImage0);
      BinaryImage binaryImage1 = binaryImage0.shift((-1423), (-900));
      binaryImage1.toString();
      Byte byte0 = new Byte((byte)16);
      Byte byte1 = new Byte((byte) (-66));
      binaryImage1.set(0, 37, byte1);
      binaryImage1.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      Float float0 = new Float(0.0);
      float0.floatValue();
      Float float1 = new Float(0.0);
      Float float2 = new Float(1.0F);
      Byte.toUnsignedLong((byte)0);
      Byte byte0 = new Byte((byte)0);
      Byte byte1 = new Byte((byte)0);
      byte0.byteValue();
      Byte byte2 = new Byte((byte)0);
      byte[][] byteArray0 = new byte[0][3];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.min();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integer0.intValue();
      GrayImage grayImage0 = mock(GrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(grayImage0).X();
      doReturn(1).when(grayImage0).Y();
      doReturn(200).when(grayImage0).get(anyInt() , anyInt());
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      byte[] byteArray0 = null;
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage(1, 1, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte) (-111);
      byteArray0[2] = (byte)6;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((-2090), (-2680), byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 255;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(255, (-1307), (byte[]) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      Byte byte0 = Byte.valueOf((byte)6);
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      RealGrayImage realGrayImage0 = new RealGrayImage(imageKernel0);
      realGrayImage0.X();
      BinaryImage binaryImage0 = new BinaryImage(3, 3);
      Byte.toUnsignedLong((byte)89);
      Byte byte0 = new Byte((byte) (-4));
      BinaryImage binaryImage1 = binaryImage0.compliment();
      binaryImage0.union(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RealGrayImage realGrayImage0 = mock(RealGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(realGrayImage0).X();
      doReturn((-1)).when(realGrayImage0).Y();
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(realGrayImage0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      ROI rOI0 = new ROI();
      binaryImage0.copy(rOI0);
      BinaryImage binaryImage1 = new BinaryImage();
      binaryImage1.toString();
      Byte.toUnsignedLong((byte)40);
      Byte byte0 = new Byte((byte)33);
      binaryImage0.max();
      binaryImage1.compliment();
      // Undeclared exception!
      try { 
        binaryImage0.intersection(binaryImage1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      try { 
        Byte.valueOf((String) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.difference((BinaryImage) null);
      Byte byte0 = new Byte((byte) (-31));
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      ROI rOI0 = new ROI();
      rOI0.setROI(16, 16, 2189, 48);
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Float float0 = new Float((double) 58);
      Float float1 = new Float((double) 58);
      Float float2 = new Float(4.0);
      float2.floatValue();
      Float float3 = new Float(4.0);
      Float float4 = new Float(4.0F);
      float4.floatValue();
      RealGrayImage realGrayImage0 = mock(RealGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(58).when(realGrayImage0).X();
      doReturn(58).when(realGrayImage0).Y();
      doReturn(float0, float1, float0, float0, 4.0F).when(realGrayImage0).get(anyInt() , anyInt());
      BinaryImage binaryImage0 = new BinaryImage(realGrayImage0);
      BinaryImage binaryImage1 = binaryImage0.shift((-1423), (-900));
      binaryImage1.toString();
      Byte byte0 = new Byte((byte)16);
      // Undeclared exception!
      try { 
        binaryImage0.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = 0;
      BinaryImage binaryImage0 = new BinaryImage(0, 9);
      binaryImage0.Y();
      int int1 = 9;
      // Undeclared exception!
      try { 
        binaryImage0.get(9, 9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Float float0 = new Float((double) 58);
      Float float1 = new Float((double) 58);
      Float float2 = new Float(4.0);
      float2.floatValue();
      Float float3 = new Float(4.0);
      Float float4 = new Float(4.0);
      float4.floatValue();
      RealGrayImage realGrayImage0 = mock(RealGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(58).when(realGrayImage0).X();
      doReturn(58).when(realGrayImage0).Y();
      doReturn(float0, float1, float0, float0, 4.0F).when(realGrayImage0).get(anyInt() , anyInt());
      BinaryImage binaryImage0 = new BinaryImage(realGrayImage0);
      BinaryImage binaryImage1 = binaryImage0.shift((-1423), (-900));
      binaryImage1.toString();
      Byte byte0 = new Byte((byte)16);
      Byte byte1 = new Byte((byte) (-66));
      binaryImage1.set(0, 37, byte1);
      binaryImage1.shift(23, 16);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.copy();
      binaryImage0.getData();
      Byte byte0 = new Byte((byte) (-114));
      Byte byte1 = new Byte((byte)16);
      byte1.byteValue();
      // Undeclared exception!
      try { 
        binaryImage0.set((int) (byte) (-114), (int) (byte) (-58), (Byte) (byte)16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      ROI rOI0 = new ROI();
      rOI0.setROI(16, 50, 46, 34);
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 34
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = binaryImage0.difference((BinaryImage) null);
      Byte.toUnsignedLong((byte)17);
      Byte byte0 = new Byte((byte) (-4));
      binaryImage1.max();
      binaryImage0.union((BinaryImage) null);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      GrayImage grayImage0 = mock(GrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(grayImage0).X();
      doReturn(1).when(grayImage0).Y();
      doReturn((Integer) null).when(grayImage0).get(anyInt() , anyInt());
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(grayImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Float float0 = new Float((double) 58);
      Float float1 = new Float((double) 58);
      Float float2 = new Float(4.0);
      float2.floatValue();
      Float float3 = new Float(4.0);
      BinaryImage binaryImage0 = new BinaryImage(58, 58);
      BinaryImage binaryImage1 = new BinaryImage();
      BinaryImage binaryImage2 = binaryImage0.difference(binaryImage1);
      Byte.toUnsignedLong((byte)89);
      Byte byte0 = new Byte((byte) (-74));
      binaryImage0.max();
      BinaryImage binaryImage3 = binaryImage2.compliment();
      binaryImage3.shift((byte)89, 57);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.copy();
      binaryImage0.getData();
      Byte byte0 = Byte.valueOf((byte) (-58));
      // Undeclared exception!
      try { 
        binaryImage0.set(2555, 2555, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.copy();
      BinaryImage binaryImage1 = binaryImage0.shift(1, 465);
      binaryImage1.getData();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      Byte byte0 = new Byte((byte) (-128));
      byte byte1 = (byte) (-99);
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      RealGrayImage realGrayImage0 = new RealGrayImage(imageKernel0);
      realGrayImage0.X();
      BinaryImage binaryImage0 = new BinaryImage(3, 3);
      BinaryImage binaryImage1 = binaryImage0.difference((BinaryImage) null);
      Byte.toUnsignedLong((byte)89);
      Byte byte0 = new Byte((byte) (-4));
      binaryImage1.max();
      BinaryImage binaryImage2 = new BinaryImage(realGrayImage0);
      binaryImage2.max();
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage3 = new BinaryImage(byteArray0);
      // Undeclared exception!
      try { 
        binaryImage0.union(binaryImage3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
      Byte byte0 = binaryImage0.min();
      byte byte1 = (byte)0;
      Byte.compare((byte)0, (byte)0);
      Byte.toUnsignedInt((byte)0);
      Byte.toUnsignedInt((byte) (-74));
      Byte.toUnsignedLong((byte)0);
      Byte.toUnsignedLong((byte)0);
      // Undeclared exception!
      try { 
        binaryImage0.set((-924), 255, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      RealGrayImage realGrayImage0 = new RealGrayImage(imageKernel0);
      realGrayImage0.X();
      BinaryImage binaryImage0 = new BinaryImage(3, 3);
      Float float0 = new Float((-581.6749F));
      realGrayImage0.getJavaImage();
      float0.floatValue();
      BinaryImage binaryImage1 = new BinaryImage(imageKernel0);
      binaryImage0.toString();
      Byte byte0 = new Byte((byte)16);
      binaryImage1.union(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Float float0 = new Float((double) 58);
      Float float1 = new Float((double) 58);
      Float float2 = new Float(4.0);
      float2.floatValue();
      Float float3 = new Float(4.0);
      float3.floatValue();
      Float float4 = new Float(251.48F);
      float4.floatValue();
      RealGrayImage realGrayImage0 = mock(RealGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(58).when(realGrayImage0).X();
      doReturn(58).when(realGrayImage0).Y();
      doReturn(float0, float1, float0, float0, 251.48F).when(realGrayImage0).get(anyInt() , anyInt());
      BinaryImage binaryImage0 = new BinaryImage(realGrayImage0);
      BinaryImage binaryImage1 = binaryImage0.shift((-1423), (-900));
      binaryImage1.toString();
      binaryImage1.toString();
      binaryImage0.max();
      Byte.compare((byte) (-13), (byte) (-13));
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      RealGrayImage realGrayImage0 = new RealGrayImage(imageKernel0);
      realGrayImage0.X();
      BinaryImage binaryImage0 = new BinaryImage(3, 3);
      BinaryImage binaryImage1 = binaryImage0.difference((BinaryImage) null);
      Byte.toUnsignedLong((byte)89);
      Byte byte0 = new Byte((byte) (-4));
      binaryImage1.max();
      BinaryImage binaryImage2 = binaryImage0.compliment();
      binaryImage2.max();
      binaryImage1.compliment();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.min();
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((-21), 529);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(0, (byte)80, (byte[]) null);
      binaryImage1.copy();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      GrayImage grayImage0 = mock(GrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(grayImage0).X();
      doReturn(0).when(grayImage0).Y();
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      binaryImage0.copy();
      int int0 = 1370;
      BinaryImage binaryImage1 = binaryImage0.shift(1370, 1370);
      binaryImage0.shift(1370, 8);
      // Undeclared exception!
      try { 
        binaryImage1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 1919);
      binaryImage0.getJavaImage();
      binaryImage0.min();
      Byte byte0 = new Byte((byte)9);
      Integer integer0 = new Integer((byte)95);
      // Undeclared exception!
      try { 
        binaryImage0.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage0 = new BinaryImage(imageKernel0);
      BinaryImage binaryImage1 = binaryImage0.shift((-1423), (-900));
      binaryImage1.toString();
      Byte byte0 = new Byte((byte) (-1));
      Byte byte1 = new Byte((byte)118);
      int int0 = (-314);
      // Undeclared exception!
      try { 
        binaryImage0.set((-314), (-900), byte1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -900
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }
}
