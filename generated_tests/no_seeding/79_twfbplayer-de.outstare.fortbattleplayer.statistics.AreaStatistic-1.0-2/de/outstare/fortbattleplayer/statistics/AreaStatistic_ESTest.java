/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 14:55:14 GMT 2019
 */

package de.outstare.fortbattleplayer.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import de.outstare.fortbattleplayer.model.Area;
import de.outstare.fortbattleplayer.model.CharacterClass;
import de.outstare.fortbattleplayer.model.CombatantSide;
import de.outstare.fortbattleplayer.model.CombatantState;
import de.outstare.fortbattleplayer.model.Weapon;
import de.outstare.fortbattleplayer.model.impl.SimpleArea;
import de.outstare.fortbattleplayer.model.impl.SimpleCombatant;
import de.outstare.fortbattleplayer.model.impl.SimpleSector;
import de.outstare.fortbattleplayer.statistics.AreaStatistic;
import java.awt.GridBagLayout;
import java.awt.Point;
import java.awt.event.MouseWheelEvent;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AreaStatistic_ESTest extends AreaStatistic_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      areaStatistic0.addShot();
      areaStatistic0.addHit();
      areaStatistic0.addShot();
      areaStatistic0.toString();
      assertEquals(1, areaStatistic0.getHits());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      areaStatistic0.addHit();
      areaStatistic0.addCrit();
      areaStatistic0.addHit();
      areaStatistic0.toString();
      assertEquals(2, areaStatistic0.getHits());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      areaStatistic0.addShot();
      int int0 = areaStatistic0.getShots();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      areaStatistic0.addHit();
      int int0 = areaStatistic0.getHits();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      float float0 = areaStatistic0.getHitRatio();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, areaStatistic0.getShots());
      assertEquals(0, areaStatistic0.getHits());
      assertEquals(0, areaStatistic0.getCrits());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      areaStatistic0.addHit();
      areaStatistic0.addShot();
      float float0 = areaStatistic0.getHitRatio();
      assertEquals(1, areaStatistic0.getHits());
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CombatantSide combatantSide0 = CombatantSide.ATTACKER;
      Point point0 = new Point((-2587), 0);
      CharacterClass characterClass0 = CharacterClass.ADVENTURER;
      SimpleSector simpleSector0 = new SimpleSector(0, true, false, 0, 1753, true, 10, characterClass0);
      SimpleArea simpleArea0 = new SimpleArea(point0, simpleSector0);
      CombatantState combatantState0 = new CombatantState(simpleArea0, (-491), simpleArea0, false);
      SimpleCombatant simpleCombatant0 = new SimpleCombatant(combatantSide0, combatantState0, 1, " hits(", characterClass0, (Weapon) null, "");
      AreaStatistic areaStatistic0 = new AreaStatistic(simpleArea0);
      areaStatistic0.getField();
      assertEquals(0, areaStatistic0.getShots());
      assertEquals(0, areaStatistic0.getHits());
      assertEquals(0, areaStatistic0.getCrits());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Point point0 = new Point((-2587), 0);
      CharacterClass characterClass0 = CharacterClass.ADVENTURER;
      SimpleSector simpleSector0 = new SimpleSector(0, true, false, 0, 1753, true, 10, characterClass0);
      SimpleArea simpleArea0 = new SimpleArea(point0, simpleSector0);
      AreaStatistic areaStatistic0 = new AreaStatistic(simpleArea0);
      areaStatistic0.getField();
      assertEquals(0, areaStatistic0.getCrits());
      assertEquals(0, areaStatistic0.getHits());
      assertEquals(0, areaStatistic0.getShots());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, "_\"Z&vz1%6Wd");
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("", imageIcon0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jCheckBoxMenuItem0, 0, (-1L), 0, (-618), 0, (-618), 1, 0, false, (-618), 1118719, 1270, 1);
      Point point0 = mouseWheelEvent0.getLocationOnScreen();
      CharacterClass characterClass0 = CharacterClass.DUELANT;
      SimpleSector simpleSector0 = new SimpleSector(819, true, true, 1, 0, false, 1, characterClass0);
      SimpleArea simpleArea0 = new SimpleArea(point0, simpleSector0);
      AreaStatistic areaStatistic0 = new AreaStatistic(simpleArea0);
      areaStatistic0.getField();
      assertEquals(0, areaStatistic0.getHits());
      assertEquals(0, areaStatistic0.getCrits());
      assertEquals(0, areaStatistic0.getShots());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(0, 0);
      CharacterClass characterClass0 = CharacterClass.ADVENTURER;
      SimpleSector simpleSector0 = new SimpleSector((-637), true, false, 2070, 3000, true, 0, characterClass0);
      SimpleArea simpleArea0 = new SimpleArea(point0, simpleSector0);
      AreaStatistic areaStatistic0 = new AreaStatistic(simpleArea0);
      areaStatistic0.getField();
      assertEquals(0, areaStatistic0.getShots());
      assertEquals(0, areaStatistic0.getHits());
      assertEquals(0, areaStatistic0.getCrits());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      float float0 = areaStatistic0.getCritRatio();
      assertEquals(0, areaStatistic0.getCrits());
      assertEquals(0, areaStatistic0.getHits());
      assertEquals(0, areaStatistic0.getShots());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      areaStatistic0.addHit();
      areaStatistic0.addCrit();
      float float0 = areaStatistic0.getCritRatio();
      assertEquals(1, areaStatistic0.getCrits());
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = AreaStatistic.formatDecimal(0.0);
      assertEquals("0%", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      int int0 = areaStatistic0.getCrits();
      assertEquals(0, areaStatistic0.getShots());
      assertEquals(0, int0);
      assertEquals(0, areaStatistic0.getHits());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      int int0 = areaStatistic0.getHits();
      assertEquals(0, int0);
      assertEquals(0, areaStatistic0.getCrits());
      assertEquals(0, areaStatistic0.getShots());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      areaStatistic0.getField();
      assertEquals(0, areaStatistic0.getShots());
      assertEquals(0, areaStatistic0.getHits());
      assertEquals(0, areaStatistic0.getCrits());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      int int0 = areaStatistic0.getShots();
      assertEquals(0, areaStatistic0.getHits());
      assertEquals(0, int0);
      assertEquals(0, areaStatistic0.getCrits());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AreaStatistic areaStatistic0 = new AreaStatistic((Area) null);
      areaStatistic0.addCrit();
      int int0 = areaStatistic0.getCrits();
      assertEquals(1, int0);
  }
}
