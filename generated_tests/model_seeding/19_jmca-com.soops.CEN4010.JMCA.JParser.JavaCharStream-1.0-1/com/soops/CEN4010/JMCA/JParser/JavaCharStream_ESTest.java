/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 13:02:19 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.SyncFailedException;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(30);
      pipedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.tokenBegin = 0;
      javaCharStream0.GetImage();
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 101, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 62, (-1138), (byte) (-92));
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92);
      javaCharStream0.maxNextCharInd = 12;
      javaCharStream0.GetSuffix(92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-18);
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte) (-28);
      byteArray0[4] = (byte) (-36);
      byteArray0[5] = (byte)35;
      byteArray0[6] = (byte)57;
      byteArray0[7] = (byte)35;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream.hexval('b');
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-2);
      byteArray0[2] = (byte) (-2);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((byte) (-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 68, 97);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream.hexval('5');
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(0, 88);
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92);
      javaCharStream0.maxNextCharInd = 12;
      javaCharStream0.GetSuffix(92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-18);
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte) (-28);
      javaCharStream0.getEndColumn();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0);
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream(reader0, 1, 99, (-1064));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte)56;
      byteArray0[3] = (byte)86;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 165, 70);
      JavaCharStream.hexval('f');
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('f');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte) (-24);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 72, 72);
      try { 
        JavaCharStream.hexval('\uFFFD');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.GetImage();
      JavaCharStream.hexval('3');
      javaCharStream0.GetSuffix(1);
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 1, 1, (-769));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2956, 2956, 2956);
      javaCharStream0.ReInit((Reader) stringReader0, 2956, 2956, 2956);
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int int0 = (-1550);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((Reader) null, 393, (-1550), (-3009));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      char char0 = 'P';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getColumn();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)30;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-1), 1247, (-1));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 63, 822);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(101);
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 788);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 796, 788);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(30);
      pipedInputStream0.close();
      StringReader stringReader0 = new StringReader("?");
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 30);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(12);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream.hexval('D');
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      int int0 = (-1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 63);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(30);
      pipedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.tokenBegin = 0;
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0, 0, 3347);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-3563), 84, 84);
      javaCharStream0.adjustBeginLineColumn(84, 84);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 1794);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream1);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2956, 2956, 2956);
      javaCharStream0.ReInit((Reader) stringReader0, 2956, 2956, 2956);
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1308), 63);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.backup(4096);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92);
      javaCharStream0.maxNextCharInd = 12;
      javaCharStream0.GetSuffix(92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-18);
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte) (-28);
      byteArray0[4] = (byte) (-36);
      byteArray0[5] = (byte)35;
      byteArray0[6] = (byte)57;
      byteArray0[7] = (byte)35;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = (-1398);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, (-1398));
      int int1 = (-1211);
      javaCharStream0.bufsize = (-1211);
      javaCharStream0.ReInit((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn(' ');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92, 92);
      javaCharStream0.maxNextCharInd = 12;
      javaCharStream0.GetSuffix(92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-18);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream.hexval('b');
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 9, 9, (-2276));
      char[] charArray0 = new char[7];
      charArray0[0] = 'O';
      charArray0[1] = 'c';
      JavaCharStream.hexval('c');
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92);
      javaCharStream0.maxNextCharInd = 12;
      javaCharStream0.GetSuffix(92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-24);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 68, (byte)38);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream.hexval('8');
      byteArrayInputStream0.read(byteArray0);
      javaCharStream1.GetImage();
      javaCharStream0.adjustBeginLineColumn((byte) (-11), (byte) (-11));
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JavaCharStream.hexval('B');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(11);
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(12);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.buffer = null;
      javaCharStream0.maxNextCharInd = (-1);
      javaCharStream0.backup((-1023));
      stringReader0.close();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 63, (-166));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.inBuf = (-166);
      int[] intArray0 = new int[8];
      intArray0[0] = (-1);
      intArray0[1] = 63;
      intArray0[2] = (-166);
      intArray0[3] = (-166);
      intArray0[4] = 63;
      intArray0[5] = 63;
      intArray0[6] = 63;
      intArray0[7] = (-1);
      javaCharStream0.bufline = intArray0;
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.ready();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(63);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 9, 9, (-2276));
      char[] charArray0 = new char[7];
      charArray0[0] = 'O';
      charArray0[1] = 'c';
      charArray0[2] = 'O';
      charArray0[3] = 'U';
      charArray0[4] = 'O';
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92, 92);
      javaCharStream0.maxNextCharInd = 12;
      javaCharStream0.GetSuffix(92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-18);
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      char char0 = 'G';
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.skip((-1));
      stringReader0.read();
      stringReader0.close();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream.hexval('1');
      byteArrayInputStream0.read(byteArray0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(1, 76);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.tokenBegin = (-572);
      int int0 = 12;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(12, 12);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -572
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-1), (-472));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 10, (-1660), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte)56;
      byteArray0[3] = (byte)86;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 165, 70);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, (-646), (-1427), (byte) (-56));
      char char0 = 'J';
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4096);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      char char0 = 'T';
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = "?";
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JavaCharStream.hexval('E');
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-102);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte) (-102));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (byte)0, (byte) (-102));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((InputStream) dataInputStream0);
      try { 
        dataInputStream0.readUnsignedShort();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 63, 63);
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4096);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92);
      javaCharStream0.maxNextCharInd = 12;
      javaCharStream0.GetSuffix(92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-24);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char char0 = ']';
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('w');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      char char0 = '[';
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte) (-24);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-2713), (-2713));
      javaCharStream0.UpdateLineColumn('\u0000');
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)119;
      sequenceInputStream0.read(byteArray0, (int) (byte)70, (int) (byte) (-116));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 0);
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0, 0, (int) (byte)0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(142);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte) (-24);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream.hexval('c');
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getLine();
      javaCharStream0.ReadByte();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(0);
      stringReader0.close();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)99;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 68, 97);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream.hexval('1');
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(0, 88);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 63, 63);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Reader reader0 = null;
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3, 3, 0);
      int int1 = 2048;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92);
      javaCharStream0.maxNextCharInd = 12;
      javaCharStream0.GetSuffix(92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-18);
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte) (-28);
      byteArray0[4] = (byte) (-36);
      byteArray0[5] = (byte)35;
      byteArray0[6] = (byte)57;
      byteArray0[7] = (byte)35;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(3052, 1);
      javaCharStream0.adjustBeginLineColumn(4066, 92);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      char[] charArray0 = new char[8];
      charArray0[0] = 'e';
      charArray0[1] = 'd';
      charArray0[2] = 'h';
      charArray0[3] = '-';
      charArray0[4] = 't';
      charArray0[5] = '_';
      charArray0[6] = 'q';
      charArray0[7] = 'G';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.ReInit((Reader) null, 1606, 3456);
      javaCharStream0.ReInit((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      char char0 = 'Q';
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = 0;
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      char[] charArray0 = new char[5];
      charArray0[0] = '&';
      charArray0[1] = 'n';
      charArray0[2] = '8';
      charArray0[3] = ' ';
      charArray0[4] = ')';
      stringReader0.read(charArray0, 0, 0);
      stringReader0.ready();
      stringReader0.mark(6);
      stringReader0.read();
      stringReader0.markSupported();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(6, 63);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream.hexval('1');
      byteArrayInputStream0.read(byteArray0);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      int int0 = (-646);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int1 = 2126;
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-646), (-646), 2126);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte) (-24);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 72, 72);
      javaCharStream1.backup((-2726));
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(2186);
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JavaCharStream.hexval('9');
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(63);
      stringReader0.close();
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 83, 84, (-1980));
      javaCharStream0.adjustBeginLineColumn(84, 84);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = 92;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92);
      javaCharStream0.maxNextCharInd = 12;
      javaCharStream0.GetSuffix(92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      javaCharStream0.inBuf = 12;
      javaCharStream0.UpdateLineColumn('6');
      int[] intArray0 = new int[8];
      intArray0[0] = (int) '6';
      intArray0[1] = 12;
      intArray0[2] = 0;
      intArray0[3] = 12;
      intArray0[4] = 92;
      intArray0[5] = 12;
      intArray0[6] = (-1);
      intArray0[7] = (int) '6';
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 63);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte)54;
      byteArray0[5] = (byte) (-79);
      byteArray0[6] = (byte) (-50);
      byteArray0[7] = (byte)80;
      byteArray0[8] = (byte)115;
      // Undeclared exception!
      try { 
        bufferedInputStream0.read(byteArray0, (-564), (-564));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92);
      javaCharStream0.maxNextCharInd = 12;
      javaCharStream0.GetSuffix(92);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-17);
      byteArray0[1] = (byte) (-18);
      byteArray0[2] = (byte)35;
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-399), 91, 4);
      JavaCharStream.hexval('e');
      JavaCharStream.hexval('c');
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 9, 9, (-2276));
      char[] charArray0 = new char[7];
      charArray0[0] = 'O';
      charArray0[1] = 'c';
      charArray0[2] = 'q';
      charArray0[3] = 'c';
      JavaCharStream.hexval('c');
      JavaCharStream.hexval('6');
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(63);
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      char char0 = '@';
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 97, 68);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      JavaCharStream.hexval('5');
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 68, 70);
      byteArrayInputStream2.read(byteArray0);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(1002, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      try { 
        JavaCharStream.hexval(' ');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, 1, (-1796));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1698, 1698);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.column = 1698;
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = 820;
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 820);
      pipedOutputStream0.flush();
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 820);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      char char0 = '2';
      JavaCharStream.hexval('2');
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)84, 7);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('d');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'a';
      charArray0[1] = '&';
      charArray0[2] = 'Q';
      charArray0[3] = '~';
      JavaCharStream.hexval('0');
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 63);
      boolean boolean0 = true;
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 68, 97);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream.hexval('5');
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((byte)0, (byte)64);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = 92;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92);
      javaCharStream0.maxNextCharInd = (-1);
      javaCharStream0.GetSuffix(92);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(4083);
      JavaCharStream.hexval('E');
      try { 
        JavaCharStream.hexval('/');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 9, 9, 9);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "?";
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      char char0 = 'H';
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(117);
      pipedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 11, (-1));
      // Undeclared exception!
      try { 
        javaCharStream1.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 9, 9, (-2276));
      char[] charArray0 = new char[7];
      charArray0[0] = 'O';
      charArray0[1] = 'c';
      charArray0[2] = 'O';
      charArray0[3] = 'U';
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 1794);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream1);
      javaCharStream0.adjustBeginLineColumn((-1467), 1794);
      javaCharStream0.adjustBeginLineColumn(1228, 4472);
      javaCharStream0.FillBuff();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      try { 
        JavaCharStream.hexval('|');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 842, (-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-77), (-1542), (byte)0);
      javaCharStream0.backup((-1));
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte) (-24);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.maxNextCharInd = (-3302);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SO");
      stringReader0.read();
      stringReader0.close();
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-2276), (-2276));
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4, 4, 0);
      int int0 = 2030;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      InputStream inputStream0 = null;
      int int0 = (-960);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-960), (-960), (-960));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.backup(1);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((byte)55, (byte) (-84));
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.adjustBeginLineColumn((-77), 760);
      javaCharStream0.backup((-77));
      int int0 = 0;
      javaCharStream0.bufsize = 0;
      javaCharStream0.getBeginLine();
      int int1 = 0;
      javaCharStream0.ReInit((Reader) null, (-76), 0);
      InputStream inputStream0 = null;
      javaCharStream0.ReInit((InputStream) null);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-20);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, (byte)0);
      byteArrayInputStream0.skip(0L);
      byteArrayInputStream0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1775), (byte)0, 9);
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginColumn();
      StringReader stringReader1 = new StringReader("?");
      stringReader1.read();
      stringReader1.close();
      int int0 = (-731);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader1, 63, 1040, (-731));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = 92;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92, 92);
      javaCharStream0.Done();
      javaCharStream0.maxNextCharInd = 24;
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(92);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      boolean boolean0 = true;
      char[] charArray0 = new char[4];
      char char0 = '_';
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4096);
      char char0 = 'T';
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-42);
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.FillBuff();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JavaCharStream.hexval('3');
      JavaCharStream.hexval('3');
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      PipedInputStream pipedInputStream0 = new PipedInputStream(60);
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
      
      int int1 = JavaCharStream.hexval('E');
      assertEquals(14, int1);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      char char0 = 'B';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 92, 92);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)64;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 795, 2048);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream1, 80, 99, (-514));
      char char0 = 'J';
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2962, 2962, 2962);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.reset();
      stringReader0.read();
      stringReader0.close();
      int int0 = 72;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4096, 72);
      char char0 = '?';
      javaCharStream0.ReInit((Reader) stringReader0, 4096, 63);
      try { 
        stringReader0.skip(1705L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-77), 6, 97);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.prevCharIsLF = false;
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = 74;
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      intArray0[8] = (-1);
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
