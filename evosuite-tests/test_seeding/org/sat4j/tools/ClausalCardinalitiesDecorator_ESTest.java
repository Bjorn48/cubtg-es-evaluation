/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 17 07:57:29 GMT 2019
 */

package org.sat4j.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sat4j.core.VecInt;
import org.sat4j.minisat.constraints.cnf.OriginalBinaryClause;
import org.sat4j.minisat.core.ILits;
import org.sat4j.specs.IConstr;
import org.sat4j.specs.IVecInt;
import org.sat4j.tools.ClausalCardinalitiesDecorator;
import org.sat4j.tools.DimacsStringSolver;
import org.sat4j.tools.FullClauseSelectorSolver;
import org.sat4j.tools.GateTranslator;
import org.sat4j.tools.LexicoDecorator;
import org.sat4j.tools.ManyCore;
import org.sat4j.tools.Minimal4InclusionModel;
import org.sat4j.tools.StatisticsSolver;
import org.sat4j.tools.encoding.Commander;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClausalCardinalitiesDecorator_ESTest extends ClausalCardinalitiesDecorator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      int[] intArray0 = new int[0];
      VecInt vecInt0 = new VecInt(intArray0);
      Commander commander0 = new Commander();
      ClausalCardinalitiesDecorator<DimacsStringSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsStringSolver>(dimacsStringSolver0, commander0);
      IConstr iConstr0 = clausalCardinalitiesDecorator0.addExactly(vecInt0, 0);
      assertEquals(2, iConstr0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IVecInt iVecInt0 = mock(IVecInt.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(iVecInt0).get(anyInt());
      ILits iLits0 = mock(ILits.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(iLits0).valueToString(anyInt());
      OriginalBinaryClause originalBinaryClause0 = new OriginalBinaryClause(iVecInt0, iLits0);
      ManyCore<Minimal4InclusionModel> manyCore0 = (ManyCore<Minimal4InclusionModel>) mock(ManyCore.class, new ViolatedAssumptionAnswer());
      doReturn(originalBinaryClause0).when(manyCore0).addAtMost(any(org.sat4j.specs.IVecInt.class) , anyInt());
      ClausalCardinalitiesDecorator<ManyCore<Minimal4InclusionModel>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<ManyCore<Minimal4InclusionModel>>(manyCore0);
      int[] intArray0 = new int[5];
      VecInt vecInt0 = new VecInt(intArray0);
      IConstr iConstr0 = clausalCardinalitiesDecorator0.addAtLeast(vecInt0, (-1577));
      assertSame(originalBinaryClause0, iConstr0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClausalCardinalitiesDecorator<LexicoDecorator<GateTranslator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<LexicoDecorator<GateTranslator>>((LexicoDecorator<GateTranslator>) null);
      // Undeclared exception!
      try { 
        clausalCardinalitiesDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      ClausalCardinalitiesDecorator<DimacsStringSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsStringSolver>(dimacsStringSolver0);
      // Undeclared exception!
      try { 
        clausalCardinalitiesDecorator0.addExactly((IVecInt) null, 58);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not a clausal problem! degree 58
         //
         verifyException("org.sat4j.tools.DimacsStringSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      ClausalCardinalitiesDecorator<DimacsStringSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsStringSolver>(dimacsStringSolver0);
      // Undeclared exception!
      try { 
        clausalCardinalitiesDecorator0.addExactly((IVecInt) null, (-1593));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DimacsStringSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(0);
      ClausalCardinalitiesDecorator<DimacsStringSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsStringSolver>(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt(0);
      vecInt0.shrink((-1252));
      // Undeclared exception!
      try { 
        clausalCardinalitiesDecorator0.addExactly(vecInt0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      ClausalCardinalitiesDecorator<DimacsStringSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsStringSolver>(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt(2414, 2414);
      // Undeclared exception!
      clausalCardinalitiesDecorator0.addAtMost(vecInt0, 0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      ClausalCardinalitiesDecorator<DimacsStringSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsStringSolver>(dimacsStringSolver0);
      // Undeclared exception!
      try { 
        clausalCardinalitiesDecorator0.addAtMost((IVecInt) null, 48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.encoding.Policy", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      ClausalCardinalitiesDecorator<DimacsStringSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsStringSolver>(dimacsStringSolver0);
      int[] intArray0 = new int[5];
      VecInt vecInt0 = new VecInt(intArray0);
      vecInt0.shrinkTo(4562);
      // Undeclared exception!
      try { 
        clausalCardinalitiesDecorator0.addAtMost(vecInt0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      ClausalCardinalitiesDecorator<StatisticsSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<StatisticsSolver>(statisticsSolver0);
      // Undeclared exception!
      try { 
        clausalCardinalitiesDecorator0.addAtLeast((IVecInt) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.encoding.EncodingStrategyAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      ClausalCardinalitiesDecorator<StatisticsSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<StatisticsSolver>(statisticsSolver0);
      String string0 = clausalCardinalitiesDecorator0.toString("rn<mrwH}GniW&");
      assertEquals("rn<mrwH}GniW&Statistics about the benchmarks\nCardinality to SAT encoding: \nEncoding: Policy = [At most K: Native, at most 1: Native, exactly K: Native, exactly 1: Native]\n", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      ClausalCardinalitiesDecorator<DimacsStringSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsStringSolver>(dimacsStringSolver0);
      int[] intArray0 = new int[1];
      VecInt vecInt0 = new VecInt(intArray0);
      IConstr iConstr0 = clausalCardinalitiesDecorator0.addExactly(vecInt0, 1);
      assertNull(iConstr0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      IVecInt iVecInt0 = VecInt.EMPTY;
      ClausalCardinalitiesDecorator<DimacsStringSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsStringSolver>(dimacsStringSolver0);
      // Undeclared exception!
      try { 
        clausalCardinalitiesDecorator0.addAtMost(iVecInt0, 1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // requires at least 2 literals
         //
         verifyException("org.sat4j.tools.encoding.Policy", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      ClausalCardinalitiesDecorator<DimacsStringSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsStringSolver>(dimacsStringSolver0);
      int[] intArray0 = new int[1];
      VecInt vecInt0 = new VecInt(intArray0);
      IConstr iConstr0 = clausalCardinalitiesDecorator0.addAtMost(vecInt0, 0);
      assertNull(iConstr0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IVecInt iVecInt0 = VecInt.EMPTY;
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      ClausalCardinalitiesDecorator<StatisticsSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<StatisticsSolver>(statisticsSolver0);
      IConstr iConstr0 = clausalCardinalitiesDecorator0.addAtLeast(iVecInt0, 1);
      assertNull(iConstr0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IVecInt iVecInt0 = VecInt.EMPTY;
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      ClausalCardinalitiesDecorator<StatisticsSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<StatisticsSolver>(statisticsSolver0);
      // Undeclared exception!
      try { 
        clausalCardinalitiesDecorator0.addAtLeast(iVecInt0, 192);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // requires at least 2 literals
         //
         verifyException("org.sat4j.tools.encoding.Policy", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClausalCardinalitiesDecorator<FullClauseSelectorSolver<DimacsStringSolver>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<FullClauseSelectorSolver<DimacsStringSolver>>((FullClauseSelectorSolver<DimacsStringSolver>) null);
      // Undeclared exception!
      try { 
        clausalCardinalitiesDecorator0.toString("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      Commander commander0 = new Commander();
      ClausalCardinalitiesDecorator<StatisticsSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<StatisticsSolver>(statisticsSolver0, commander0);
      String string0 = clausalCardinalitiesDecorator0.toString();
      assertEquals("Statistics about the benchmarks\nCardinality to SAT encoding: \nEncoding: org.sat4j.tools.encoding.Commander\n", string0);
  }
}
