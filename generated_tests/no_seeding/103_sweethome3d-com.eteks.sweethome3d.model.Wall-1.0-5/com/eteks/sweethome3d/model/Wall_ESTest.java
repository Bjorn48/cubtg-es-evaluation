/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 19:08:16 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.Wall;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Wall_ESTest extends Wall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Float float0 = new Float((double) (-2812.32F));
      Wall wall0 = new Wall((-1.0F), 0.0F, (-2489.0F), (-1101.11F), 1653.255F, (-373.41F));
      Wall wall1 = new Wall(529.12067F, 529.12067F, (-1.0F), 0.0F, 2409.2605F, (-1101.11F));
      Float float1 = new Float(1653.255F);
      Float float2 = new Float((double) 0.0F);
      wall1.getHeightAtEnd();
      wall1.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Wall wall0 = new Wall((-4.0281787F), 3816.242F, (-1298.0848F), (-1298.0848F), 0.0F);
      Float float0 = new Float((double) 3816.242F);
      wall0.setArcExtent(float0);
      wall0.removePropertyChangeListener((PropertyChangeListener) null);
      Wall wall1 = wall0.clone();
      wall1.setThickness(0.0F);
      wall0.containsWallEndAt(0.0F, 1750.7F, (-4.0281787F));
      Level level0 = new Level("", 3816.242F, (-1298.0848F), 1.0F);
      wall1.isAtLevel(level0);
      Float float1 = new Float(2593.1885F);
      Float float2 = new Float((double) 3816.242F);
      wall1.setHeightAtEnd(float2);
      wall1.setArcExtent(float2);
      wall1.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      Float float0 = new Float(0.0F);
      wall0.setArcExtent(float0);
      wall1.getHeightAtEnd();
      wall1.containsPoint((-34.474705F), 0.0F, (-34.474705F));
      Wall wall2 = new Wall(0.0F, 1631.833F, (-1.0F), (-1211.8F), (-2855.0F), 0.0F);
      Wall wall3 = new Wall((-1211.8F), 0.0F, 0.0F, 1631.833F, (-3357.1975F));
      wall0.setWallAtStart(wall3);
      Wall wall4 = wall0.clone();
      wall4.setLeftSideShininess((-2855.0F));
      wall0.getRightSideShininess();
      wall4.containsPoint(1569.3F, (-1298.0848F), (-1429.2F));
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Wall wall0 = new Wall(5381.78F, (-1248.6918F), (-1248.6918F), 5381.78F, (-1248.6918F));
      Wall wall1 = wall0.clone();
      wall1.containsWallStartAt(0.0F, 0.0F, (-288.90524F));
      wall1.getLength();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("m", (PropertyChangeListener) null);
      Integer integer0 = new Integer(1751);
      Wall wall2 = new Wall(1557.1743F, 9376.902F, 3318.4556F, (-288.90524F), 1.0F, 3318.4556F);
      wall2.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("A ", (PropertyChangeListener) null);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall2.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setLeftSideShininess(1070.6844F);
      wall0.setHeightAtEnd(float0);
      wall0.getRightSideTexture();
      Float float1 = new Float((-2812.32F));
      Float.max((-2812.32F), (-2812.32F));
      wall0.setHeight(float1);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Wall wall0 = new Wall((-576.5488F), 2640.845F, 2640.845F, 3220.1F, 2640.845F);
      wall0.setYEnd(3220.1F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Wall wall0 = new Wall((-615.0F), 3439.34F, (-615.0F), 0.0F, (-615.0F));
      Wall wall1 = wall0.clone();
      wall1.setLeftSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setHeightAtEnd(float0);
      wall0.setHeightAtEnd(float0);
      Integer integer0 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", 46);
      Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      wall0.setRightSideColor(integer0);
      wall0.setYEnd((-2812.32F));
      Wall.Property.values();
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      wall0.setXEnd(46);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      wall1.removePropertyChangeListener(propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("9QG) 5UWa7dTQa8<$]j", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "9( (]O]", propertyChangeListenerProxy1, float0);
      Object object0 = new Object();
      Integer integer1 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "9( (]O]", "b=up|\"$*}ej  !,(", integer1);
      Integer integer2 = new Integer(0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Integer.compare(46, (-3631));
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      propertyChangeEvent1.setPropagationId(integer2);
      wall1.getYEnd();
      wall0.containsPoint(15.0F, (-1363.6F), (-1363.6F));
      wall0.getThickness();
      wall1.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Wall wall0 = new Wall((-1248.6918F), (-1248.6918F), (-1248.6918F), 5381.78F, 5381.78F, 5381.78F);
      Integer.getInteger("+)<fU=,T{UC+@^d.", (-1399));
      Level level0 = new Level("os.version", 0.0F, 0.0F, 5381.78F);
      wall0.setLevel(level0);
      Integer.getInteger("OIP]L>%C", (Integer) null);
      wall0.setRightSideColor((Integer) null);
      wall0.getLevel();
      Wall wall1 = wall0.clone();
      wall1.getRightSideShininess();
      wall1.setPattern((TextureImage) null);
      wall0.getLeftSideTexture();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 1.0F, (-1.0F), 0.0F, 1.0F, (-802.3863F));
      Float float0 = new Float((-1516.886979335012));
      wall0.setArcExtent(float0);
      wall0.setXEnd(0.0F);
      wall0.getHeightAtEnd();
      wall0.containsPoint(553.44F, 1005.3092F, 0.0F);
      Wall wall1 = new Wall(0.0F, (-1.0F), 1005.3092F, 0.1F, 0.0F, 0.0F);
      wall0.setWallAtStart(wall1);
      CatalogTexture catalogTexture0 = new CatalogTexture("/uJi8:cP3)xAV(", "", (Content) null, 1488.0F, 1786.53F, (String) null);
      wall1.setPattern(catalogTexture0);
      wall0.containsPoint(0.0F, (-802.3863F), 1.0F);
      wall0.getYEnd();
      wall1.containsPoint((-802.3863F), 1488.0F, 1.0F);
      wall0.getThickness();
      wall1.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((-2812.32F));
      wall0.setHeightAtEnd(float0);
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Level level0 = new Level("]7M!s`HOrCEtr", (-2812.32F), 2387.1648F, (-2812.32F));
      wall0.setLevel(level0);
      Level level1 = new Level((String) null, 1679.5083F, (-2812.32F), 1679.5083F);
      Level level2 = new Level("]7M!s`HOrCEtr", 1679.5083F, (-2812.32F), 2387.1648F);
      level2.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      level2.clone();
      wall0.isAtLevel(level1);
      wall0.isAtLevel(level2);
      wall0.getPattern();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Wall wall0 = new Wall(5381.78F, (-1248.6918F), (-1248.6918F), 5381.78F, (-1248.6918F));
      wall0.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      Float float0 = new Float(5381.78F);
      wall0.setHeight(float0);
      Float.max((-1.0F), 0.0F);
      wall0.setHeight(float0);
      wall0.isAtLevel((Level) null);
      Float float1 = new Float(0.0F);
      wall0.setHeightAtEnd(float1);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall0.getHeightAtEnd();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall1.getLevel();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Wall wall0 = new Wall(3219.0F, 3927.5232F, 3927.5232F, 441.39F, (-1001.5223F), 1.0F);
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess(3927.5232F);
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("tqJwHc$n(\"1f2xi9Ok4", propertyChangeListener0);
      wall1.setWallAtEnd(wall0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Object object0 = new Object();
      Float float0 = new Float((double) 3927.5232F);
      wall0.setHeightAtEnd(float0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("tqJwHc$n(\"1f2xi9Ok4", "ok:G,", object0, "tqJwHc$n(\"1f2xi9Ok4");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      wall0.setYEnd(3219.0F);
      wall0.getRightSideShininess();
      wall0.getLeftSideTexture();
      wall0.getRightSideColor();
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Wall wall2 = wall1.getWallAtEnd();
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall2.getHeight();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("~0:oFMS");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.~0:oFMS
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Float float0 = new Float((double) 4368.019F);
      Wall wall0 = new Wall((-2812.32F), (-789.3477F), (-789.3477F), (-2812.32F), (-5721.0F), (-5721.0F));
      wall0.setArcExtent(float0);
      wall0.containsPoint((-1.0F), (-2812.32F), (-5721.0F));
      wall0.setYEnd((-1.0F));
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Wall wall0 = new Wall(3219.0F, 3923.7444F, 3923.7444F, 441.39F, (-1002.34314F), 1.0F);
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess(3923.7444F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      wall0.setWallAtEnd(wall0);
      wall0.getStartPointToEndPointDistance();
      wall0.getPoints();
      wall0.getRightSideShininess();
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Float float0 = new Float((double) 0.0F);
      Float.isFinite((-4.9412994F));
      Wall wall0 = new Wall((-0.45786998F), (-2812.32F), 1076.474F, (-0.45786998F), 0.1F, 0.1F);
      wall0.setArcExtent(float0);
      wall0.containsPoint(1653.255F, 0.0F, (-1476.9388F));
      Float float1 = new Float(397.0F);
      Float float2 = new Float((double) 1653.255F);
      wall0.setHeightAtEnd(float2);
      wall0.setRightSideShininess(989.251F);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Wall wall0 = new Wall(1750.7F, (-1.0F), 1750.7F, (-1.0F), 1.0F, 1.0F);
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.setYStart((-1.0F));
      wall0.getStartPointToEndPointDistance();
      wall0.getPoints();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Super class isn't cloneable", (PropertyChangeListener) null);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getLeftSideTexture();
      Wall wall1 = new Wall((-2318.3574F), 1750.7F, (-52.6F), 0.0F, (-1300.5F), (-52.6F));
      Wall wall2 = wall1.clone();
      wall2.getPattern();
      wall1.setPattern((TextureImage) null);
      wall0.getWallAtStart();
      wall0.setXStart(1750.7F);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Wall wall0 = new Wall(1.0F, 1.0F, 1.0F, (-1.0F), 1.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      Integer integer0 = Integer.getInteger("/V6A", 4083);
      wall0.setLeftSideColor(integer0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("'PR|h)=Xw", propertyChangeListener0);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.setWallAtEnd((Wall) null);
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      float float0 = 0.0F;
      float float1 = 3318.4556F;
      Wall wall0 = new Wall(3318.4556F, 3318.4556F, 0.0F, (-1.0F), (-1.0F), 3318.4556F);
      wall0.intersectsRectangle(0.0F, 3318.4556F, 3318.4556F, 0.0F);
      wall0.setLeftSideShininess(3318.4556F);
      wall0.containsPoint((-1.0F), (-1.0F), 3318.4556F);
      wall0.getXStart();
      wall0.setXEnd(0.0F);
      int int0 = (-1);
      Integer integer0 = new Integer((-1));
      Float float2 = wall0.getHeight();
      Float.sum((-1), 3318.4556F);
      wall0.setHeightAtEnd(float2);
      Integer.getInteger((String) null, integer0);
      Integer.getInteger((String) null, (-1));
      wall0.setLeftSideColor(integer0);
      Level level0 = new Level("", (-1), 3318.4556F, (-1));
      String string0 = "{AuXvGqKv#:Zt<}";
      Class<Object> class0 = Object.class;
      wall0.getXArcCircleCenter();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource 
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      Float float0 = new Float((-787.2801495));
      wall0.setHeightAtEnd(float0);
      wall0.isTrapezoidal();
      wall1.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Wall wall0 = new Wall(4368.019F, 4368.019F, (-802.3863F), (-476.4F), (-802.3863F), 4368.019F);
      Float float0 = new Float(1.0001);
      Float float1 = new Float((double) 4368.019F);
      wall0.setArcExtent(float1);
      wall0.setXEnd((-3294.7F));
      Wall wall1 = new Wall((-2812.32F), (-802.3863F), (-476.4F), (-2812.32F), (-5721.3F), (-5721.3F));
      wall1.getHeightAtEnd();
      // Undeclared exception!
      wall0.containsPoint((-3294.7F), (-2812.32F), 553.44F);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Wall wall0 = new Wall(5378.499F, 5378.499F, 5378.499F, 5378.499F, 5378.499F);
      wall0.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.getArcExtent();
      wall0.setHeight((Float) null);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((-2812.32F));
      wall0.setHeightAtEnd(float0);
      Wall wall1 = wall0.clone();
      Float float1 = new Float((double) (-2812.32F));
      wall1.setHeightAtEnd(float0);
      wall0.setLeftSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-3503.1707F), 0.0F, (-3503.1707F), (-3503.1707F), 0.0F);
      Wall wall1 = wall0.clone();
      Float float0 = new Float(943.3641897);
      wall0.setArcExtent(float0);
      wall1.getHeightAtEnd();
      wall1.containsPoint((-34.474705F), (-3503.1707F), (-1300.5F));
      Wall wall2 = new Wall(0.0F, 1631.833F, (-1.0F), (-1211.8F), (-2855.0F), 0.0F);
      Wall wall3 = new Wall(0.1F, (-1300.5F), 2803.3857F, 237.5508F, (-1211.8F));
      wall2.setRightSideShininess(2803.3857F);
      wall2.setWallAtStart(wall3);
      Wall wall4 = wall3.clone();
      wall0.getRightSideShininess();
      wall1.getRightSideTexture();
      wall3.setPattern((TextureImage) null);
      wall3.getThickness();
      wall4.getArcExtent();
      wall0.getLength();
      wall2.setRightSideShininess((-1211.8F));
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, (-3294.7F), 0.758205F, 0.758205F);
      Wall wall1 = new Wall((-3294.7F), (-3294.7F), (-3294.7F), 0.758205F, 0.758205F);
      Float float0 = new Float((-1.0F));
      Float float1 = new Float(1.0001);
      wall0.setHeight(float1);
      Wall wall2 = wall0.clone();
      wall1.setWallAtEnd(wall0);
      wall2.getStartPointToEndPointDistance();
      Wall wall3 = wall1.getWallAtEnd();
      wall3.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf(":!`/>VcEW+u=6p]Y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.:!`/>VcEW+u=6p]Y
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      float float0 = (-2652.6272F);
      float float1 = 1.0F;
      Wall wall0 = new Wall((-406.28F), (-2652.6272F), 3727.0F, 1.0F, 1.0F, (-2652.6272F));
      Wall wall1 = wall0.clone();
      wall1.getWallAtStart();
      float float2 = (-493.9F);
      String string0 = "com.eteks.sweethome3d.model.HomeTexture";
      String string1 = ">(e0pro&'#79&rlu%v~";
      Class<String> class0 = String.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "com.eteks.sweethome3d.model.HomeTexture", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource com.eteks.sweethome3d.model.HomeTexture
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Wall wall0 = new Wall(1337.292F, 1337.292F, 1.0F, 0.0F, (-1587.4286F));
      Wall wall1 = wall0.clone();
      wall1.containsWallStartAt(0.0F, (-1587.4286F), 0.0F);
      wall0.getLength();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      Integer integer0 = new Integer((-2674));
      Wall wall2 = new Wall((-2674), 1765.66F, 1.0F, 2023.47F, 1.0F, (-698.87585F));
      wall2.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("QJ!W(:|", propertyChangeListenerProxy0);
      wall0.getRightSideShininess();
      wall2.getPattern();
      wall0.setPattern((TextureImage) null);
      wall2.getStartPointToEndPointDistance();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Wall wall0 = new Wall((-1248.6918F), (-1248.6918F), (-1248.6918F), 5381.78F, 5381.78F, 5381.78F);
      Float float0 = new Float((double) 5381.78F);
      wall0.setArcExtent(float0);
      // Undeclared exception!
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Float float0 = new Float(1.0001);
      Wall wall0 = new Wall((-1776.1923F), 4368.019F, 326.06354F, 45.519F, (-3997.7131F));
      wall0.getRightSideColor();
      CatalogTexture catalogTexture0 = new CatalogTexture("RIGHT_SIDE_SHININESS", (Content) null, 45.519F, 45.519F, true);
      wall0.setPattern(catalogTexture0);
      wall0.setLeftSideColor((Integer) null);
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      wall0.clone();
      wall0.setRightSideShininess((-2520.7F));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 1.0F, 0.0F, 1.0F, (-616.6F), 0.0F);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("FLpP7ie^_F+%j4Dd", "FLpP7ie^_F+%j4Dd", temporaryURLContent0, 0.0F, 1.0F, "FLpP7ie^_F+%j4Dd", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setRightSideTexture(homeTexture0);
      Wall wall1 = wall0.clone();
      wall0.getPoints();
      HomeTexture homeTexture1 = wall1.getRightSideTexture();
      wall0.setRightSideTexture(homeTexture1);
      wall1.setPattern(homeTexture1);
      wall1.getStartPointToEndPointDistance();
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-3503.1707F), 0.0F, (-3503.1707F), (-3503.1707F), 0.0F);
      Wall wall1 = wall0.clone();
      Float float0 = new Float(925.3915855923497);
      wall0.setArcExtent(float0);
      wall1.getHeightAtEnd();
      wall1.containsPoint((-34.474705F), (-3503.1707F), (-1300.5F));
      Wall wall2 = new Wall(22.772846F, 1631.833F, (-1.0F), (-1211.8F), (-2855.0F), 22.772846F);
      Wall wall3 = new Wall(0.1F, (-1300.5F), 2803.3857F, 237.5508F, (-1211.8F));
      wall2.setRightSideShininess(2803.3857F);
      wall2.setWallAtStart(wall3);
      wall0.getRightSideShininess();
      wall1.getRightSideTexture();
      wall3.setPattern((TextureImage) null);
      wall0.getArcExtent();
      wall0.getLength();
      wall0.setRightSideShininess(2803.3857F);
      Integer integer0 = new Integer(2);
      wall3.setLeftSideColor(integer0);
      Float float1 = new Float(1894.4829);
      wall1.setHeightAtEnd(float1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Wall wall0 = new Wall((-1326.6F), (-1.0F), 0.0F, 535.518F, 0.0F, 0.0F);
      wall0.containsWallStartAt(0.0F, 0.0F, 535.518F);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-3503.1707F), 0.0F, (-3503.1707F), (-3503.1707F), 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall0.isTrapezoidal();
      wall1.isTrapezoidal();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("RIGHT_SIDE_COLOR", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("RIGHT_SIDE_COLOR", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("Yd6v%rVU", propertyChangeListenerProxy1);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy2);
      wall1.move(0.0F, 0.0F);
      wall0.setThickness(0.0F);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Wall wall0 = new Wall(5381.6904F, 5381.6904F, 5381.6904F, (-1248.6918F), (-1248.6918F));
      Float.sum(3072.3262F, 3072.3262F);
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Wall wall0 = new Wall(2645.445F, (-1350.32F), 37.959423F, 37.959423F, 2645.445F);
      Level level0 = new Level("S_:>r8938ym~n!P%Y>\"", 2645.445F, 37.959423F, (-1350.32F));
      Level level1 = level0.clone();
      wall0.isAtLevel(level1);
      wall0.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Wall wall0 = new Wall(1750.7F, (-1.0F), 1750.7F, (-1.0F), 2.230669F, 2.230669F);
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      Float float0 = new Float(756.7744F);
      wall0.setHeight(float0);
      Float.max(2.230669F, 1782.0455F);
      Wall wall1 = new Wall(916.53F, 1.0F, 1.0F, 1018.948F, 1782.0455F, 0.1F);
      wall0.setWallAtEnd(wall1);
      Wall wall2 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      wall2.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall2.getStartPointToEndPointDistance();
      wall0.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("com.eteks.sweethome3d.model.BackgroundImage");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.com.eteks.sweethome3d.model.BackgroundImage
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), 2539.7F, 2539.7F, (-1710.0F), (-616.6F));
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("LEVEL", "LEVEL", temporaryURLContent0, 2539.7F, (-616.6F), "LEVEL", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setRightSideTexture(homeTexture0);
      Wall wall1 = wall0.clone();
      wall1.getPoints();
      Wall wall2 = new Wall((-2972.88F), (-1.0F), (-2220.8635F), (-1710.0F), (-1.0F), 1.0F);
      wall0.getHeightAtEnd();
      wall0.setArcExtent((Float) null);
      Wall wall3 = new Wall((-3718.0F), 0.1F, (-2972.88F), (-683.498F), (-2220.8635F));
      Float float0 = new Float((-1710.0F));
      wall3.setHeight(float0);
      Wall wall4 = new Wall(1347.1F, 1.0F, 2539.7F, (-616.6F), 3206.039F, 3795.1707F);
      wall4.setHeight(float0);
      wall2.getLeftSideTexture();
      Wall wall5 = new Wall(0.0F, (-143.37526F), (-2438.29F), 564.4881F, (-3294.7F));
      wall5.setLeftSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Wall wall0 = new Wall(3219.0F, 3925.4207F, 3925.4207F, 441.39F, (-1001.5223F), 1.0F);
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess(3925.4207F);
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("tqJwHc$n(\"1f2xi9Ok4", propertyChangeListener0);
      wall1.setWallAtEnd(wall0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("tqJwHc$n(\"1f2xi9Ok4", "ok:G,", object0, "tqJwHc$n(\"1f2xi9Ok4");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      wall0.setYEnd(0.0F);
      wall0.getRightSideShininess();
      wall0.getLeftSideTexture();
      wall0.getRightSideColor();
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Wall wall2 = wall1.getWallAtEnd();
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall2.getHeight();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("~0:oFMS");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.~0:oFMS
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      Float float0 = new Float(943.3641897);
      wall0.setArcExtent(float0);
      wall1.getHeightAtEnd();
      wall1.containsPoint((-34.474705F), 0.0F, (-1300.5F));
      Wall wall2 = new Wall(0.0F, 1631.833F, (-1.0F), (-1211.8F), (-2855.0F), 0.0F);
      Float float1 = new Float((-1.0));
      Level level0 = new Level("", 0.0F, (-982.06726F), 4368.019F);
      Level level1 = level0.clone();
      Wall wall3 = wall0.clone();
      wall3.isAtLevel(level1);
      wall2.getHeightAtEnd();
      wall3.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Wall wall0 = new Wall((-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F));
      Float float0 = new Float((double) (-2812.3F));
      wall0.setHeightAtEnd(float0);
      Integer integer0 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", 46);
      Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      wall0.setRightSideColor(integer0);
      wall0.getLevel();
      wall0.setYEnd((-2812.3F));
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      Float float1 = new Float((-2322.84843356));
      Float float2 = new Float((-2322.84843356));
      wall1.setHeightAtEnd(float2);
      Float float3 = new Float(2320.25544391);
      wall0.setArcExtent(float3);
      wall1.getHeightAtEnd();
      wall1.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Wall wall0 = new Wall((-4.0281787F), 3816.242F, (-1298.0848F), (-1298.0848F), 0.0F);
      Float float0 = new Float((double) 3816.242F);
      wall0.setArcExtent(float0);
      wall0.removePropertyChangeListener((PropertyChangeListener) null);
      Wall wall1 = wall0.clone();
      wall1.setThickness(0.0F);
      wall0.getXEnd();
      Integer integer0 = new Integer(4);
      wall0.setLeftSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setArcExtent(float0);
      wall0.setXEnd((-2812.32F));
      wall0.setLeftSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setArcExtent(float0);
      wall0.setXEnd((-2812.32F));
      wall0.setArcExtent(float0);
      wall0.setYEnd(0.1F);
      wall0.setHeightAtEnd(float0);
      wall0.setRightSideShininess((-2520.7F));
      wall0.clone();
      wall0.getLength();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), 2539.7F, 2539.7F, (-1710.0F), (-616.6F));
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("LEVEL", "LEVEL", temporaryURLContent0, 2539.7F, (-616.6F), "LEVEL", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setRightSideTexture(homeTexture0);
      Wall wall1 = wall0.clone();
      wall1.getPoints();
      HomeTexture homeTexture1 = wall1.getRightSideTexture();
      wall0.setRightSideTexture(homeTexture1);
      wall0.setWallAtStart(wall1);
      wall0.getPoints();
      wall1.setRightSideShininess((-3294.7F));
      wall0.getPoints();
      wall0.getHeightAtEnd();
      wall0.getRightSideColor();
      wall0.getHeight();
      wall0.intersectsRectangle(2.0F, 3795.1707F, (-1.0F), 2701.9192F);
      wall0.getHeightAtEnd();
      wall1.intersectsRectangle(2.0F, 881.1779F, 2701.9192F, 2539.7F);
      wall1.getLeftSideTexture();
      wall1.setHeightAtEnd((Float) null);
      wall0.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Wall wall0 = new Wall(918.64014F, 918.64014F, 2861.0798F, 918.64014F, 918.64014F, 918.64014F);
      Level level0 = new Level("", 918.64014F, (-1198.7554F), 1517.8031F);
      wall0.setLevel(level0);
      wall0.setYStart(918.64014F);
      wall0.getLeftSideColor();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((-2812.32F));
      wall0.setHeightAtEnd((Float) null);
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Level level0 = new Level((String) null, 0.25660706F, 0.25660706F, 0.25660706F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      level0.removePropertyChangeListener(propertyChangeListenerProxy1);
      wall0.setLevel(level0);
      Level level1 = new Level("", (-2812.32F), 1.0F, 2.0F);
      level0.clone();
      wall0.isAtLevel(level1);
      wall0.getPattern();
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Wall wall0 = new Wall((-1248.6918F), (-1248.6918F), (-1248.6918F), 5381.78F, 5381.78F, 5381.78F);
      wall0.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      Integer.getInteger("+)<fU=,T{UC+@^d.", (-1399));
      Integer.getInteger("OIP]L>%C", (Integer) null);
      wall0.setRightSideColor((Integer) null);
      wall0.getLevel();
      wall0.setYEnd((-1248.6918F));
      wall0.clone();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-3503.1707F), 0.0F, (-3503.1707F), (-3503.1707F), 0.0F);
      Wall wall1 = wall0.clone();
      Float float0 = new Float(943.3641897);
      wall0.setArcExtent(float0);
      wall1.getHeightAtEnd();
      wall1.containsPoint((-34.474705F), (-3503.1707F), (-1300.5F));
      Wall wall2 = new Wall(0.0F, 1631.833F, (-1.0F), (-1211.8F), (-2855.0F), 0.0F);
      Wall wall3 = new Wall(0.1F, (-1300.5F), 2803.3857F, 237.5508F, (-1211.8F));
      wall2.setWallAtStart(wall3);
      Wall wall4 = wall3.clone();
      wall1.getRightSideTexture();
      wall1.setPattern((TextureImage) null);
      wall4.setLeftSideShininess(0.0F);
      wall4.getRightSideShininess();
      wall0.containsPoint(101.0F, (-37.922173F), 0.01F);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((-2812.32F));
      wall0.setHeightAtEnd(float0);
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Level level0 = new Level((String) null, (-29.20049F), 0.25660706F, (-29.20049F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.Wall", propertyChangeListener0);
      level0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.setLevel(level0);
      Level level1 = new Level((String) null, (-0.45786998F), 0.25660706F, 1.0F);
      Level level2 = new Level("S_:>r8938ym~n!P%Y>\"", 1443.8978F, (-1.0F), 2.0F);
      level2.clone();
      wall0.isAtLevel(level1);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Wall wall0 = new Wall(3219.0F, 3925.4207F, 3925.4207F, 441.39F, (-1001.5223F), 1.0F);
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess(3925.4207F);
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("tqJwHc$n(\"1f2xi9Ok4", propertyChangeListener0);
      Level level0 = new Level("tqJwHc$n(\"1f2xi9Ok4", 1.0F, 2704.2F, (-288.90524F));
      wall1.setLevel(level0);
      wall1.setWallAtEnd(wall0);
      wall0.isAtLevel(level0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall1.getStartPointToEndPointDistance();
      wall0.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("tqJwHc$n(\"1f2xi9Ok4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.tqJwHc$n(\"1f2xi9Ok4
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Wall wall0 = new Wall(1750.7F, (-1.0F), 1750.7F, (-1.0F), 2.230669F, 2.230669F);
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Float float0 = new Float((double) 2.230669F);
      wall0.setArcExtent(float0);
      wall0.removePropertyChangeListener((PropertyChangeListener) null);
      Wall wall1 = wall0.clone();
      wall1.setThickness((-1.0F));
      wall1.getXEnd();
      Integer integer0 = new Integer(4);
      Integer integer1 = new Integer(14);
      wall0.setLeftSideColor(integer1);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, (-3294.7F), 0.758205F, 0.758205F);
      Float float0 = new Float((double) 0.0F);
      Float float1 = new Float(0.758205F);
      wall0.setArcExtent(float0);
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.getHeightAtEnd();
      Wall wall1 = wall0.clone();
      wall1.setYEnd((-943.2024F));
      wall1.containsPoint((-556.64F), (-3294.7F), 0.0F);
      wall0.getPoints();
      wall0.setPattern((TextureImage) null);
      wall0.getThickness();
      wall0.getLength();
      wall1.setArcExtent((Float) null);
      wall0.getHeightAtEnd();
      wall1.getArcExtent();
      Float float2 = new Float((double) (-943.2024F));
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, (-1326.6F), (-1326.6F), 1524.56F);
      wall0.containsWallEndAt((-1.0F), 0.0F, 937.68F);
      wall0.getRightSideColor();
      wall0.getHeightAtEnd();
      wall0.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Wall wall0 = new Wall(326.06354F, 326.06354F, 326.06354F, 326.06354F, 0.0F);
      wall0.getHeightAtEnd();
      wall0.containsPoint(762.9252F, 762.9252F, 326.06354F);
      wall0.getPoints();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Wall wall0 = new Wall(3219.0F, 3923.7444F, 3923.7444F, 441.39F, (-1001.5223F), 1.0F);
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess(3923.7444F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("tqJwHc$n(\"1f2xi9Ok4", propertyChangeListener0);
      wall0.setWallAtEnd(wall0);
      wall0.getStartPointToEndPointDistance();
      wall0.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("tqJwHc$n(\"1f2xi9Ok4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.tqJwHc$n(\"1f2xi9Ok4
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-3513.175F), 0.0F, (-3513.175F), (-3513.175F), 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall1.isTrapezoidal();
      float float0 = new Float((-3513.175F));
      wall1.isTrapezoidal();
      wall0.removePropertyChangeListener((PropertyChangeListener) null);
      Wall wall2 = wall0.clone();
      wall2.clone();
      wall2.removePropertyChangeListener((PropertyChangeListener) null);
      wall2.setThickness((-2521.9F));
      wall0.getPoints();
      wall0.getHeight();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Wall wall0 = new Wall(3219.0F, 3925.4207F, 3925.4207F, 441.39F, (-1001.5223F), 1.0F);
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess(3925.4207F);
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("tqJwHc$n(\"1f2xi9Ok4", propertyChangeListener0);
      wall1.setWallAtEnd(wall0);
      wall1.addPropertyChangeListener(propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "<B?U5q6*_j\"N", object0, (Object) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("ok:G,", propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      wall0.setYEnd((-1.0F));
      wall0.getRightSideShininess();
      wall1.getLeftSideTexture();
      wall0.getRightSideColor();
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getWallAtEnd();
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy1);
      wall1.addPropertyChangeListener(propertyChangeListenerProxy2);
      wall0.getHeight();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, (-1573.8F), (-1696.3768F), 1.0F, 0.0F, (-1696.3768F));
      wall0.containsPoint((-1573.8F), 1.0F, 1.0F);
      wall0.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Wall wall0 = new Wall(5381.78F, (-1248.6918F), 3439.34F, 3439.34F, 5381.78F);
      Wall wall1 = wall0.clone();
      wall0.getRightSideColor();
      wall1.setRightSideColor((Integer) null);
      wall0.setLeftSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Float float0 = new Float(1.0001);
      Wall wall0 = new Wall((-2812.32F), (-789.3477F), (-789.3477F), (-2812.32F), (-5721.308F), (-5721.308F));
      wall0.setArcExtent(float0);
      wall0.containsPoint(4368.019F, 4368.019F, (-1476.9388F));
      wall0.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Wall wall0 = new Wall(3318.4556F, 3318.4556F, 0.0F, (-1.0F), (-1.0F), 3318.4556F);
      wall0.containsWallEndAt((-1.0F), (-1.0F), 0.0F);
      wall0.setLeftSideShininess(3318.4556F);
      wall0.containsPoint((-1.0F), (-1.0F), 3318.4556F);
      wall0.getXStart();
      wall0.setXEnd(0.0F);
      Integer integer0 = new Integer((-1));
      Float float0 = wall0.getHeight();
      Float.sum((-1), 3318.4556F);
      wall0.setHeightAtEnd(float0);
      Integer.getInteger((String) null, integer0);
      Integer.getInteger((String) null, (-1));
      wall0.setLeftSideColor(integer0);
      Level level0 = new Level("", (-1), 3318.4556F, (-1));
      wall0.getXArcCircleCenter();
      level0.setName("{AuXvGqKv#:Zt<}");
      level0.setVisible(false);
      wall0.setLevel(level0);
      wall0.getArcExtent();
      Float float1 = new Float(3318.4556F);
      wall0.setHeightAtEnd(float1);
      wall0.getPattern();
      wall0.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Wall wall0 = new Wall((-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F));
      Float float0 = new Float((double) (-2812.3F));
      wall0.setHeightAtEnd(float0);
      Integer integer0 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", 46);
      Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      wall0.setRightSideColor(integer0);
      wall0.getLevel();
      wall0.setYEnd((-2812.3F));
      wall0.getRightSideShininess();
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      Wall wall1 = new Wall(46, 0.0F, (-2812.3F), 46, 0.0F);
      wall1.getThickness();
      wall1.getArcExtent();
      wall0.getLength();
      wall0.containsWallStartAt((-1330.267F), (-2812.3F), 0.0F);
      Wall wall2 = new Wall(0.0F, (-859.03845F), 589.8F, (-1330.267F), 589.8F);
      wall2.setRightSideShininess(75.1023F);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Wall wall0 = new Wall((-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F));
      Float float0 = new Float((double) (-2812.3F));
      wall0.setHeightAtEnd(float0);
      wall0.setHeightAtEnd(float0);
      Integer integer0 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", 46);
      Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      wall0.setRightSideColor(integer0);
      wall0.getLevel();
      wall0.setYEnd((-2812.3F));
      Wall.Property.values();
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      wall0.setXEnd(46);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      wall1.removePropertyChangeListener(propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("9QG) 5UWa7dTQa8<$]j", propertyChangeListener1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "9( (]O]", propertyChangeListenerProxy1, float0);
      Object object0 = new Object();
      Integer integer1 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "9( (]O]", "b=up|\"$*}ej  !,(", integer1);
      wall0.getRightSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.setLeftSideShininess(0);
      wall0.getRightSideShininess();
      wall1.containsPoint(1339.0F, 1.0F, 1.0F);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Wall wall0 = new Wall(3219.0F, 3925.4207F, 3925.4207F, 441.39F, (-1001.5223F), 1.0F);
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess(3925.4207F);
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("tqJwHc$n(\"1f2xi9Ok4", propertyChangeListener0);
      wall1.setWallAtEnd(wall0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("tqJwHc$n(\"1f2xi9Ok4", "ok:G,", object0, "tqJwHc$n(\"1f2xi9Ok4");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      wall0.getRightSideShininess();
      wall0.getLeftSideTexture();
      wall0.getRightSideColor();
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Wall wall2 = wall1.getWallAtEnd();
      wall2.getHeight();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("~0:oFMS");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.~0:oFMS
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-3513.175F), 0.0F, (-3513.175F), (-3513.175F), 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall1.isTrapezoidal();
      float float0 = (-1.0F);
      Wall wall2 = new Wall((-1248.6918F), (-999.385F), (-1.0F), (-5721.308F), 334.5986F, (-3530.11F));
      Float float1 = new Float(962.054151174);
      wall2.setArcExtent(float1);
      Wall wall3 = wall0.getWallAtStart();
      wall3.containsPoint((-3513.175F), 0.758205F, 0.0F);
      wall0.containsPoint((-3530.11F), 2.0F, (-1476.9388F));
      wall1.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Wall wall0 = new Wall((-1248.6918F), (-1248.6918F), (-1248.6918F), 5381.78F, 5381.78F, 5381.78F);
      wall0.getLeftSideTexture();
      Wall wall1 = wall0.clone();
      wall1.setRightSideTexture((HomeTexture) null);
      wall1.setRightSideShininess(5381.78F);
      wall0.setWallAtEnd(wall1);
      wall0.containsWallEndAt(2283.9343F, (-2520.7F), (-1.0F));
      Float float0 = new Float((double) (-1.0F));
      Float float1 = new Float((-3278.7010437154695));
      wall1.setHeight(float1);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Float float0 = new Float((double) (-2812.32F));
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), 847.727F, (-2812.32F), 847.727F);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Float float0 = new Float(1.0001);
      Float float1 = new Float((double) 4368.019F);
      Wall wall0 = new Wall((-2812.32F), (-789.3477F), (-789.3477F), (-2812.32F), (-5721.308F), (-5721.308F));
      wall0.setXStart((-2812.32F));
      wall0.setArcExtent(float0);
      wall0.getLeftSideTexture();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      List<Wall> list0 = Wall.clone((List<Wall>) linkedList0);
      List<Wall> list1 = Wall.clone(list0);
      Wall.clone(list1);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setArcExtent(float0);
      wall0.setXEnd((-2812.32F));
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Level level0 = new Level("com.eteks.sweethome3d.model.HomeTexture", (-2812.32F), 1972.8F, (-29.20049F));
      wall0.setLevel(level0);
      wall0.containsPoint(0.0F, (-2812.32F), 1679.5083F);
      Float float1 = new Float(1.0F);
      wall0.setRightSideShininess((-1542.2668F));
      wall0.getLevel();
      wall0.getLeftSideTexture();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      float float0 = (-1994.9016F);
      float float1 = (-3450.9F);
      Wall wall0 = new Wall((-1994.9016F), (-1994.9016F), (-1994.9016F), 0.0F, (-1994.9016F), (-3450.9F));
      float float2 = 0.0F;
      wall0.move((-3450.9F), 3552.076F);
      wall0.setYStart(1.0F);
      CatalogTexture catalogTexture0 = new CatalogTexture("p", "p", (Content) null, (-462.844F), (-800.0F), "(o&elD$|E\"E`", true);
      CatalogTexture catalogTexture1 = new CatalogTexture((String) null, (Content) null, (-462.844F), 0.0F, false);
      // Undeclared exception!
      try { 
        catalogTexture0.compareTo(catalogTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.RuleBasedCollator", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setArcExtent(float0);
      Wall wall1 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Level level0 = new Level("", (-2812.32F), 1.0F, 1080.6F);
      wall0.getLevel();
      wall0.isAtLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, (-1326.6F), (-1326.6F), 1524.56F);
      Integer integer0 = new Integer((-1068));
      wall0.setLeftSideColor(integer0);
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-1298.0848F), 1718.092F, 1718.092F, (-2812.32F));
      Float float0 = new Float((double) (-1298.0848F));
      wall0.setArcExtent(float0);
      wall0.removePropertyChangeListener((PropertyChangeListener) null);
      wall0.containsPoint(553.44F, 1005.3092F, (-1250.39F));
      Wall wall1 = new Wall(1.0F, (-1298.0848F), 1005.3092F, 1005.3092F, 1718.092F);
      wall1.getPoints();
      wall1.setXEnd((-1250.39F));
      Wall.Property wall_Property0 = Wall.Property.THICKNESS;
      wall1.getRightSideShininess();
      wall1.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.getThickness();
      wall1.getArcExtent();
      wall0.getLength();
      wall0.setRightSideShininess((-3503.1707F));
      wall0.clone();
      wall1.containsWallEndAt((-1298.0848F), 522.8521F, 1005.3092F);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Wall wall0 = new Wall(1750.7F, (-1.0F), 1750.7F, (-1.0F), 1.0F, 1.0F);
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.setYStart((-1.0F));
      wall0.setXStart((-1.0F));
      wall0.containsPoint(1.0F, (-1.0F), (-2706.7F));
      wall0.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Wall wall0 = new Wall(0.758205F, 0.758205F, (-3294.7F), (-3294.7F), (-3294.7F), (-3294.7F));
      Float float0 = new Float(1.0001);
      Float float1 = new Float(1.0001);
      wall0.setArcExtent(float0);
      wall0.setXEnd(0.758205F);
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      float float2 = 3494.5F;
      Wall wall1 = new Wall((-1810.3F), (-3294.7F), (-1810.3F), (-3294.7F), (-2812.32F), 3494.5F);
      wall1.getHeightAtEnd();
      Wall wall2 = wall0.clone();
      wall2.containsPoint((-556.64F), (-3294.7F), 0.0F);
      wall1.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("l;^>I]{U");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.l;^>I]{U
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-1350.32F), 2645.445F, 0.0F, 38.0F, 326.06354F);
      wall0.getPoints();
      wall0.setYStart((-989.9F));
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Wall wall0 = new Wall(326.06354F, 326.06354F, 326.06354F, 326.06354F, 0.0F);
      Level level0 = new Level("+W-`", 0.0F, 0.0F, (-1041.9F));
      wall0.setRightSideShininess((-1041.9F));
      wall0.clone();
      wall0.getHeightAtEnd();
      // Undeclared exception!
      try { 
        Wall.clone((List<Wall>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.Wall", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Wall wall0 = new Wall(4368.019F, 4368.019F, (-802.3863F), (-802.3863F), (-802.3863F), 4368.019F);
      Float float0 = new Float(10.095947265625);
      Float float1 = new Float(4368.019F);
      wall0.setArcExtent(float1);
      wall0.setXEnd((-3294.7F));
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Wall wall1 = new Wall((-2812.6746F), (-802.3863F), (-802.3863F), (-2812.6746F), (-5721.3F), (-5721.3F));
      wall0.clone();
      Float float2 = new Float((double) (-802.3863F));
      // Undeclared exception!
      wall0.intersectsRectangle((-802.3863F), (-5721.3F), 4368.019F, (-3294.7F));
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), 662.91F, (-1780.5F), (-1217.4678F), 2676.4592F, (-1.0F));
      Float float0 = new Float((-1516.886979335012));
      wall0.setArcExtent(float0);
      wall0.setXEnd(1557.1743F);
      wall0.getHeightAtEnd();
      wall0.containsPoint((-1.0F), (-1.0F), 662.91F);
      wall0.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall wall0 = new Wall(2266.296F, 2266.296F, (-1.0F), (-1950.242F), 1411.0F, 1411.0F);
      wall0.getHeightAtEnd();
      wall0.setArcExtent((Float) null);
      wall0.setHeight((Float) null);
      wall0.setHeight((Float) null);
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setHeightAtEnd(float0);
      Wall wall1 = new Wall((-13.6675F), (-13.6675F), (-13.6675F), 375.028F, (-1211.8F));
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.getWallAtStart();
      Wall wall3 = new Wall(3365.6099F, (-3357.1975F), 943.3642F, (-1211.8F), 342.5F);
      wall0.setWallAtStart(wall2);
      Wall wall4 = wall2.clone();
      wall4.setLeftSideShininess((-1.0F));
      wall0.getRightSideShininess();
      wall0.containsPoint((-2812.32F), (-1211.8F), 283.6162F);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Wall wall0 = new Wall((-1994.9016F), (-1994.9016F), (-1994.9016F), 0.0F, (-1994.9016F), (-3450.9F));
      wall0.move((-3450.9F), 3552.076F);
      wall0.setYStart(1.0F);
      wall0.containsPoint((-1994.9016F), (-1994.9016F), (-3450.9F));
      wall0.getYEnd();
      wall0.containsPoint((-1994.9016F), (-1363.6F), 0.0F);
      wall0.getThickness();
      wall0.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.01F, (-1.0F), (-802.3863F), 0.01F);
      wall0.getLength();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((-2812.32F));
      wall0.setHeightAtEnd(float0);
      Wall wall1 = new Wall(1653.255F, (-2812.32F), (-1.0F), (-1.0F), (-2812.32F), 345.0F);
      Wall wall2 = new Wall((-1.0F), 1653.255F, 1.0F, 2409.26F, 2.0F, (-3503.1707F));
      wall0.clone();
      Float float1 = new Float((double) 2409.26F);
      Wall wall3 = new Wall((-1.0F), 1.0F, 320.989F, 320.989F, 1.0F, (-460.0F));
      wall3.setHeightAtEnd(float0);
      wall3.isTrapezoidal();
      wall3.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      float float0 = 0.0F;
      float float1 = 3318.4556F;
      Wall wall0 = new Wall(0.0F, (-1.0F), (-1.0F), 3318.4556F, (-1.0F));
      wall0.intersectsRectangle(0.0F, 3318.4556F, 3318.4556F, 0.0F);
      wall0.setLeftSideShininess(3318.4556F);
      wall0.containsPoint((-1.0F), (-1.0F), 3318.4556F);
      wall0.getXStart();
      wall0.setXEnd(0.0F);
      int int0 = (-1);
      Integer integer0 = new Integer((-1));
      wall0.getHeight();
      Float.sum((-1), 3318.4556F);
      wall0.setHeightAtEnd((Float) null);
      Integer.getInteger((String) null, integer0);
      Integer.getInteger((String) null, (-1));
      wall0.setLeftSideColor(integer0);
      Level level0 = new Level("", (-1), 3318.4556F, (-1));
      String string0 = "{AuXvGqKv#:Zt<}";
      Class<Object> class0 = Object.class;
      wall0.getXArcCircleCenter();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource 
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setArcExtent(float0);
      wall0.setXEnd((-2812.32F));
      Wall wall1 = new Wall((-1248.6918F), (-2812.32F), (-4944.03F), (-2046.3538F), (-5721.308F), (-2812.32F));
      wall0.setArcExtent(float0);
      wall1.setYEnd(0.1F);
      Wall wall2 = wall1.clone();
      Float float1 = new Float(169.47578398645692);
      wall1.setHeightAtEnd(float0);
      wall1.getHeightAtEnd();
      wall1.getArcExtent();
      Float float2 = new Float(1.000000013351432E-10);
      wall1.getYArcCircleCenter();
      wall2.setHeight(float2);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Wall wall0 = new Wall(0.013334667F, 3577.4646F, (-1.0F), 0.013334667F, 0.1F, 1666.47F);
      MockURL.getFileExample();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("LEVEL", "", temporaryURLContent0, (-90.50109F), 914.0F, (String) null, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setRightSideTexture(homeTexture0);
      Wall wall1 = wall0.clone();
      wall1.getPoints();
      wall0.getRightSideTexture();
      wall1.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setWallAtStart(wall1);
      wall0.getPoints();
      wall0.setRightSideShininess(0.083341666F);
      wall0.getRightSideColor();
      wall1.getHeight();
      Float float0 = new Float((-1710.0F));
      Float float1 = new Float((-1.0));
      wall1.getHeightAtEnd();
      wall1.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      float float0 = 5381.78F;
      Wall wall0 = new Wall((-1248.6918F), (-1248.6918F), (-1248.6918F), 5381.78F, 5381.78F, 5381.78F);
      wall0.getRightSideTexture();
      Float float1 = new Float(1.000100016593933);
      Float float2 = new Float((double) 5381.78F);
      wall0.setArcExtent(float2);
      wall0.setXEnd(668.275F);
      Float.max((-2469.62F), 5381.78F);
      Wall wall1 = new Wall((-5445.802F), (-1248.6918F), (-2767.481F), (-3294.7F), 1775.0743F, 1775.0743F);
      wall0.setArcExtent(float2);
      wall1.getHeightAtEnd();
      float float3 = 837.9969F;
      // Undeclared exception!
      wall0.containsPoint(837.9969F, (-1472.024F), (-3294.7F));
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setHeightAtEnd(float0);
      wall0.setHeightAtEnd(float0);
      Integer integer0 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", 46);
      Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      wall0.setRightSideColor(integer0);
      wall0.getLevel();
      wall0.setYEnd((-2812.32F));
      Wall.Property.values();
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      wall0.setXEnd(46);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      wall1.removePropertyChangeListener(propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("9QG) 5UWa7dTQa8<$]j", propertyChangeListener1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "9( (]O]", propertyChangeListenerProxy1, float0);
      Object object0 = new Object();
      Integer integer1 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "9( (]O]", "b=up|\"$*}ej  !,(", integer1);
      Integer integer2 = new Integer(0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      propertyChangeEvent1.setPropagationId(integer2);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy1);
      wall0.getYStart();
      wall1.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall1.getYStart();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Wall wall0 = new Wall((-789.3477F), (-789.3477F), (-789.3477F), (-789.3477F), (-789.3477F), (-789.3477F));
      wall0.setXEnd((-789.3477F));
      Wall wall1 = new Wall((-789.3477F), (-789.3477F), (-528.0F), (-789.3477F), (-789.3477F));
      wall0.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-3503.1707F), 0.0F, (-3503.1707F), (-3503.1707F), 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall0.isTrapezoidal();
      wall1.getLeftSideShininess();
      wall1.isTrapezoidal();
      wall0.removePropertyChangeListener((PropertyChangeListener) null);
      Wall wall2 = wall0.clone();
      wall2.setThickness((-2521.9F));
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Wall wall0 = new Wall((-1002.34314F), 1.0F, (-1002.34314F), 441.39F, 1.0F);
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess(3923.7444F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      wall0.setWallAtEnd(wall0);
      wall0.containsWallEndAt(2283.9343F, (-1002.34314F), (-1002.34314F));
      Float float0 = new Float((double) 441.39F);
      wall0.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      float float0 = (-802.3863F);
      Wall wall0 = new Wall(0.0F, 1.0F, (-1.0F), 0.0F, 1.0F, (-802.3863F));
      Float float1 = new Float((-1516.886979335012));
      wall0.setArcExtent(float1);
      wall0.setXEnd(0.0F);
      wall0.getHeightAtEnd();
      wall0.containsPoint(553.44F, 1005.3092F, 0.0F);
      wall0.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-3503.1707F), 0.0F, (-3503.1707F), (-3503.1707F), 0.0F);
      Wall wall1 = wall0.clone();
      Float float0 = new Float(943.3641897);
      wall0.setArcExtent(float0);
      wall1.getHeightAtEnd();
      Float float1 = new Float((-1300.5F));
      wall0.setArcExtent(float1);
      wall1.removePropertyChangeListener((PropertyChangeListener) null);
      Wall wall2 = wall1.clone();
      wall2.setThickness(0.758205F);
      wall1.getXEnd();
      Integer integer0 = new Integer(2732);
      wall2.setLeftSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-3503.1707F), 1478.2938F, 2430.2F, (-2812.32F), (-2247.709F));
      Wall wall1 = wall0.clone();
      Wall wall2 = new Wall((-558.0F), (-1211.8F), (-558.0F), (-5467.9F), (-1211.8F));
      wall2.setWallAtStart(wall1);
      wall1.isTrapezoidal();
      wall1.getLeftSideShininess();
      wall2.isTrapezoidal();
      Wall.Property.valueOf("RIGHT_SIDE_COLOR");
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall2.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.getHeightAtEnd();
      wall0.setArcExtent((Float) null);
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Wall wall0 = new Wall(5381.78F, 5381.78F, 5381.78F, (-1248.6918F), (-1248.6918F));
      Float float0 = new Float(5381.78F);
      wall0.setHeight(float0);
      wall0.getHeight();
      Float float1 = new Float(5381.78F);
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Wall wall0 = new Wall((-148.54211F), (-180.1989F), 2091.0615F, 2091.0615F, (-1326.6F));
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      float float0 = 0.0F;
      float float1 = 3318.4556F;
      Wall wall0 = new Wall(0.0F, (-1.0F), (-1.0F), 3318.4556F, (-1.0F));
      wall0.intersectsRectangle(0.0F, 3318.4556F, 3318.4556F, 0.0F);
      wall0.setLeftSideShininess(3318.4556F);
      wall0.containsPoint((-1.0F), (-1.0F), 3318.4556F);
      wall0.getXStart();
      wall0.setXEnd(0.0F);
      int int0 = (-1);
      Integer integer0 = new Integer((-1));
      wall0.getHeight();
      wall0.setHeightAtEnd((Float) null);
      Integer.getInteger((String) null, integer0);
      Integer.getInteger((String) null, (-1));
      wall0.setLeftSideColor(integer0);
      Level level0 = new Level("", (-1), 3318.4556F, (-1));
      String string0 = "{AuXvGqKv#:Zt<}";
      Class<Object> class0 = Object.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource 
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Wall wall0 = new Wall((-576.5488F), (-576.5488F), (-576.5488F), (-1.0F), 2.0F, (-1.0F));
      wall0.setYStart(2.0F);
      wall0.getPoints();
      Float float0 = new Float((-576.5488F));
      wall0.setHeightAtEnd(float0);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.poll();
      linkedList0.clone();
      Wall.clone((List<Wall>) linkedList0);
      wall0.getHeightAtEnd();
      wall0.getRightSideColor();
      wall0.getYStart();
      wall0.getLeftSideTexture();
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      wall0.setXEnd((-2812.32F));
      wall0.setYEnd(0.1F);
      Wall wall1 = new Wall((-2812.32F), (-2812.32F), 0.1F, (-2812.32F), (-2812.32F));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Wall wall0 = new Wall(5381.78F, 5381.78F, 5381.78F, (-1248.6918F), (-1248.6918F));
      Float float0 = new Float(5381.78F);
      wall0.setHeight(float0);
      wall0.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Wall wall0 = new Wall(1750.7F, (-1.0F), (-360.04056F), (-1.0F), 1.0F, 1.0F);
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Wall wall1 = wall0.clone();
      wall1.setYStart((-1.0F));
      wall1.getStartPointToEndPointDistance();
      wall1.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("Ls*Q4(qd-0>-h^>t");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.Ls*Q4(qd-0>-h^>t
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Wall wall0 = new Wall(3219.0F, 3923.7444F, 3923.7444F, 441.39F, (-1002.34314F), 1.0F);
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess(3923.7444F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      wall0.setWallAtEnd(wall0);
      wall0.getStartPointToEndPointDistance();
      wall0.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("tqJwHc$n(\"1f2xi9Ok4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.tqJwHc$n(\"1f2xi9Ok4
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Wall wall0 = new Wall((-1350.32F), (-1350.32F), 2645.445F, 2645.445F, (-1.0F), 2645.445F);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("S_:>r8938ym~n!P%Y>\"", (PropertyChangeListener) null);
      wall0.addPropertyChangeListener((PropertyChangeListener) null);
      wall0.getLeftSideTexture();
      float float0 = new Float((-1.0F));
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 1.0F, 1.0F, 1.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall1.setThickness(0.0F);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall0.getHeightAtEnd();
      wall1.containsPoint(0.0F, 0.0F, 0.0F);
      wall0.getPoints();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Wall wall0 = new Wall(5381.78F, 5381.78F, 5381.78F, (-1248.6918F), (-1248.6918F));
      wall0.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      Float float0 = new Float(5381.78F);
      wall0.setHeight(float0);
      wall0.setHeight(float0);
      Integer integer0 = new Integer(8);
      wall0.setRightSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, (-1326.6F), (-1326.6F), 1524.56F);
      wall0.isTrapezoidal();
      wall0.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Wall wall0 = new Wall(0.758205F, 0.758205F, 0.758205F, (-1886.7786F), (-1886.7786F), 804.9094F);
      wall0.setPattern((TextureImage) null);
      Float float0 = new Float(1.0);
      Float float1 = new Float(804.9094F);
      wall0.setArcExtent(float1);
      wall0.setXEnd((-1.0F));
      Wall wall1 = new Wall(1604.63F, 120.225F, (-528.0F), (-1605.0F), (-1.0F));
      wall1.setWallAtStart(wall0);
      wall1.intersectsRectangle(1604.63F, (-1.0F), 0.0F, 4727.3F);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-124);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Wall wall2 = new Wall(4727.3F, 0.0F, 1363.0F, (-1.0F), (-2299.8892F));
      wall2.getRightSideColor();
      wall2.getLeftSideTexture();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Wall wall0 = new Wall(1750.7F, (-1.0F), 1750.7F, (-1.0F), 2.230669F, 2.230669F);
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      Float float0 = new Float(756.7744F);
      wall0.setHeight(float0);
      Float.max(2.230669F, 1782.0455F);
      wall0.setHeight(float0);
      wall0.getLevel();
      wall0.containsWallEndAt(756.7744F, 4714.816F, (-558.0F));
      wall0.isAtLevel((Level) null);
      Float float1 = new Float(756.7744F);
      wall0.setHeightAtEnd(float0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setHeightAtEnd(float0);
      Wall wall1 = new Wall((-373.41F), (-373.41F), (-2812.32F), (-373.41F), (-2489.3635F), 46);
      Wall wall2 = new Wall((-2489.3635F), 46, (-2489.3635F), (-1.0F), 3816.242F, 2409.2605F);
      Wall wall3 = wall2.clone();
      Float float1 = new Float((-2322.84843356));
      Level level0 = new Level("", (-1957.2867F), (-2812.32F), 46);
      Level level1 = level0.clone();
      wall2.isAtLevel(level1);
      wall3.getHeightAtEnd();
      wall2.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 752.15F, 752.15F, 0.0F, 0.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("'vBbfWQBO@|e)", propertyChangeListener0);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getLeftSideColor();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1524.56F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy(",#<c", propertyChangeListener0);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Wall wall0 = new Wall(1771.85F, (-1248.6918F), (-1248.6918F), 3439.34F, 1771.85F, 3439.34F);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Wall wall0 = new Wall((-1350.32F), (-1350.32F), 2645.445F, 2645.445F, 2645.445F, 2645.445F);
      wall0.getThickness();
      wall0.getArcExtent();
      wall0.getLength();
      wall0.setRightSideShininess(2645.445F);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall0.getHeightAtEnd();
      wall1.containsPoint(0.0F, 0.0F, 0.0F);
      wall1.getPoints();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      LinkedList<Wall> linkedList1 = new LinkedList<Wall>();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((-2812.32F));
      wall0.setHeightAtEnd(float0);
      Wall wall1 = new Wall((-1.0F), (-1.0F), (-2812.32F), 2.0F, (-2812.32F), (-2812.32F));
      Wall wall2 = wall0.clone();
      Float float1 = new Float((double) (-2812.32F));
      wall2.setHeightAtEnd(float0);
      wall2.isTrapezoidal();
      wall1.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), 2539.7F, 2539.7F, (-1710.0F), 3294.3723F);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("LEVEL", "LEVEL", temporaryURLContent0, 2539.7F, 3294.3723F, "LEVEL", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setRightSideTexture(homeTexture0);
      Wall wall1 = wall0.clone();
      wall1.setLeftSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Level level0 = new Level((String) null, (-1248.6918F), 1603.6525F, 2550.4F);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.Wall", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.Wall", propertyChangeListenerProxy0);
      level0.removePropertyChangeListener(propertyChangeListenerProxy0);
      Wall wall0 = new Wall(2550.4F, (-1.0F), 2574.63F, 0.25660706F, 3439.34F, 1603.6525F);
      wall0.setLevel(level0);
      Level level1 = new Level("S_:>r8938ym~n!P%Y>\"", 1.0F, 1.0F, (-83.62F));
      Level level2 = new Level("", (-4.9412994F), 0.25660706F, 2393.2827F);
      level2.clone();
      wall0.isAtLevel(level1);
      wall0.getLeftSideShininess();
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Wall wall0 = new Wall(1337.292F, 1337.292F, 1.0F, 0.0F, (-1587.4286F));
      Wall wall1 = wall0.clone();
      wall1.containsWallStartAt(0.0F, (-1587.4286F), 0.0F);
      wall0.getLength();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      Integer integer0 = new Integer((-2674));
      Wall wall2 = new Wall((-2674), 1765.66F, 1.0F, 2023.47F, 1.0F, (-698.87585F));
      Wall wall3 = wall2.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("QJ!W(:|", propertyChangeListenerProxy0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.move((-34.474705F), (-106.661F));
      wall3.getRightSideTexture();
      wall2.setPattern((TextureImage) null);
      wall1.setThickness(610.159F);
      wall3.getWallAtStart();
      wall1.getYStart();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Wall wall0 = new Wall(326.06354F, 326.06354F, 326.06354F, 326.06354F, 3326.0452F);
      wall0.getRightSideColor();
      wall0.setLeftSideColor((Integer) null);
      wall0.getPattern();
      wall0.setPattern((TextureImage) null);
      wall0.getStartPointToEndPointDistance();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-1350.32F), 2645.445F, 0.0F, 38.0F, 326.06354F);
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall1.setWallAtEnd(wall0);
      Float float0 = new Float(4.9412994384765625);
      wall1.setArcExtent(float0);
      Wall wall2 = new Wall(0.0F, (-1542.2668F), (-1542.2668F), 0.0F, (-1542.2668F));
      wall2.getStartPointToEndPointDistance();
      wall1.getPoints();
      Integer integer0 = Integer.valueOf(1596);
      wall2.setLeftSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 1.0F, (-1.0F), 0.0F, 1.0F, (-802.3863F));
      Float float0 = new Float((-1516.886979335012));
      wall0.setArcExtent(float0);
      wall0.getHeightAtEnd();
      wall0.containsPoint(553.44F, (-802.3863F), 0.0F);
      Wall wall1 = new Wall(0.0F, (-1.0F), (-802.3863F), 0.1F, 0.0F, 0.0F);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.clone();
      wall2.getRightSideTexture();
      wall2.setPattern((TextureImage) null);
      wall1.setLeftSideShininess(0.1F);
      wall0.getRightSideShininess();
      wall0.containsPoint(0.0F, (-1444.45F), 1.0F);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      Float float0 = new Float(943.3641897);
      wall0.setArcExtent(float0);
      wall1.getHeightAtEnd();
      wall1.containsPoint((-34.474705F), 0.0F, (-1300.5F));
      Wall wall2 = new Wall(1234.3802F, 0.0F, 1631.833F, 0.0F, 1234.3802F, (-2855.0F));
      wall0.getPoints();
      Wall wall3 = new Wall(1825.01F, (-34.474705F), (-3707.8845F), (-1300.5F), 1231.7649F);
      wall2.setWallAtStart(wall0);
      wall0.clone();
      wall1.setLeftSideShininess(0.0F);
      wall2.getRightSideShininess();
      wall1.containsPoint(2694.6F, 0.0F, 0.0F);
      wall2.getLeftSideColor();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setArcExtent(float0);
      wall0.setXEnd((-2812.32F));
      wall0.setArcExtent(float0);
      wall0.intersectsRectangle((-2812.32F), (-2812.32F), 29.957F, 29.957F);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Wall wall0 = new Wall((-576.5488F), 2640.845F, 2640.845F, 3220.1F, 2640.845F);
      wall0.intersectsRectangle(0.0F, (-576.5488F), 1.0F, 3220.1F);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Wall wall0 = new Wall(326.06354F, 37.959423F, 326.06354F, 2645.445F, (-1350.32F));
      wall0.isTrapezoidal();
      Level level0 = new Level("S_:>r8938ym~n!P%Y>\"", 2645.445F, 37.959423F, 326.06354F);
      Level level1 = level0.clone();
      wall0.isAtLevel(level1);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 1.0F, (-1.0F), 0.0F, 1.0F, (-802.3863F));
      Float float0 = new Float((-1516.886979335012));
      wall0.setArcExtent(float0);
      wall0.setXEnd(0.0F);
      wall0.getHeightAtEnd();
      wall0.containsPoint(553.44F, 1005.3092F, 0.0F);
      Wall wall1 = new Wall(0.0F, (-1.0F), 1005.3092F, 0.1F, 0.0F, 0.0F);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.clone();
      wall2.getRightSideTexture();
      wall2.setPattern((TextureImage) null);
      wall1.setLeftSideShininess(0.1F);
      wall0.getRightSideShininess();
      wall0.containsPoint(0.0F, (-1444.45F), 1.0F);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Wall wall0 = new Wall(5381.78F, (-1248.6918F), (-1248.6918F), 5381.78F, (-1248.6918F));
      wall0.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      Float float0 = new Float(5381.78F);
      wall0.containsPoint((-1.0F), (-2812.32F), 1.0F);
      wall0.getThickness();
      wall0.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), 2539.7F, 2539.7F, (-1710.0F), (-616.6F));
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("LEVEL", "LEVEL", temporaryURLContent0, 2539.7F, (-616.6F), "LEVEL", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setRightSideTexture(homeTexture0);
      Wall wall1 = wall0.clone();
      wall1.getPoints();
      HomeTexture homeTexture1 = wall1.getRightSideTexture();
      wall0.setRightSideTexture(homeTexture1);
      Integer integer0 = new Integer((-4));
      wall1.setLeftSideColor(integer0);
      wall0.getPattern();
      wall1.getLeftSideColor();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Wall wall0 = new Wall((-1248.6918F), (-1248.6918F), (-1248.6918F), 5381.78F, 5381.78F, 5381.78F);
      wall0.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      Float float0 = new Float(5381.78F);
      wall0.setHeight(float0);
      Float.max((-1.0F), 0.0F);
      wall0.setHeight(float0);
      wall0.setRightSideShininess((-1248.6918F));
      Integer integer0 = new Integer(2);
      wall0.setLeftSideColor((Integer) null);
      Float float1 = new Float(130.404);
      Float float2 = new Float(0.0);
      Float.max((-1248.6918F), (-405.46945F));
      wall0.setHeightAtEnd(float2);
      wall0.getXStart();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((-2812.32F));
      wall0.setHeightAtEnd(float0);
      Wall wall1 = new Wall((-1.0F), (-1.0F), (-2812.32F), 2.0F, 1653.255F, (-2812.32F));
      Wall wall2 = new Wall(2409.26F, 2409.26F, (-1.0F), (-2812.32F), 2409.26F, 2.0F);
      Wall wall3 = wall0.clone();
      Float float1 = new Float((double) (-2812.32F));
      wall3.setHeightAtEnd(float0);
      wall3.isTrapezoidal();
      wall1.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Wall wall0 = new Wall((-642.1143F), 2.0F, (-642.1143F), 2.0F, (-1.0F), (-373.41F));
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!/", propertyChangeListener0);
      wall1.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall1.getLeftSideTexture();
      wall0.setPattern((TextureImage) null);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Wall wall0 = new Wall((-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F));
      Float float0 = new Float((double) (-2812.3F));
      wall0.setHeightAtEnd(float0);
      Float.sum(1043.41F, 1043.41F);
      wall0.setHeightAtEnd(float0);
      Integer integer0 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", 46);
      Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      wall0.setRightSideColor(integer0);
      wall0.getLevel();
      wall0.setYEnd((-2812.3F));
      Wall.Property.values();
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      wall0.setXEnd(46);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      wall1.removePropertyChangeListener(propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("9QG) 5UWa7dTQa8<$]j", propertyChangeListener1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "9( (]O]", propertyChangeListenerProxy1, float0);
      Object object0 = new Object();
      Integer integer1 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "9( (]O]", "b=up|\"$*}ej  !,(", integer1);
      wall0.getRightSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.setLeftSideShininess(0);
      wall0.getRightSideShininess();
      wall1.containsPoint(1339.0F, 1.0F, 1.0F);
      wall1.getXArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setArcExtent(float0);
      Level level0 = new Level("2I^w=sB6", (-2812.32F), (-2812.32F), (-2812.32F));
      wall0.setLevel(level0);
      Level level1 = new Level(")$", (-3011.803F), 1679.5083F, 2387.1648F);
      Level level2 = level0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      level2.clone();
      wall0.isAtLevel(level1);
      wall0.isAtLevel(level2);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Wall wall0 = new Wall(656.64F, (-1298.0848F), (-1298.0848F), 0.0F, 2803.3857F);
      Float float0 = new Float(1.0);
      wall0.setArcExtent(float0);
      Wall wall1 = wall0.clone();
      wall0.setThickness(2803.3857F);
      Level level0 = new Level("com.eteks.sweethome3d.model.Level", 2803.3857F, 656.64F, 1.0F);
      wall1.getLevel();
      wall0.setLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      float float0 = 1337.292F;
      Wall wall0 = new Wall(1337.292F, 1337.292F, 1.0F, 1.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall1.containsWallStartAt(1337.292F, 0.0F, 1337.292F);
      wall0.getLength();
      String string0 = "m";
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("m", propertyChangeListener0);
      Integer integer0 = new Integer((-2664));
      Integer.getInteger("QJ!W(:|", (-2664));
      Integer.getInteger("", 0);
      try { 
        Integer.parseUnsignedInt("m", 1241);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix 1241 greater than Character.MAX_RADIX
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-3503.1707F), 0.0F, (-3503.1707F), (-3503.1707F), 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall0.isTrapezoidal();
      wall1.getLeftSideShininess();
      wall1.isTrapezoidal();
      Wall.Property.valueOf("RIGHT_SIDE_COLOR");
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.setRightSideShininess(0.0F);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setArcExtent(float0);
      wall0.setXEnd((-2812.32F));
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Level level0 = new Level("com.eteks.sweethome3d.model.HomeTexture", (-2812.32F), 1972.8F, (-29.20049F));
      wall0.setLevel(level0);
      Level level1 = new Level("S_:>r8938ym~n!P%Y>\"", 1679.5083F, 1.0F, (-0.5719911F));
      Level level2 = new Level((String) null, (-2812.32F), (-1.0F), (-160.4138F));
      level2.clone();
      wall0.isAtLevel(level1);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Wall wall0 = new Wall((-1298.0848F), (-1298.0848F), 1718.092F, 1718.092F, (-1298.0848F));
      Float float0 = new Float((double) (-1298.0848F));
      wall0.setArcExtent(float0);
      wall0.removePropertyChangeListener((PropertyChangeListener) null);
      wall0.containsPoint(553.44F, 1005.3092F, (-1250.39F));
      Wall wall1 = new Wall(1.0F, (-1298.0848F), 1005.3092F, 1005.3092F, 1718.092F);
      wall1.getPoints();
      Wall.Property wall_Property0 = Wall.Property.THICKNESS;
      wall1.getRightSideShininess();
      wall1.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.getThickness();
      wall1.getArcExtent();
      wall0.getLength();
      wall0.setRightSideShininess((-3503.1707F));
      Wall wall2 = wall0.clone();
      Float float1 = new Float(1718.092F);
      wall1.setArcExtent(float1);
      wall0.getHeightAtEnd();
      wall2.getHeight();
      wall0.getRightSideShininess();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Wall wall0 = new Wall((-1248.6918F), (-1248.6918F), (-1248.6918F), 5381.78F, 5381.78F, 5381.78F);
      wall0.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      Float float0 = new Float(5381.78F);
      wall0.setHeight(float0);
      Float.max((-1.0F), (-1248.6918F));
      wall0.setHeight(float0);
      wall0.setRightSideShininess((-1248.6918F));
      Integer integer0 = new Integer(2);
      Wall wall1 = new Wall((-727.08F), 2, (-1.0F), (-597.92F), (-637.335F));
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.clone();
      wall0.setLeftSideShininess(0.0F);
      wall0.getRightSideShininess();
      wall2.containsPoint(0.0F, 0.0F, (-1248.6918F));
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 4368.019F, (-234.59F), (-2640.737F), (-2640.737F), 959.373F);
      Float float0 = new Float((double) (-5721.308F));
      wall0.setArcExtent(float0);
      wall0.setYEnd((-1248.6918F));
      wall0.containsPoint((-5721.308F), (-2640.737F), (-2046.3538F));
      // Undeclared exception!
      wall0.containsPoint((-1.0F), (-1.0F), (-1.0F));
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall1.setWallAtEnd(wall0);
      Float float0 = new Float(4.9412994384765625);
      wall1.setArcExtent(float0);
      Wall wall2 = new Wall(0.0F, (-1542.2668F), (-1542.2668F), 0.0F, (-1542.2668F));
      wall2.getStartPointToEndPointDistance();
      wall2.setLeftSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      LinkedList<Wall> linkedList1 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList1);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Wall wall0 = new Wall((-1350.32F), (-1350.32F), 2645.445F, 2645.445F, 37.959423F, 2645.445F);
      wall0.move(2645.445F, (-1350.32F));
      wall0.containsPoint(326.06354F, 326.06354F, 37.959423F);
      wall0.getPoints();
      Wall.Property wall_Property0 = Wall.Property.WALL_AT_END;
      wall0.getArcExtent();
      Float float0 = new Float((-2629.008F));
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Wall wall0 = new Wall(982.35156F, 982.35156F, (-1.0F), 593.2974F, (-1250.39F));
      wall0.getWallAtStart();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), 2539.7F, 2539.7F, (-1710.0F), (-616.6F));
      Wall wall1 = new Wall(3795.1707F, (-3294.7F), (-616.6F), 1979.0F, (-1664.8F));
      wall1.getPoints();
      wall1.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setWallAtStart(wall1);
      wall0.getPoints();
      wall0.getPoints();
      wall0.getHeightAtEnd();
      wall0.getRightSideColor();
      wall0.getHeight();
      wall0.intersectsRectangle(2.0F, 3795.1707F, (-1.0F), 2701.9192F);
      wall0.getHeightAtEnd();
      wall1.intersectsRectangle(2.0F, 881.1779F, 2701.9192F, 2539.7F);
      wall1.getLeftSideTexture();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 1906.968F, 1906.968F, 2778.354F, 0.0F);
      int int0 = 2;
      Integer integer0 = new Integer(2);
      wall0.setThickness(0.0F);
      try { 
        Integer.parseUnsignedInt("com.eteks.sweethome3d.io.HomeURLContent");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"com.eteks.sweethome3d.io.HomeURLContent\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-1298.0848F), 1718.092F, 1718.092F, (-2812.32F));
      Float float0 = new Float((double) (-1298.0848F));
      wall0.setArcExtent(float0);
      wall0.removePropertyChangeListener((PropertyChangeListener) null);
      wall0.containsPoint(553.44F, 1005.3092F, (-1250.39F));
      Wall wall1 = new Wall(1.0F, (-1298.0848F), 1005.3092F, 1005.3092F, 1718.092F);
      wall1.getPoints();
      Wall.Property wall_Property0 = Wall.Property.THICKNESS;
      wall1.getRightSideShininess();
      wall1.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.getThickness();
      wall1.getArcExtent();
      wall0.getLength();
      wall0.setRightSideShininess((-3503.1707F));
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Wall wall0 = new Wall((-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F));
      Float float0 = new Float((double) (-2812.3F));
      wall0.setHeightAtEnd(float0);
      Float float1 = new Float((-0.90458876F));
      wall0.setHeight(float1);
      float float2 = new Float((-2812.3F));
      wall0.setHeight(float0);
      wall0.isAtLevel((Level) null);
      Float float3 = new Float(0.0F);
      Float float4 = new Float((-4181.8449));
      wall0.setHeightAtEnd(float4);
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Wall wall0 = new Wall((-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F), (-2812.3F));
      Float float0 = new Float((double) (-2812.3F));
      wall0.setHeightAtEnd(float0);
      Integer integer0 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", 46);
      Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      wall0.setRightSideColor(integer0);
      wall0.getLevel();
      wall0.setYEnd((-2812.3F));
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      Wall wall2 = wall0.clone();
      wall1.setThickness(1478.458F);
      wall2.getRightSideTexture();
      wall2.setRightSideTexture((HomeTexture) null);
      Level level0 = new Level("v`UIOL#jB\"|DG", 724.526F, 724.526F, (-2812.3F));
      wall2.setLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      Float float0 = new Float(943.3641897);
      wall0.setArcExtent(float0);
      wall1.getHeightAtEnd();
      wall1.containsPoint((-34.474705F), 0.0F, (-1300.5F));
      Wall wall2 = new Wall(0.0F, 1631.833F, (-1.0F), (-1211.8F), (-2855.0F), 0.0F);
      Wall wall3 = new Wall((-1211.8F), 0.0F, (-1300.5F), 1631.833F, (-3357.1975F));
      wall0.setWallAtStart(wall3);
      Wall wall4 = wall0.clone();
      wall4.setLeftSideShininess((-2855.0F));
      wall0.getRightSideShininess();
      wall4.containsPoint(1569.3F, (-1298.0848F), (-1429.2F));
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      float float0 = 0.0F;
      Wall wall0 = new Wall(1337.292F, 1337.292F, 1.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall1.containsWallStartAt(0.0F, 0.0F, 0.0F);
      wall0.getLength();
      String string0 = "m";
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("m", propertyChangeListener0);
      Integer integer0 = new Integer((-2664));
      Integer.getInteger("QJ!W(:|", (-2664));
      Integer.getInteger("", 0);
      String string1 = "";
      try { 
        Integer.parseUnsignedInt("", 1241);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-3737.0F), 0.0F, 662.91F, 662.91F);
      Wall wall1 = wall0.clone();
      wall1.getStartPointToEndPointDistance();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Wall wall1 = new Wall(1503.368F, (-1.0F), (-1277.4729F), 9.777F, (-1002.34314F), (-3120.99F));
      wall0.getLeftSideTexture();
      wall1.setRightSideTexture((HomeTexture) null);
      wall1.setRightSideShininess(1.0F);
      wall1.setWallAtEnd(wall0);
      wall0.getStartPointToEndPointDistance();
      Wall wall2 = wall1.getWallAtEnd();
      wall2.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("tqJwHc$n(\"1f2xi9Ok4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.tqJwHc$n(\"1f2xi9Ok4
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Wall wall0 = new Wall(1750.7F, (-1.0F), 1750.7F, (-1.0F), 1.0F, 1.0F);
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.setYStart((-1.0F));
      wall0.getStartPointToEndPointDistance();
      wall0.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("Super class isn't cloneable");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.Super class isn't cloneable
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Wall wall0 = new Wall((-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F), (-2812.32F));
      Float float0 = new Float((double) (-2812.32F));
      wall0.setHeightAtEnd(float0);
      wall0.setHeightAtEnd(float0);
      Integer integer0 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", 46);
      Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      wall0.setRightSideColor(integer0);
      wall0.setYEnd((-2812.32F));
      Wall.Property.values();
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      wall0.setXEnd(46);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      wall1.removePropertyChangeListener(propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("9QG) 5UWa7dTQa8<$]j", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "9( (]O]", propertyChangeListenerProxy1, float0);
      Object object0 = new Object();
      Integer integer1 = Integer.getInteger("9QG) 5UWa7dTQa8<$]j", integer0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "9( (]O]", "b=up|\"$*}ej  !,(", integer1);
      Integer integer2 = new Integer(0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Integer.compare(46, (-3631));
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      propertyChangeEvent1.setPropagationId(integer2);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy1);
      wall0.getYStart();
      wall1.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall1.getYStart();
      wall1.getLength();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      float float0 = 1.0F;
      float float1 = (-1.0F);
      Wall wall0 = new Wall(0.0F, 1.0F, (-1.0F), 0.0F, 1.0F, (-802.3863F));
      Float float2 = new Float((-1516.886979335012));
      wall0.setArcExtent(float2);
      wall0.getHeightAtEnd();
      float float3 = 553.44F;
      float float4 = 0.0F;
      wall0.containsPoint(553.44F, (-802.3863F), 0.0F);
      Class<Object> class0 = Object.class;
      wall0.getXArcCircleCenter();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource 
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Wall wall0 = new Wall((-1592.1868F), (-1592.1868F), (-1592.1868F), (-1592.1868F), (-1592.1868F), (-1592.1868F));
      Wall wall1 = wall0.clone();
      wall0.getHeightAtEnd();
      Wall wall2 = wall0.clone();
      Float float0 = new Float((double) (-1592.1868F));
      wall0.setHeightAtEnd(float0);
      wall2.setRightSideShininess((-1592.1868F));
      wall1.clone();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      float float0 = (-1.0F);
      Wall wall0 = new Wall((-1.0F), 1.0F, (-1.0F), 1.0F, 1.0F);
      wall0.setYStart(0.0F);
      wall0.setYEnd((-1.0F));
      String string0 = "#.KHl)(s&uL9qC";
      String string1 = "cYM-Fm<5\\";
      Class<String> class0 = String.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource 
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Wall wall0 = new Wall((-789.3477F), (-789.3477F), (-789.3477F), (-789.3477F), (-789.3477F), (-789.3477F));
      Float float0 = new Float(1.0001);
      wall0.setArcExtent(float0);
      wall0.setXEnd((-789.3477F));
      wall0.setWallAtStart((Wall) null);
      Wall wall1 = new Wall((-2046.3538F), (-2046.3538F), (-789.3477F), (-2046.3538F), (-1.0F));
      wall0.intersectsRectangle((-528.0F), (-323.4183F), (-789.3477F), (-323.4183F));
      wall0.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Wall wall0 = new Wall(4368.019F, 4368.019F, (-802.3863F), (-476.4F), (-802.3863F), 4368.019F);
      Float float0 = new Float(1.0001);
      Float float1 = new Float((double) 4368.019F);
      wall0.setArcExtent(float1);
      wall0.setXEnd((-3294.7F));
      Wall wall1 = new Wall((-2812.32F), (-802.3863F), (-476.4F), (-2812.32F), (-5721.3F), (-5721.3F));
      wall1.setArcExtent(float1);
      wall1.getHeightAtEnd();
      wall1.containsPoint(1653.255F, (-476.4F), (-1472.024F));
      // Undeclared exception!
      wall0.containsPoint((-3294.7F), (-2812.32F), 553.44F);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Wall wall0 = new Wall((-1248.6918F), (-1248.6918F), (-1248.6918F), 5381.78F, 5381.78F, 5381.78F);
      wall0.setThickness((-1248.6918F));
      wall0.getRightSideTexture();
      wall0.setXEnd(5381.78F);
      Float float0 = new Float(5381.78F);
      wall0.setHeight(float0);
      wall0.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Wall wall0 = new Wall((-1841.0735F), 0.0F, 2362.3198F, 0.0F, 0.0F, 2968.2578F);
      Float float0 = new Float((double) 0.0F);
      Float.isFinite((-591.7335F));
      wall0.setArcExtent(float0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Wall wall0 = new Wall((-1248.6918F), (-1248.6918F), (-1248.6918F), 5381.78F, 5381.78F, 5381.78F);
      Wall wall1 = new Wall(5381.78F, 2409.26F, 0.0F, 898.0F, 1578.0F, 0.0F);
      Wall wall2 = new Wall(2409.26F, 2409.26F, (-922.75635F), 673.93524F, 1653.255F, 1.0F);
      Wall wall3 = wall2.clone();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("work", "work", 13, "&$:vvMEbj'", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, 2.0F, 898.0F, "WALL_AT_END", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall3.setLeftSideTexture(homeTexture0);
      wall3.setXStart(2648.317F);
      Float float0 = new Float(4018767.0);
      wall1.setHeightAtEnd(float0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      float float0 = 3816.242F;
      float float1 = 1718.092F;
      Wall wall0 = new Wall((-2812.32F), (-1298.0848F), 1718.092F, 1718.092F, (-2812.32F));
      Float float2 = new Float((double) (-1298.0848F));
      wall0.setArcExtent(float2);
      wall0.removePropertyChangeListener((PropertyChangeListener) null);
      String string0 = "";
      Level level0 = new Level("", 3816.242F, (-2812.32F), (-2812.32F));
      wall0.setLevel(level0);
      wall0.clone();
      String string1 = "?";
      Class<Integer> class0 = Integer.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource 
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      float float0 = (-1.0F);
      Wall wall0 = new Wall(0.0F, 0.0F, (-1.0F), 773.0F, 773.0F);
      float float1 = 0.0F;
      wall0.containsWallStartAt(0.0F, (-1.0F), 0.0F);
      String string0 = "aDa\"(W~SSKt{s^";
      try { 
        Integer.decode("aDa\"(W~SSKt{s^");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"aDa\"(W~SSKt{s^\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Wall wall0 = new Wall(3219.0F, 3925.4207F, 3925.4207F, 441.39F, (-1001.5223F), 1.0F);
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess(3925.4207F);
      Wall wall1 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("tqJwHc$n(\"1f2xi9Ok4", propertyChangeListener0);
      wall1.setWallAtEnd(wall0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall1.getStartPointToEndPointDistance();
      wall0.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("tqJwHc$n(\"1f2xi9Ok4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.tqJwHc$n(\"1f2xi9Ok4
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      float float0 = 1750.7F;
      float float1 = (-663.14F);
      Wall wall0 = new Wall((-84.0F), (-663.14F), 1750.7F, 1750.7F, 1.0F);
      wall0.getRightSideTexture();
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      Float float2 = new Float(1750.7F);
      wall0.setHeight((Float) null);
      Wall wall1 = wall0.clone();
      Wall wall2 = wall0.clone();
      wall2.setWallAtEnd(wall0);
      wall1.getStartPointToEndPointDistance();
      wall0.getPoints();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("K$yPL\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.K$yPL\"
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
