/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 10:42:06 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.ContourPlot;
import jahuwaldt.plot.PlotRunList;
import java.awt.Color;
import java.text.ChoiceFormat;
import java.text.DecimalFormat;
import java.text.Format;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContourPlot_ESTest extends ContourPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[][] doubleArray0 = new double[2][8];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 2460.5545;
      doubleArray1[1] = 1953.82028445;
      doubleArray0[0] = doubleArray1;
      Locale locale0 = Locale.UK;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      ContourPlot contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 718, false, ")cJzx03J!i", (String) null, "-200\u00A0050 %", numberFormat0, numberFormat0);
      Color color0 = Color.BLUE;
      Color color1 = new Color((-7));
      contourPlot0.colorizeContours(color0, color1);
      assertEquals(249, color1.getBlue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[][] doubleArray0 = new double[2][8];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 2460.5545;
      doubleArray1[1] = 1953.82028445;
      doubleArray0[0] = doubleArray1;
      Locale locale0 = Locale.UK;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      ContourPlot contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 718, false, ")cJzx03J!i", (String) null, "-200\u00A0050 %", numberFormat0, numberFormat0);
      Color color0 = Color.BLUE;
      Color color1 = new Color((-7));
      contourPlot0.colorizeContours(color1, color0);
      assertEquals(")cJzx03J!i", contourPlot0.getTitle());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[][] doubleArray0 = new double[4][7];
      double[][] doubleArray1 = new double[7][4];
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      ContourPlot contourPlot0 = null;
      try {
        contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray1, 0, true, "Y;NmS_hZg5Z", "Y;NmS_hZg5Z", "Y;NmS_hZg5Z", numberFormat0, numberFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[][] doubleArray0 = new double[4][3];
      double[][] doubleArray1 = new double[7][9];
      Locale locale0 = Locale.ENGLISH;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      ContourPlot contourPlot0 = null;
      try {
        contourPlot0 = new ContourPlot(doubleArray0, doubleArray1, doubleArray1, (-291), false, "BcP-Q", "File", "File", numberFormat0, numberFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[][] doubleArray0 = new double[2][8];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 2459.6102032245067;
      doubleArray1[1] = 1953.82028445;
      doubleArray0[0] = doubleArray1;
      ChoiceFormat choiceFormat0 = new ChoiceFormat("D6e/");
      ContourPlot contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 41, false, "D6e/", "D6e/", "D6e/", choiceFormat0, choiceFormat0);
      // Undeclared exception!
      try { 
        contourPlot0.colorizeContours((Color) null, (Color) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[][] doubleArray0 = new double[2][8];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 2460.9709495114635;
      doubleArray1[1] = 1955.2998833587756;
      doubleArray0[0] = doubleArray1;
      ChoiceFormat choiceFormat0 = new ChoiceFormat("");
      ContourPlot contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 41, false, "", "", "", choiceFormat0, choiceFormat0);
      Vector<Format.Field> vector0 = new Vector<Format.Field>();
      PlotRunList plotRunList0 = new PlotRunList(vector0);
      contourPlot0.setRuns(plotRunList0);
      // Undeclared exception!
      try { 
        contourPlot0.colorizeContours((Color) null, (Color) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("D]6e");
      ContourPlot contourPlot0 = null;
      try {
        contourPlot0 = new ContourPlot((double[][]) null, (double[][]) null, (double[][]) null, (-287), true, "D]6e", "D]6e", "D]6e", choiceFormat0, choiceFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[][] doubleArray0 = new double[2][8];
      ChoiceFormat choiceFormat0 = new ChoiceFormat("D]6e/");
      ContourPlot contourPlot0 = null;
      try {
        contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, (-453), true, "D]6e/", "D]6e/", "D]6e/", choiceFormat0, choiceFormat0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[][] doubleArray0 = new double[0][6];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ContourPlot contourPlot0 = null;
      try {
        contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 239, true, "G_#D-S", "G_#D-S", "G_#D-S", decimalFormat0, decimalFormat0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[][] doubleArray0 = new double[2][8];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 2459.6102032245067;
      doubleArray1[1] = 1953.82028445;
      doubleArray0[0] = doubleArray1;
      ChoiceFormat choiceFormat0 = new ChoiceFormat("D6e/");
      ContourPlot contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 41, false, "D6e/", "D6e/", "D6e/", choiceFormat0, choiceFormat0);
      Object object0 = contourPlot0.clone();
      assertNotSame(contourPlot0, object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[][] doubleArray0 = new double[2][8];
      Locale locale0 = Locale.UK;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      ContourPlot contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 718, false, ")cJzx03J!i", (String) null, "-200\u00A0050 %", numberFormat0, numberFormat0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContourPlot contourPlot0 = new ContourPlot();
      // Undeclared exception!
      try { 
        contourPlot0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }
}
