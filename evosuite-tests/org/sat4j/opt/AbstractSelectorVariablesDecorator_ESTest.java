/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 18 19:48:19 GMT 2019
 */

package org.sat4j.opt;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sat4j.LightFactory;
import org.sat4j.opt.MaxSatDecorator;
import org.sat4j.specs.IConstr;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.IVecInt;
import org.sat4j.tools.AbstractMinimalModel;
import org.sat4j.tools.DimacsOutputSolver;
import org.sat4j.tools.ManyCore;
import org.sat4j.tools.OptToSatAdapter;
import org.sat4j.tools.StatisticsSolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractSelectorVariablesDecorator_ESTest extends AbstractSelectorVariablesDecorator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      maxSatDecorator0.setExpectedNumberOfClauses(449);
      assertEquals(449, maxSatDecorator0.getExpectedNumberOfClauses());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, true);
      boolean boolean0 = maxSatDecorator0.admitABetterSolution();
      assertTrue(boolean0);
      
      maxSatDecorator0.model();
      assertFalse(maxSatDecorator0.isOptimal());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(maxSatDecorator0);
      maxSatDecorator0.addClause(iVecInt0);
      boolean boolean0 = maxSatDecorator0.admitABetterSolution(iVecInt0);
      assertTrue(boolean0);
      
      maxSatDecorator0.getPrevmodel();
      assertFalse(maxSatDecorator0.isSolutionOptimal());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(maxSatDecorator0);
      boolean boolean0 = maxSatDecorator0.admitABetterSolution(iVecInt0);
      assertTrue(boolean0);
      
      maxSatDecorator0.getPrevmodel();
      assertFalse(maxSatDecorator0.isSolutionOptimal());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, true);
      int[] intArray0 = new int[9];
      maxSatDecorator0.setPrevfullmodel(intArray0);
      int[] intArray1 = maxSatDecorator0.getPrevfullmodel();
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(maxSatDecorator0);
      boolean boolean0 = maxSatDecorator0.admitABetterSolution(iVecInt0);
      assertTrue(boolean0);
      
      maxSatDecorator0.getPrevfullmodel();
      assertFalse(maxSatDecorator0.isOptimal());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(maxSatDecorator0);
      boolean boolean0 = maxSatDecorator0.admitABetterSolution(iVecInt0);
      assertTrue(boolean0);
      
      maxSatDecorator0.getPrevboolmodel();
      assertFalse(maxSatDecorator0.isOptimal());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      maxSatDecorator0.setExpectedNumberOfClauses(949);
      int int0 = maxSatDecorator0.getNbexpectedclauses();
      assertEquals(949, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      maxSatDecorator0.setExpectedNumberOfClauses(949);
      int int0 = maxSatDecorator0.getExpectedNumberOfClauses();
      assertEquals(949, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptToSatAdapter[] optToSatAdapterArray0 = new OptToSatAdapter[5];
      OptToSatAdapter optToSatAdapter0 = mock(OptToSatAdapter.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(optToSatAdapter0).addBlockingClause(any(org.sat4j.specs.IVecInt.class));
      optToSatAdapterArray0[0] = optToSatAdapter0;
      optToSatAdapterArray0[1] = optToSatAdapter0;
      optToSatAdapterArray0[2] = optToSatAdapter0;
      optToSatAdapterArray0[3] = optToSatAdapter0;
      optToSatAdapterArray0[4] = optToSatAdapter0;
      ManyCore<OptToSatAdapter> manyCore0 = new ManyCore<OptToSatAdapter>(optToSatAdapterArray0);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(manyCore0);
      IConstr iConstr0 = maxSatDecorator0.discardCurrentModel();
      assertFalse(iConstr0.canBePropagatedMultipleTimes());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(maxSatDecorator0);
      boolean boolean0 = maxSatDecorator0.admitABetterSolution(iVecInt0);
      assertTrue(boolean0);
      
      maxSatDecorator0.createBlockingClauseForCurrentModel();
      assertFalse(maxSatDecorator0.isOptimal());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(maxSatDecorator0);
      boolean boolean0 = maxSatDecorator0.admitABetterSolution(iVecInt0);
      assertTrue(boolean0);
      assertFalse(maxSatDecorator0.isSolutionOptimal());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator((ISolver) null);
      // Undeclared exception!
      try { 
        maxSatDecorator0.setPrevmodel((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.opt.AbstractSelectorVariablesDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, true);
      maxSatDecorator0.admitABetterSolution();
      // Undeclared exception!
      try { 
        maxSatDecorator0.model((-1514));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1515
         //
         verifyException("org.sat4j.opt.AbstractSelectorVariablesDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, true);
      maxSatDecorator0.admitABetterSolution();
      try { 
        maxSatDecorator0.discardCurrentModel();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Creating Empty clause ?
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Clauses", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(dimacsOutputSolver0);
      // Undeclared exception!
      try { 
        maxSatDecorator0.discardCurrentModel();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.AbstractOutputSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator((ISolver) null, true);
      // Undeclared exception!
      try { 
        maxSatDecorator0.admitABetterSolution((IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(statisticsSolver0);
      try { 
        maxSatDecorator0.admitABetterSolution();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // That solver only compute statistics
         //
         verifyException("org.sat4j.tools.StatisticsSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator((ISolver) null);
      // Undeclared exception!
      try { 
        maxSatDecorator0.admitABetterSolution();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      int[] intArray0 = maxSatDecorator0.getPrevfullmodel();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(maxSatDecorator0);
      maxSatDecorator0.addClause(iVecInt0);
      boolean boolean0 = maxSatDecorator0.admitABetterSolution(iVecInt0);
      assertTrue(boolean0);
      
      maxSatDecorator0.model();
      assertFalse(maxSatDecorator0.isOptimal());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OptToSatAdapter optToSatAdapter0 = mock(OptToSatAdapter.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(optToSatAdapter0).isSatisfiable(any(org.sat4j.specs.IVecInt.class) , anyBoolean());
      doReturn(0, 0).when(optToSatAdapter0).nVars();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(optToSatAdapter0, true);
      IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(optToSatAdapter0);
      boolean boolean0 = maxSatDecorator0.admitABetterSolution(iVecInt0);
      assertTrue(maxSatDecorator0.isSolutionOptimal());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      boolean[] booleanArray0 = maxSatDecorator0.getPrevboolmodel();
      assertNull(booleanArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OptToSatAdapter optToSatAdapter0 = mock(OptToSatAdapter.class, new ViolatedAssumptionAnswer());
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(optToSatAdapter0, true);
      maxSatDecorator0.setSolutionOptimal(false);
      assertFalse(maxSatDecorator0.isOptimal());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      maxSatDecorator0.setNbexpectedclauses((-3282));
      int int0 = maxSatDecorator0.getNbexpectedclauses();
      assertEquals((-3282), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      boolean boolean0 = maxSatDecorator0.isSolutionOptimal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, true);
      // Undeclared exception!
      try { 
        maxSatDecorator0.discardCurrentModel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      int[] intArray0 = maxSatDecorator0.getPrevmodel();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      IVecInt iVecInt0 = maxSatDecorator0.createBlockingClauseForCurrentModel();
      assertNull(iVecInt0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      int int0 = maxSatDecorator0.getExpectedNumberOfClauses();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator((ISolver) null);
      boolean boolean0 = maxSatDecorator0.isOptimal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      int[] intArray0 = maxSatDecorator0.model();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      int[] intArray0 = new int[2];
      maxSatDecorator0.setPrevmodel(intArray0);
      assertEquals(2, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, true);
      // Undeclared exception!
      try { 
        maxSatDecorator0.model((-1514));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.opt.AbstractSelectorVariablesDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(dimacsOutputSolver0);
      boolean[] booleanArray0 = new boolean[0];
      maxSatDecorator0.setPrevboolmodel(booleanArray0);
      assertFalse(maxSatDecorator0.isOptimal());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, true);
      // Undeclared exception!
      try { 
        maxSatDecorator0.setPrevfullmodel((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.opt.AbstractSelectorVariablesDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, false);
      int int0 = maxSatDecorator0.getNbexpectedclauses();
      assertEquals(0, int0);
  }
}
