/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 17 12:45:51 GMT 2019
 */

package org.sat4j.minisat.orders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sat4j.minisat.constraints.cnf.Lits;
import org.sat4j.minisat.orders.SubsetVarOrder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SubsetVarOrder_ESTest extends SubsetVarOrder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-48);
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      Lits lits0 = new Lits();
      subsetVarOrder0.setLits(lits0);
      // Undeclared exception!
      try { 
        subsetVarOrder0.init();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[0];
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      Lits lits0 = new Lits();
      subsetVarOrder0.setLits(lits0);
      lits0.getFromPool(3659);
      subsetVarOrder0.init();
      Lits lits1 = new Lits();
      subsetVarOrder0.setLits(lits1);
      subsetVarOrder0.init();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[0];
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      // Undeclared exception!
      try { 
        subsetVarOrder0.undo((-4142));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.SubsetVarOrder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 9;
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      Lits lits0 = new Lits();
      lits0.getFromPool(9);
      subsetVarOrder0.setLits(lits0);
      subsetVarOrder0.init();
      // Undeclared exception!
      try { 
        subsetVarOrder0.undo((-895));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -895
         //
         verifyException("org.sat4j.minisat.orders.SubsetVarOrder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[0];
      Lits lits0 = new Lits();
      lits0.getFromPool(16384);
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      subsetVarOrder0.setLits(lits0);
      // Undeclared exception!
      subsetVarOrder0.init();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[0];
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      // Undeclared exception!
      try { 
        subsetVarOrder0.init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.SubsetVarOrder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubsetVarOrder subsetVarOrder0 = null;
      try {
        subsetVarOrder0 = new SubsetVarOrder((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.SubsetVarOrder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[0];
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      Lits lits0 = new Lits();
      subsetVarOrder0.setLits(lits0);
      subsetVarOrder0.init();
      subsetVarOrder0.undo(0);
      assertEquals(0, subsetVarOrder0.numberOfInterestingVariables());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 9;
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      Lits lits0 = new Lits();
      lits0.getFromPool(9);
      subsetVarOrder0.setLits(lits0);
      subsetVarOrder0.init();
      subsetVarOrder0.undo(9);
      assertEquals(0, subsetVarOrder0.numberOfInterestingVariables());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 9;
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      Lits lits0 = new Lits();
      lits0.getFromPool(761);
      subsetVarOrder0.setLits(lits0);
      subsetVarOrder0.init();
      subsetVarOrder0.undo(9);
      assertEquals(0, subsetVarOrder0.numberOfInterestingVariables());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 9;
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      Lits lits0 = new Lits();
      subsetVarOrder0.setLits(lits0);
      // Undeclared exception!
      try { 
        subsetVarOrder0.init();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // 0/9
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[1];
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      Lits lits0 = new Lits();
      lits0.getFromPool(761);
      subsetVarOrder0.setLits(lits0);
      // Undeclared exception!
      try { 
        subsetVarOrder0.init();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[0];
      Lits lits0 = new Lits();
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      subsetVarOrder0.activity = null;
      subsetVarOrder0.setLits(lits0);
      subsetVarOrder0.init();
      assertEquals(0, subsetVarOrder0.numberOfInterestingVariables());
  }
}
