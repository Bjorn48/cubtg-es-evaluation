[MASTER] 20:39:55.760 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.minisat.core.Solver<D> : Type points to itself
[MASTER] 20:43:43.639 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_57_1550432623533/org/sat4j/minisat/constraints/card/MaxWatchCard_57_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_57_1550432623533/org/sat4j/minisat/constraints/card/MaxWatchCard_57_tmp__ESTest_scaffolding.java]]
[MASTER] 20:43:43.639 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 20:43:43.639 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 20:43:43.646 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: org.sat4j.minisat.constraints.cnf.UnitClauses cannot be converted to org.sat4j.minisat.constraints.card.MaxWatchCard: 40
[MASTER] 20:43:43.669 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_57_1550432623533/org/sat4j/minisat/constraints/card/MaxWatchCard_57_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Feb 17 19:43:43 GMT 2019
4:  */
5: 
6: package org.sat4j.minisat.constraints.card;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import org.sat4j.core.VecInt;
15: import org.sat4j.minisat.constraints.CardinalityDataStructureYanMin;
16: import org.sat4j.minisat.constraints.card.MaxWatchCard;
17: import org.sat4j.minisat.constraints.cnf.Lits;
18: import org.sat4j.minisat.constraints.cnf.UnitClauses;
19: import org.sat4j.minisat.core.SearchParams;
20: import org.sat4j.minisat.core.Solver;
21: import org.sat4j.minisat.learning.FixedLengthLearning;
22: import org.sat4j.minisat.orders.PureOrder;
23: import org.sat4j.minisat.restarts.MiniSATRestarts;
24: 
25: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
26: public class MaxWatchCard_57_tmp__ESTest extends MaxWatchCard_57_tmp__ESTest_scaffolding {
27: 
28:   @Test(timeout = 4000)
29:   public void test0()  throws Throwable  {
30:       Lits lits0 = new Lits();
31:       CardinalityDataStructureYanMin cardinalityDataStructureYanMin0 = new CardinalityDataStructureYanMin();
32:       PureOrder pureOrder0 = new PureOrder();
33:       MiniSATRestarts miniSATRestarts0 = new MiniSATRestarts();
34:       FixedLengthLearning<CardinalityDataStructureYanMin> fixedLengthLearning0 = new FixedLengthLearning<CardinalityDataStructureYanMin>();
35:       Solver<CardinalityDataStructureYanMin> solver0 = new Solver<CardinalityDataStructureYanMin>(fixedLengthLearning0, cardinalityDataStructureYanMin0, (SearchParams) null, pureOrder0, miniSATRestarts0);
36:       VecInt vecInt0 = new VecInt(1060, 0);
37:       UnitClauses unitClauses0 = (UnitClauses)MaxWatchCard.maxWatchCardNew(solver0, lits0, vecInt0, false, 1060);
38:       // Undeclared exception!
39:       try { 
40:         ((MaxWatchCard) unitClauses0).toString();
41:         fail("Expecting exception: IllegalArgumentException");
42:       
43:       } catch(IllegalArgumentException e) {
44:       }
45:   }
46: }
RegularFileObject[/tmp/EvoSuite_57_1550432623533/org/sat4j/minisat/constraints/card/MaxWatchCard_57_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Feb 17 19:43:43 GMT 2019
5:  */
6: 
7: package org.sat4j.minisat.constraints.card;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class MaxWatchCard_57_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.minisat.constraints.card.MaxWatchCard"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MaxWatchCard_57_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.sat4j.minisat.core.ConflictTimerAdapter",
82:       "org.sat4j.specs.UnitPropagationListener",
83:       "org.sat4j.minisat.core.SizeComparator",
84:       "org.sat4j.tools.SolverDecorator",
85:       "org.sat4j.specs.Propagatable",
86:       "org.sat4j.minisat.core.Undoable",
87:       "org.sat4j.minisat.learning.FixedLengthLearning",
88:       "org.sat4j.ILauncherMode",
89:       "org.sat4j.minisat.core.Pair",
90:       "org.sat4j.core.EmptyVecInt",
91:       "org.sat4j.ExitCode",
92:       "org.sat4j.minisat.constraints.AbstractCardinalityDataStructure",
93:       "org.sat4j.specs.IVec",
94:       "org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy",
95:       "org.sat4j.minisat.restarts.FixedPeriodRestarts",
96:       "org.sat4j.specs.Lbool",
97:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
98:       "org.sat4j.AbstractLauncher$2",
99:       "org.sat4j.AbstractLauncher$1",
100:       "org.sat4j.minisat.orders.NegativeLiteralSelectionStrategy",
101:       "org.sat4j.specs.SearchListener",
102:       "org.sat4j.minisat.core.SimplificationType",
103:       "org.sat4j.minisat.learning.MiniSATLearning",
104:       "org.sat4j.minisat.core.SearchParams",
105:       "org.sat4j.tools.AbstractMinimalModel",
106:       "org.sat4j.specs.ILogAble$1",
107:       "org.sat4j.specs.Constr",
108:       "org.sat4j.specs.TimeoutException",
109:       "org.sat4j.minisat.learning.NoLearningButHeuristics",
110:       "org.sat4j.specs.ISolverService",
111:       "org.sat4j.minisat.core.LearningStrategy",
112:       "org.sat4j.specs.IGroupSolver",
113:       "org.sat4j.DecisionMode",
114:       "org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy",
115:       "org.sat4j.specs.IteratorInt",
116:       "org.sat4j.specs.ISolver",
117:       "org.sat4j.minisat.orders.RandomWalkDecorator",
118:       "org.sat4j.specs.UnitClauseProvider$1",
119:       "org.sat4j.minisat.learning.LimitedLearning",
120:       "org.sat4j.minisat.restarts.LubyRestarts",
121:       "org.sat4j.minisat.core.VoidTracing",
122:       "org.sat4j.minisat.core.ActivityListener",
123:       "org.sat4j.minisat.core.GlucoseLCDS",
124:       "org.sat4j.minisat.constraints.CardinalityDataStructureYanMin",
125:       "org.sat4j.minisat.core.ILits",
126:       "org.sat4j.BasicLauncher",
127:       "org.sat4j.tools.DotSearchTracing",
128:       "org.sat4j.specs.ILogAble",
129:       "org.sat4j.specs.ContradictionException",
130:       "org.sat4j.core.LiteralsUtils",
131:       "org.sat4j.minisat.learning.PercentLengthLearning",
132:       "org.sat4j.specs.IConstr",
133:       "org.sat4j.specs.IVecInt",
134:       "org.sat4j.tools.SolutionFoundListener",
135:       "org.sat4j.minisat.restarts.EMARestarts",
136:       "org.sat4j.minisat.core.PrimeImplicantStrategy",
137:       "org.sat4j.OptimizationMode",
138:       "org.sat4j.minisat.core.Learner",
139:       "org.sat4j.tools.DimacsStringSolver",
140:       "org.sat4j.specs.MandatoryLiteralListener",
141:       "org.sat4j.minisat.core.ActivityComparator",
142:       "org.sat4j.minisat.constraints.card.MaxWatchCard",
143:       "org.sat4j.specs.IProblem",
144:       "org.sat4j.minisat.restarts.MiniSATRestarts",
145:       "org.sat4j.minisat.orders.RSATLastLearnedClausesPhaseSelectionStrategy",
146:       "org.sat4j.core.VecInt",
147:       "org.sat4j.minisat.core.Solver",
148:       "org.sat4j.minisat.constraints.cnf.Lits",
149:       "org.sat4j.minisat.core.Solver$2",
150:       "org.sat4j.specs.UnitClauseProvider",
151:       "org.sat4j.minisat.core.Solver$1",
152:       "org.sat4j.AbstractLauncher",
153:       "org.sat4j.minisat.learning.AbstractLearning",
154:       "org.sat4j.minisat.core.Solver$4",
155:       "org.sat4j.minisat.core.Solver$3",
156:       "org.sat4j.minisat.core.LearnedConstraintsEvaluationType",
157:       "org.sat4j.minisat.learning.ClauseOnlyLearning",
158:       "org.sat4j.core.ASolverFactory",
159:       "org.sat4j.minisat.core.DataStructureFactory",
160:       "org.sat4j.core.Vec",
161:       "org.sat4j.minisat.core.Glucose2LCDS",
162:       "org.sat4j.minisat.core.Solver$6",
163:       "org.sat4j.minisat.core.SolverStats",
164:       "org.sat4j.minisat.core.Solver$8",
165:       "org.sat4j.minisat.core.IPhaseSelectionStrategy",
166:       "org.sat4j.minisat.core.ConstrActivityListener",
167:       "org.sat4j.minisat.orders.PhaseCachingAutoEraseStrategy",
168:       "org.sat4j.minisat.orders.SubsetVarOrder",
169:       "org.sat4j.minisat.restarts.ArminRestarts",
170:       "org.sat4j.specs.SearchListenerAdapter",
171:       "org.sat4j.minisat.constraints.cnf.UnitClauses",
172:       "org.sat4j.tools.ModelIterator",
173:       "org.sat4j.reader.ParseFormatException",
174:       "org.sat4j.minisat.core.ActivityLCDS",
175:       "org.sat4j.tools.AbstractOutputSolver",
176:       "org.sat4j.minisat.learning.ActiveLearning",
177:       "org.sat4j.minisat.orders.VarOrderHeap",
178:       "org.sat4j.minisat.orders.NaturalStaticOrder",
179:       "org.sat4j.minisat.core.ISimplifier",
180:       "org.sat4j.reader.InstanceReader",
181:       "org.sat4j.minisat.core.ConflictTimer",
182:       "org.sat4j.minisat.core.VarActivityListener",
183:       "org.sat4j.specs.VarMapper",
184:       "org.sat4j.minisat.orders.LevelBasedVarOrderHeap",
185:       "org.sat4j.specs.RandomAccessModel",
186:       "org.sat4j.minisat.SolverFactory",
187:       "org.sat4j.minisat.core.LBDConflictTimer",
188:       "org.sat4j.minisat.orders.TabuListDecorator",
189:       "org.sat4j.minisat.learning.NoLearningNoHeuristics",
190:       "org.sat4j.minisat.orders.PureOrder",
191:       "org.sat4j.minisat.core.SizeLCDS",
192:       "org.sat4j.minisat.core.RestartStrategy",
193:       "org.sat4j.minisat.core.AgeLCDS",
194:       "org.sat4j.reader.Reader",
195:       "org.sat4j.core.ReadOnlyVecInt",
196:       "org.sat4j.minisat.core.IOrder",
197:       "org.sat4j.minisat.orders.VariableComparator",
198:       "org.sat4j.minisat.core.ICDCL",
199:       "org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy",
200:       "org.sat4j.minisat.constraints.CardinalityDataStructure",
201:       "org.sat4j.minisat.core.MemoryBasedConflictTimer"
202:     );
203:   } 
204: 
205:   private static void resetClasses() {
206:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MaxWatchCard_57_tmp__ESTest_scaffolding.class.getClassLoader()); 
207: 
208:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
209:       "org.sat4j.minisat.constraints.card.MaxWatchCard",
210:       "org.sat4j.specs.Constr$1",
211:       "org.sat4j.specs.Constr",
212:       "org.sat4j.minisat.orders.VarOrderHeap",
213:       "org.sat4j.minisat.orders.LevelBasedVarOrderHeap",
214:       "org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy",
215:       "org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy",
216:       "org.sat4j.core.EmptyVecInt",
217:       "org.sat4j.core.VecInt",
218:       "org.sat4j.minisat.constraints.cnf.Lits",
219:       "org.sat4j.minisat.learning.LimitedLearning",
220:       "org.sat4j.minisat.learning.PercentLengthLearning",
221:       "org.sat4j.minisat.learning.AbstractLearning",
222:       "org.sat4j.minisat.learning.NoLearningButHeuristics",
223:       "org.sat4j.minisat.learning.MiniSATLearning",
224:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
225:       "org.sat4j.minisat.constraints.AbstractCardinalityDataStructure",
226:       "org.sat4j.minisat.constraints.CardinalityDataStructureYanMin",
227:       "org.sat4j.core.Vec",
228:       "org.sat4j.minisat.core.SearchParams",
229:       "org.sat4j.minisat.orders.NaturalStaticOrder",
230:       "org.sat4j.minisat.orders.NegativeLiteralSelectionStrategy",
231:       "org.sat4j.minisat.restarts.MiniSATRestarts",
232:       "org.sat4j.minisat.core.Solver$1",
233:       "org.sat4j.minisat.core.Solver",
234:       "org.sat4j.specs.ILogAble$1",
235:       "org.sat4j.specs.ILogAble",
236:       "org.sat4j.minisat.core.ActivityComparator",
237:       "org.sat4j.minisat.core.SolverStats",
238:       "org.sat4j.specs.SearchListenerAdapter",
239:       "org.sat4j.minisat.core.VoidTracing",
240:       "org.sat4j.specs.UnitClauseProvider$1",
241:       "org.sat4j.specs.UnitClauseProvider",
242:       "org.sat4j.minisat.core.Solver$2",
243:       "org.sat4j.minisat.core.Solver$3",
244:       "org.sat4j.minisat.core.Solver$4",
245:       "org.sat4j.minisat.core.Pair",
246:       "org.sat4j.minisat.core.ConflictTimerAdapter",
247:       "org.sat4j.minisat.core.MemoryBasedConflictTimer",
248:       "org.sat4j.minisat.core.ActivityLCDS",
249:       "org.sat4j.minisat.core.LBDConflictTimer",
250:       "org.sat4j.minisat.core.GlucoseLCDS",
251:       "org.sat4j.minisat.core.Glucose2LCDS",
252:       "org.sat4j.minisat.core.AgeLCDS",
253:       "org.sat4j.minisat.core.SizeComparator",
254:       "org.sat4j.minisat.core.SizeLCDS",
255:       "org.sat4j.minisat.core.Solver$8",
256:       "org.sat4j.minisat.constraints.card.MinWatchCard",
257:       "org.sat4j.minisat.learning.ActiveLearning",
258:       "org.sat4j.minisat.orders.PhaseCachingAutoEraseStrategy",
259:       "org.sat4j.minisat.orders.RandomWalkDecorator",
260:       "org.sat4j.minisat.restarts.LubyRestarts",
261:       "org.sat4j.AbstractLauncher",
262:       "org.sat4j.BasicLauncher",
263:       "org.sat4j.AbstractLauncher$1",
264:       "org.sat4j.DecisionMode",
265:       "org.sat4j.ExitCode",
266:       "org.sat4j.OptimizationMode",
267:       "org.sat4j.ILauncherMode",
268:       "org.sat4j.tools.SolverDecorator",
269:       "org.sat4j.tools.AbstractMinimalModel",
270:       "org.sat4j.minisat.learning.NoLearningNoHeuristics",
271:       "org.sat4j.minisat.orders.RSATLastLearnedClausesPhaseSelectionStrategy",
272:       "org.sat4j.opt.AbstractSelectorVariablesDecorator",
273:       "org.sat4j.opt.MaxSatDecorator",
274:       "org.sat4j.minisat.constraints.MixedDataStructureDanielHT",
275:       "org.sat4j.minisat.constraints.card.AtLeast",
276:       "org.sat4j.specs.ContradictionException",
277:       "org.sat4j.minisat.orders.PositiveLiteralSelectionStrategy",
278:       "org.sat4j.minisat.orders.TabuListDecorator",
279:       "org.sat4j.specs.Lbool",
280:       "org.sat4j.core.EmptyVecInt$1",
281:       "org.sat4j.minisat.core.Heap",
282:       "org.sat4j.minisat.orders.ActivityBasedVariableComparator",
283:       "org.sat4j.core.VecInt$1",
284:       "org.sat4j.minisat.core.ConflictTimerContainer",
285:       "org.sat4j.minisat.core.Solver$6",
286:       "org.sat4j.tools.AbstractOutputSolver",
287:       "org.sat4j.tools.DimacsOutputSolver",
288:       "org.sat4j.MUSLauncher",
289:       "org.sat4j.minisat.learning.ClauseOnlyLearning",
290:       "org.sat4j.minisat.orders.PureOrder",
291:       "org.sat4j.minisat.restarts.EMARestarts",
292:       "org.sat4j.minisat.constraints.CardinalityDataStructure",
293:       "org.sat4j.tools.StatisticsSolver",
294:       "org.sat4j.minisat.orders.SubsetVarOrder",
295:       "org.sat4j.core.ReadOnlyVecInt",
296:       "org.sat4j.tools.ModelIterator",
297:       "org.sat4j.tools.AbstractClauseSelectorSolver",
298:       "org.sat4j.tools.FullClauseSelectorSolver",
299:       "org.sat4j.tools.AbstractClauseSelectorSolver$1",
300:       "org.sat4j.tools.AbstractClauseSelectorSolver$2",
301:       "org.sat4j.tools.SubModelIterator",
302:       "org.sat4j.tools.SolutionFoundListener$1",
303:       "org.sat4j.tools.SolutionFoundListener",
304:       "org.sat4j.tools.ModelIteratorToSATAdapter",
305:       "org.sat4j.tools.ManyCore",
306:       "org.sat4j.minisat.core.Counter",
307:       "org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy",
308:       "org.sat4j.core.ASolverFactory",
309:       "org.sat4j.minisat.orders.RandomLiteralSelectionStrategy",
310:       "org.sat4j.minisat.restarts.ArminRestarts",
311:       "org.sat4j.minisat.constraints.cnf.BinaryClause",
312:       "org.sat4j.minisat.constraints.cnf.LearntBinaryClause",
313:       "org.sat4j.tools.DimacsStringSolver",
314:       "org.sat4j.minisat.orders.RSATPhaseSelectionStrategy",
315:       "org.sat4j.minisat.restarts.Glucose21Restarts",
316:       "org.sat4j.minisat.core.CircularBuffer",
317:       "org.sat4j.core.LiteralsUtils",
318:       "org.sat4j.minisat.restarts.FixedPeriodRestarts",
319:       "org.sat4j.minisat.learning.FixedLengthLearning",
320:       "org.sat4j.opt.MinOneDecorator",
321:       "org.sat4j.minisat.constraints.ClausalDataStructureWL",
322:       "org.sat4j.minisat.restarts.NoRestarts",
323:       "org.sat4j.LightFactory",
324:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWL",
325:       "org.sat4j.tools.NegationDecorator",
326:       "org.sat4j.minisat.constraints.CardinalityDataStructureYanMax",
327:       "org.sat4j.minisat.SolverFactory",
328:       "org.sat4j.tools.GroupClauseSelectorSolver",
329:       "org.sat4j.minisat.orders.UserFixedPhaseSelectionStrategy",
330:       "org.sat4j.minisat.constraints.MixedDataStructureSingleWL",
331:       "org.sat4j.tools.DotSearchTracing",
332:       "org.sat4j.minisat.constraints.cnf.UnitClauses",
333:       "org.sat4j.tools.OptToSatAdapter",
334:       "org.sat4j.tools.LexicoDecorator",
335:       "org.sat4j.minisat.constraints.cnf.CBClause",
336:       "org.sat4j.minisat.constraints.cnf.OriginalBinaryClause",
337:       "org.sat4j.minisat.constraints.cnf.WLClause",
338:       "org.sat4j.minisat.constraints.cnf.LearntWLClause",
339:       "org.sat4j.minisat.constraints.cnf.HTClause",
340:       "org.sat4j.minisat.constraints.cnf.LearntHTClause",
341:       "org.sat4j.tools.Minimal4CardinalityModel",
342:       "org.sat4j.tools.CheckMUSSolutionListener",
343:       "org.sat4j.tools.Minimal4InclusionModel",
344:       "org.sat4j.minisat.constraints.cnf.Clauses",
345:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWLConciseBinary",
346:       "org.sat4j.tools.encoding.EncodingStrategyAdapter",
347:       "org.sat4j.tools.encoding.Binomial",
348:       "org.sat4j.tools.ClausalCardinalitiesDecorator",
349:       "org.sat4j.minisat.constraints.xor.Xor",
350:       "org.sat4j.minisat.constraints.cnf.BinaryClauses",
351:       "org.sat4j.tools.MultiTracing",
352:       "org.sat4j.tools.GateTranslator",
353:       "org.sat4j.minisat.core.Solver$10",
354:       "org.sat4j.tools.encoding.Binary",
355:       "org.sat4j.core.ConstrGroup",
356:       "org.sat4j.minisat.orders.LevelAndActivityVariableComparator",
357:       "org.sat4j.tools.IVisualizationTool",
358:       "org.sat4j.core.Vec$1",
359:       "org.sat4j.minisat.constraints.cnf.UnitClause",
360:       "org.sat4j.minisat.core.Solver$5",
361:       "org.sat4j.minisat.core.Solver$5$1",
362:       "org.sat4j.tools.encoding.Ladder",
363:       "org.sat4j.specs.TimeoutException"
364:     );
365:   }
366: }

[MASTER] 20:43:43.680 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Lits lits0 = new Lits();
CardinalityDataStructureYanMin cardinalityDataStructureYanMin0 = new CardinalityDataStructureYanMin();
PureOrder pureOrder0 = new PureOrder();
MiniSATRestarts miniSATRestarts0 = new MiniSATRestarts();
FixedLengthLearning<CardinalityDataStructureYanMin> fixedLengthLearning0 = new FixedLengthLearning<CardinalityDataStructureYanMin>();
Solver<CardinalityDataStructureYanMin> solver0 = new Solver<CardinalityDataStructureYanMin>(fixedLengthLearning0, cardinalityDataStructureYanMin0, (SearchParams) null, pureOrder0, miniSATRestarts0);
VecInt vecInt0 = new VecInt(1060, 0);
UnitClauses unitClauses0 = (UnitClauses)MaxWatchCard.maxWatchCardNew(solver0, lits0, vecInt0, false, 1060);
((MaxWatchCard) unitClauses0).toString();

