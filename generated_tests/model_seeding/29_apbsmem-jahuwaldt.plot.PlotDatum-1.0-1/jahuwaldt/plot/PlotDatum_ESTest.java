/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 11:00:28 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.BoxLRSymbol;
import jahuwaldt.plot.CircleSymbol;
import jahuwaldt.plot.DiamondSymbol;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.PlotSymbol;
import jahuwaldt.plot.SquareSymbol;
import jahuwaldt.plot.TabLSymbol;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2499.658063191, 2499.658063191, true);
      plotDatum0.setY(1989.1950979);
      assertEquals(1989.1950979, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-624.023), (-624.023), false, (PlotSymbol) null);
      plotDatum0.setX(254.288379435702);
      assertEquals(254.288379435702, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.001, true);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.001, plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.239, 1.0, false, (PlotSymbol) null);
      plotDatum0.setYError((-1.0));
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals((-1.0), plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-624.023), (-624.023), false, (PlotSymbol) null);
      plotDatum0.setYError(254.288379435702);
      double double0 = plotDatum0.getYError();
      assertEquals(254.288379435702, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2499.658063191, 2499.658063191, true);
      plotDatum0.setYError((-416.0));
      double double0 = plotDatum0.getYError();
      assertEquals((-416.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true);
      double double0 = plotDatum0.getY();
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DiamondSymbol diamondSymbol0 = new DiamondSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1322.986566313, false, diamondSymbol0);
      double double0 = plotDatum0.getY();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1322.986566313, double0, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BoxLRSymbol boxLRSymbol0 = new BoxLRSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-4663.6451016), (-4663.6451016), true, boxLRSymbol0);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
      assertEquals((-4663.6451016), plotDatum0.y, 0.01);
      assertEquals((-4663.6451016), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, false, circleSymbol0);
      circleSymbol0.setSize(0);
      plotDatum0.getPlotSymbol();
      assertEquals(1.0, plotDatum0.x, 0.01);
      assertEquals(1.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.0), (-1.0), false, circleSymbol0);
      plotDatum0.getPlotSymbol();
      assertEquals((-1.0), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals((-1.0), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2499.658063191, 2499.658063191, true);
      SquareSymbol squareSymbol0 = new SquareSymbol();
      squareSymbol0.setSize((-2147088135));
      plotDatum0.setPlotSymbol(squareSymbol0);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(2499.658063191, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(2499.658063191, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1482.2069, 1482.2069, true);
      Color color0 = new Color(1663, true);
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertEquals(1482.2069, plotDatum0.x, 0.01);
      assertEquals(1482.2069, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(6, color1.getGreen());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TabLSymbol tabLSymbol0 = new TabLSymbol();
      PlotDatum plotDatum0 = new PlotDatum(2.0, 2371.4397, false, tabLSymbol0);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(boolean0);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(2371.4397, plotDatum0.y, 0.01);
      assertEquals(2.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BoxLRSymbol boxLRSymbol0 = new BoxLRSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-4663.6451016), (-4663.6451016), true, boxLRSymbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.hasErrorBar());
      assertEquals((-4663.6451016), plotDatum1.y, 0.01);
      assertEquals((-4663.6451016), plotDatum1.x, 0.01);
      assertTrue(plotDatum1.connected());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-624.023), (-624.023), false, (PlotSymbol) null);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertFalse(plotDatum1.connected());
      assertEquals((-624.023), plotDatum1.y, 0.01);
      assertNotSame(plotDatum1, plotDatum0);
      assertEquals((-624.023), plotDatum1.x, 0.01);
      assertFalse(plotDatum1.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-624.023), (-624.023), false, (PlotSymbol) null);
      Color color0 = Color.darkGray;
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertEquals((-624.023), plotDatum0.x, 0.01);
      assertEquals((-624.023), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(64, color1.getRed());
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-260.53000622), (-260.53000622), true);
      plotDatum0.setLineColor((Color) null);
      assertEquals((-260.53000622), plotDatum0.y, 0.01);
      assertEquals((-260.53000622), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-624.023), (-624.023), false, (PlotSymbol) null);
      plotDatum0.setYError(0.0F);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-624.023), plotDatum0.y, 0.01);
      assertEquals((-624.023), plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2499.658063191, 2499.658063191, true);
      double double0 = plotDatum0.getYError();
      assertTrue(plotDatum0.connected());
      assertEquals(2499.658063191, plotDatum0.y, 0.01);
      assertEquals(2499.658063191, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertFalse(boolean0);
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2499.658063191, 2499.658063191, true);
      plotDatum0.setConnected(true);
      assertTrue(plotDatum0.connected());
      assertEquals(2499.658063191, plotDatum0.y, 0.01);
      assertEquals(2499.658063191, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2499.658063191, 2499.658063191, true);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(2499.658063191, plotDatum0.y, 0.01);
      assertEquals(2499.658063191, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-3.857506709839318), (-3.857506709839318), false);
      double double0 = plotDatum0.getY();
      assertFalse(plotDatum0.connected());
      assertEquals((-3.857506709839318), double0, 0.01);
      assertEquals((-3.857506709839318), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-624.023), (-624.023), false, (PlotSymbol) null);
      plotDatum0.getLineColor();
      assertEquals((-624.023), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals((-624.023), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2499.658063191, 2499.658063191, true);
      double double0 = plotDatum0.getX();
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(2499.658063191, double0, 0.01);
      assertEquals(2499.658063191, plotDatum0.y, 0.01);
  }
}
