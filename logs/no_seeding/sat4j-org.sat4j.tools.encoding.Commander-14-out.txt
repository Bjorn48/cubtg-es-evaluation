* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.tools.encoding.Commander
* Starting Client-0
* Connecting to master process on port 9698
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.tools.encoding.Commander
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 234
* Using seed 1550435219639
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initialsss Number of Goals in DynMOSA = 61 / 234
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.4489795918367347
[Progress:==>                           7%] [Cov:==================>                53%]Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.45454545454545453
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5039370078740157
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 296
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.5306122448979592
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5454545454545454
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8582677165354331
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
[Progress:===>                          12%] [Cov:====================>              59%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 391
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.6938775510204082
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7272727272727273
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8582677165354331
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3333333333333333
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.75
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
[Progress:=====>                        18%] [Cov:========================>          69%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 494
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
[Progress:======>                       20%] [Cov:==========================>        75%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 590
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
[Progress:======>                       22%] [Cov:=============================>     83%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 693
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9763779527559056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
[Progress:================>             55%] [Cov:=============================>     83%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 793
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9763779527559056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
[Progress:=========================>    84%] [Cov:=============================>     83%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 821
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
[Progress:==============================100%] [Cov:=============================>     83%]Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9763779527559056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9763779527559056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182

* Search finished after 126s and 7 generations, 10653 statements, best individual has fitness: 24.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9763779527559056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Minimizing test suite
[MASTER] 21:30:33.156 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 49
* Number of covered goals: 49
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 127
* Number of covered goals: 124
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 6
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 18%
* Total number of goals: 22
* Number of covered goals: 4
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9763779527559056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Generated 31 tests with total length 416
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:31:22.004 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.8074833333333333% of time used, but only 4/31 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 65%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9763779527559056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Compiling and checking tests
[MASTER] 21:31:50.098 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:31:50.099 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
LightFactory lightFactory0 = new LightFactory();
ISolver iSolver0 = lightFactory0.defaultSolver();
VecInt vecInt0 = new VecInt(0);
commander0.addExactly(iSolver0, vecInt0, 0);
commander0.addAtMostOne(iSolver0, vecInt0);

[MASTER] 21:32:01.889 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:32:01.905 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
assertNotNull(commander0);

DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
assertNotNull(dimacsStringSolver0);
assertEquals(0, dimacsStringSolver0.newVar());
assertFalse(dimacsStringSolver0.isSolverKeptHot());
assertFalse(dimacsStringSolver0.isVerbose());
assertEquals(0L, dimacsStringSolver0.getTimeoutMs());
assertEquals(0, dimacsStringSolver0.nConstraints());
assertEquals(0, dimacsStringSolver0.nVars());
assertEquals("", dimacsStringSolver0.getLogPrefix());
assertEquals(0, dimacsStringSolver0.realNumberOfVariables());
assertFalse(dimacsStringSolver0.isDBSimplificationAllowed());
assertEquals(0, dimacsStringSolver0.getTimeout());

IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(dimacsStringSolver0);
assertNotNull(iVecInt0);
assertEquals(0, dimacsStringSolver0.newVar());
assertFalse(dimacsStringSolver0.isSolverKeptHot());
assertFalse(dimacsStringSolver0.isVerbose());
assertEquals(0L, dimacsStringSolver0.getTimeoutMs());
assertEquals(0, dimacsStringSolver0.nConstraints());
assertEquals(0, dimacsStringSolver0.nVars());
assertEquals("", dimacsStringSolver0.getLogPrefix());
assertEquals(0, dimacsStringSolver0.realNumberOfVariables());
assertFalse(dimacsStringSolver0.isDBSimplificationAllowed());
assertEquals(0, dimacsStringSolver0.getTimeout());
assertTrue(iVecInt0.isEmpty());
assertEquals(0, iVecInt0.size());

commander0.addExactlyOne(dimacsStringSolver0, iVecInt0);

[MASTER] 21:32:17.560 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:32:17.563 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
assertNotNull(commander0);

DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
assertNotNull(dimacsStringSolver0);
assertFalse(dimacsStringSolver0.isVerbose());
assertFalse(dimacsStringSolver0.isDBSimplificationAllowed());
assertEquals(0, dimacsStringSolver0.newVar());
assertEquals("", dimacsStringSolver0.getLogPrefix());
assertEquals(0, dimacsStringSolver0.nVars());
assertFalse(dimacsStringSolver0.isSolverKeptHot());
assertEquals(0, dimacsStringSolver0.realNumberOfVariables());
assertEquals(0, dimacsStringSolver0.getTimeout());
assertEquals(0, dimacsStringSolver0.nConstraints());
assertEquals(0L, dimacsStringSolver0.getTimeoutMs());

IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(dimacsStringSolver0);
assertNotNull(iVecInt0);
assertFalse(dimacsStringSolver0.isVerbose());
assertFalse(dimacsStringSolver0.isDBSimplificationAllowed());
assertEquals(0, dimacsStringSolver0.newVar());
assertEquals("", dimacsStringSolver0.getLogPrefix());
assertEquals(0, dimacsStringSolver0.nVars());
assertFalse(dimacsStringSolver0.isSolverKeptHot());
assertEquals(0, dimacsStringSolver0.realNumberOfVariables());
assertEquals(0, dimacsStringSolver0.getTimeout());
assertEquals(0, dimacsStringSolver0.nConstraints());
assertEquals(0L, dimacsStringSolver0.getTimeoutMs());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());

SolutionFoundListener solutionFoundListener0 = SolutionFoundListener.VOID;
assertNotNull(solutionFoundListener0);

Minimal4InclusionModel minimal4InclusionModel0 = new Minimal4InclusionModel(dimacsStringSolver0, iVecInt0, solutionFoundListener0);
assertNotNull(minimal4InclusionModel0);
assertFalse(dimacsStringSolver0.isVerbose());
assertFalse(dimacsStringSolver0.isDBSimplificationAllowed());
assertEquals(0, dimacsStringSolver0.newVar());
assertEquals("", dimacsStringSolver0.getLogPrefix());
assertEquals(0, dimacsStringSolver0.nVars());
assertFalse(dimacsStringSolver0.isSolverKeptHot());
assertEquals(0, dimacsStringSolver0.realNumberOfVariables());
assertEquals(0, dimacsStringSolver0.getTimeout());
assertEquals(0, dimacsStringSolver0.nConstraints());
assertEquals(0L, dimacsStringSolver0.getTimeoutMs());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());

SolutionCounter solutionCounter0 = new SolutionCounter(minimal4InclusionModel0);
assertNotNull(solutionCounter0);
assertFalse(dimacsStringSolver0.isVerbose());
assertFalse(dimacsStringSolver0.isDBSimplificationAllowed());
assertEquals(0, dimacsStringSolver0.newVar());
assertEquals("", dimacsStringSolver0.getLogPrefix());
assertEquals(0, dimacsStringSolver0.nVars());
assertFalse(dimacsStringSolver0.isSolverKeptHot());
assertEquals(0, dimacsStringSolver0.realNumberOfVariables());
assertEquals(0, dimacsStringSolver0.getTimeout());
assertEquals(0, dimacsStringSolver0.nConstraints());
assertEquals(0L, dimacsStringSolver0.getTimeoutMs());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertEquals(0, solutionCounter0.lowerBound());

VecInt vecInt0 = new VecInt(1591);
assertNotNull(vecInt0);
assertTrue(vecInt0.equals((Object)iVecInt0));
assertEquals(0, vecInt0.size());
assertTrue(vecInt0.isEmpty());

commander0.addAtMostOne(dimacsStringSolver0, vecInt0);
LightFactory lightFactory0 = LightFactory.instance();
lightFactory0.defaultSolver();
DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
dimacsOutputSolver0.createBlockingClauseForCurrentModel();
commander0.addAtMostOne(solutionCounter0, vecInt0);
int int0 = 45;
commander0.addExactly(minimal4InclusionModel0, vecInt0, int0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'Commander_ESTest' to evosuite-tests
* Done!

* Computation finished
