/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 09:44:30 GMT 2019
 */

package visu.handball.moves.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.event.ActionEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.model.HandballModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StartOneSequenceAnimationAction_ESTest extends StartOneSequenceAnimationAction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HandballModel handballModel0 = mock(HandballModel.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(handballModel0).addListener(any(visu.handball.moves.model.HandballModelListener.class));
      doReturn((HandballModel.State) null).when(handballModel0).getState();
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction(handballModel0);
      // Undeclared exception!
      try { 
        startOneSequenceAnimationAction0.modelChanged();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("visu.handball.moves.actions.StartOneSequenceAnimationAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction(handballModel0);
      ActionEvent actionEvent0 = new ActionEvent(handballModel0, 462, "", 462);
      // Undeclared exception!
      try { 
        startOneSequenceAnimationAction0.actionPerformed(actionEvent0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = null;
      try {
        startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction((HandballModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("visu.handball.moves.actions.StartOneSequenceAnimationAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HandballModel.State handballModel_State0 = HandballModel.State.PLACE_DEFENDERS;
      HandballModel.State handballModel_State1 = HandballModel.State.ANIMATION_RUNNING;
      HandballModel handballModel0 = mock(HandballModel.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(handballModel0).addListener(any(visu.handball.moves.model.HandballModelListener.class));
      doReturn(handballModel_State0, handballModel_State0, handballModel_State0, handballModel_State0, handballModel_State1).when(handballModel0).getState();
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction(handballModel0);
      ActionEvent actionEvent0 = new ActionEvent("", 2519, "}Nvm,40u\"jsX MGXsR~", (-10));
      startOneSequenceAnimationAction0.actionPerformed(actionEvent0);
      startOneSequenceAnimationAction0.modelChanged();
      startOneSequenceAnimationAction0.actionPerformed(actionEvent0);
      startOneSequenceAnimationAction0.actionPerformed(actionEvent0);
      startOneSequenceAnimationAction0.modelChanged();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HandballModel.State handballModel_State0 = HandballModel.State.PLACE_DEFENDERS;
      HandballModel.State handballModel_State1 = HandballModel.State.FULL_ANIMATION_ENDED;
      HandballModel handballModel0 = mock(HandballModel.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(handballModel0).addListener(any(visu.handball.moves.model.HandballModelListener.class));
      doReturn(handballModel_State0, handballModel_State0, handballModel_State0, handballModel_State1).when(handballModel0).getState();
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction(handballModel0);
      ActionEvent actionEvent0 = new ActionEvent("", 2519, "}Nvm,40u\"jsX MGXsR~", (-10));
      startOneSequenceAnimationAction0.actionPerformed(actionEvent0);
      startOneSequenceAnimationAction0.modelChanged();
      startOneSequenceAnimationAction0.actionPerformed(actionEvent0);
      startOneSequenceAnimationAction0.modelChanged();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      handballModel0.stopAnimation();
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction(handballModel0);
      startOneSequenceAnimationAction0.modelChanged();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HandballModel.State handballModel_State0 = HandballModel.State.PLACE_DEFENDERS;
      HandballModel.State handballModel_State1 = HandballModel.State.ANIMATION_RUNNING;
      HandballModel handballModel0 = mock(HandballModel.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(handballModel0).addListener(any(visu.handball.moves.model.HandballModelListener.class));
      doReturn(handballModel_State0, handballModel_State0, handballModel_State0, handballModel_State0, handballModel_State1).when(handballModel0).getState();
      StartOneSequenceAnimationAction startOneSequenceAnimationAction0 = new StartOneSequenceAnimationAction(handballModel0);
      ActionEvent actionEvent0 = new ActionEvent("", 2519, "}Nvm,40u\"jsX MGXsR~", (-10));
      startOneSequenceAnimationAction0.actionPerformed(actionEvent0);
      startOneSequenceAnimationAction0.modelChanged();
      startOneSequenceAnimationAction0.actionPerformed(actionEvent0);
      startOneSequenceAnimationAction0.actionPerformed(actionEvent0);
      startOneSequenceAnimationAction0.actionPerformed(actionEvent0);
      assertEquals(0L, actionEvent0.getWhen());
  }
}
