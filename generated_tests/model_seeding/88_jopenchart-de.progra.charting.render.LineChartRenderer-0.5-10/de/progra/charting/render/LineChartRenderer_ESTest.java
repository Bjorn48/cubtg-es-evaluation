/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 18:51:26 GMT 2019
 */

package de.progra.charting.render;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.CoordSystem;
import de.progra.charting.model.ChartDataModel;
import de.progra.charting.model.DataSet;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.EditableDataSet;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.render.LineChartRenderer;
import de.progra.charting.render.RowColorModel;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.image.BufferedImage;
import java.math.BigInteger;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LineChartRenderer_ESTest extends LineChartRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null).when(coordSystem0).getTransform(anyInt());
      DataSet[] dataSetArray0 = new DataSet[1];
      EditableDataSet editableDataSet0 = new EditableDataSet(0);
      dataSetArray0[0] = (DataSet) editableDataSet0;
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(dataSetArray0, dataSetArray0);
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, objectChartDataModel0);
      lineChartRenderer0.renderChart((Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn(affineTransform0).when(coordSystem0).getTransform(anyInt());
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn(0, 912).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(912).when(chartDataModel0).getDataSetNumber();
      doReturn(0).when(chartDataModel0).getValueAt(anyInt() , anyInt());
      doReturn(false).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      // Undeclared exception!
      try { 
        lineChartRenderer0.renderChart((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.LineChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(242);
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn(affineTransform0).when(coordSystem0).getTransform(anyInt());
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(chartDataModel0).getColumnValueAt(anyInt() , anyInt());
      doReturn(0, (-3089), 1313).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(242).when(chartDataModel0).getDataSetNumber();
      doReturn(0).when(chartDataModel0).getValueAt(anyInt() , anyInt());
      doReturn(true).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        lineChartRenderer0.renderChart(graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.LineChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null).when(coordSystem0).getTransform(anyInt());
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(1).when(chartDataModel0).getDataSetNumber();
      doReturn(true).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      lineChartRenderer0.renderChart(graphics2D0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null).when(coordSystem0).getTransform(anyInt());
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(1).when(chartDataModel0).getDataSetNumber();
      doReturn(0).when(chartDataModel0).getValueAt(anyInt() , anyInt());
      doReturn(false).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      // Undeclared exception!
      try { 
        lineChartRenderer0.renderChart((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.LineChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(242);
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn(affineTransform0, (AffineTransform) null, (AffineTransform) null).when(coordSystem0).getTransform(anyInt());
      Double double0 = new Double(0);
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn(double0).when(chartDataModel0).getColumnValueAt(anyInt() , anyInt());
      doReturn(0, (-3066), 1313, 0, 0).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(242, 0, 0).when(chartDataModel0).getDataSetNumber();
      doReturn(0).when(chartDataModel0).getValueAt(anyInt() , anyInt());
      doReturn(true, false, false).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      int[][] intArray0 = new int[2][4];
      int[] intArray1 = new int[3];
      intArray1[0] = 1313;
      intArray1[1] = 0;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = (-3066);
      intArray2[3] = 1;
      intArray2[4] = 1;
      intArray0[1] = intArray2;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "J%{bg;";
      stringArray0[1] = "vV.";
      stringArray0[2] = "!?%o MbM;Z*5()w[BLi";
      stringArray0[3] = "{,&m><h(H1;k?]K";
      stringArray0[4] = "";
      stringArray0[5] = "** Given values [-4, 64], [0, 0], [3, 36]";
      stringArray0[6] = "** Given values [-5, -740], [0, -5], [1, -2], [5, 530]";
      stringArray0[7] = "X(rO";
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(intArray0, intArray0, stringArray0);
      RowColorModel rowColorModel0 = new RowColorModel(objectChartDataModel0);
      lineChartRenderer0.setRowColorModel(rowColorModel0);
      lineChartRenderer0.renderChart(graphics2D0);
      Graphics2D graphics2D1 = null;
      lineChartRenderer0.renderChart(graphics2D1);
      lineChartRenderer0.renderChart(graphics2D1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(242);
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn(affineTransform0).when(coordSystem0).getTransform(anyInt());
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(chartDataModel0).getColumnValueAt(anyInt() , anyInt());
      doReturn(0, (-3089), 1313).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(242).when(chartDataModel0).getDataSetNumber();
      doReturn(0).when(chartDataModel0).getValueAt(anyInt() , anyInt());
      doReturn(true).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        lineChartRenderer0.renderChart(graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.LineChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null).when(coordSystem0).getTransform(anyInt());
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(chartDataModel0).getDataSetNumber();
      doReturn(false).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      lineChartRenderer0.renderChart(graphics2D0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn(affineTransform0).when(coordSystem0).getTransform(anyInt());
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((-2902)).when(chartDataModel0).getDataSetNumber();
      doReturn(false).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      lineChartRenderer0.renderChart(graphics2D0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null).when(coordSystem0).getTransform(anyInt());
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(1).when(chartDataModel0).getDataSetNumber();
      doReturn((Number) null).when(chartDataModel0).getValueAt(anyInt() , anyInt());
      doReturn(true).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      // Undeclared exception!
      try { 
        lineChartRenderer0.renderChart((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.LineChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null).when(coordSystem0).getTransform(anyInt());
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn("@m$9?6fh5nT\"").when(chartDataModel0).getColumnValueAt(anyInt() , anyInt());
      doReturn(1).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(1).when(chartDataModel0).getDataSetNumber();
      doReturn(0).when(chartDataModel0).getValueAt(anyInt() , anyInt());
      doReturn(true).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      // Undeclared exception!
      try { 
        lineChartRenderer0.renderChart((Graphics2D) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("de.progra.charting.render.LineChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null).when(coordSystem0).getTransform(anyInt());
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(1).when(chartDataModel0).getDataSetNumber();
      doReturn(true).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      lineChartRenderer0.renderChart((Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null).when(coordSystem0).getTransform(anyInt());
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(chartDataModel0).getColumnValueAt(anyInt() , anyInt());
      doReturn(1).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(1).when(chartDataModel0).getDataSetNumber();
      doReturn(0).when(chartDataModel0).getValueAt(anyInt() , anyInt());
      doReturn(true).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      // Undeclared exception!
      try { 
        lineChartRenderer0.renderChart((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.LineChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, (ChartDataModel) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(242);
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn(affineTransform0).when(coordSystem0).getTransform(anyInt());
      DataSet[] dataSetArray0 = new DataSet[1];
      EditableDataSet editableDataSet0 = new EditableDataSet();
      dataSetArray0[0] = (DataSet) editableDataSet0;
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(dataSetArray0, dataSetArray0);
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, objectChartDataModel0);
      lineChartRenderer0.renderChart((Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(242);
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn(affineTransform0).when(coordSystem0).getTransform(anyInt());
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn(0, (-3089), 1313).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(242).when(chartDataModel0).getDataSetNumber();
      doReturn((Number) null).when(chartDataModel0).getValueAt(anyInt() , anyInt());
      doReturn(true).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        lineChartRenderer0.renderChart(graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.LineChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn((AffineTransform) null).when(coordSystem0).getTransform(anyInt());
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, (ChartDataModel) null);
      // Undeclared exception!
      try { 
        lineChartRenderer0.renderChart((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.LineChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[][] intArray0 = new int[1][1];
      int[] intArray1 = new int[2];
      intArray1[0] = (-1436);
      int int0 = 0;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) (-1436);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) (-1436);
      doubleArray0[3] = (double) (-1436);
      doubleArray0[4] = 4289.6929;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "@~1=&n35M!VV,=pp2e";
      stringArray0[1] = "u(*#wc:N^QMsS#GGY";
      stringArray0[2] = "~u6Y>Fq7!O";
      stringArray0[3] = "";
      stringArray0[4] = "de.progra.charting.render.LineChartRenderer";
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, defaultChartDataModel0);
      int int1 = 0;
      int int2 = 0;
      int int3 = 0;
      byte[] byteArray0 = new byte[0];
      BigInteger bigInteger0 = null;
      try {
        bigInteger0 = new BigInteger(byteArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length BigInteger
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0F, 0.0F, 0.0F, 0.0F, 1871.76F, (-1586.64F));
      Point point0 = new Point();
      affineTransform0.transform((Point2D) point0, (Point2D) point0);
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      doReturn(affineTransform0).when(coordSystem0).getTransform(anyInt());
      Short short0 = new Short((short) (-5053));
      ChartDataModel chartDataModel0 = mock(ChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(chartDataModel0).getDataSetLength(anyInt());
      doReturn(912).when(chartDataModel0).getDataSetNumber();
      doReturn(false).when(chartDataModel0).isColumnNumeric();
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, chartDataModel0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      lineChartRenderer0.renderChart(graphics2D0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "4FG[R|1", "4FG[R|1");
      coordSystem0.setBottomMargin(0);
      LineChartRenderer lineChartRenderer0 = new LineChartRenderer(coordSystem0, editableChartDataModel0);
      coordSystem0.setPaintLabels(false);
      editableChartDataModel0.setManualScale(false);
      Graphics2D graphics2D0 = null;
      coordSystem0.getPreferredSize();
      lineChartRenderer0.renderChart((Graphics2D) null);
      lineChartRenderer0.renderChart((Graphics2D) null);
      lineChartRenderer0.renderChart((Graphics2D) null);
      lineChartRenderer0.renderChart((Graphics2D) null);
      coordSystem0.getPointToPixelTranslator(0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, Integer.MIN_VALUE, 1742);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 1742
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }
}
