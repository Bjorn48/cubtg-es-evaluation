[MASTER] 00:04:37.873 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 00:08:58.211 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_36_1550531338012/org/sat4j/core/VecInt_36_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_36_1550531338012/org/sat4j/core/VecInt_36_tmp__ESTest_scaffolding.java]]
[MASTER] 00:08:58.211 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 00:08:58.211 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 00:08:58.239 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method access$000(org.sat4j.core.VecInt)
  location: class org.sat4j.core.VecInt: 53
[MASTER] 00:08:58.240 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_36_1550531338012/org/sat4j/core/VecInt_36_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Feb 18 23:08:58 GMT 2019
4:  */
5: 
6: package org.sat4j.core;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import org.sat4j.core.VecInt;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class VecInt_36_tmp__ESTest extends VecInt_36_tmp__ESTest_scaffolding {
18: 
19:   @Test(timeout = 4000)
20:   public void test0()  throws Throwable  {
21:       int[] intArray0 = new int[1];
22:       intArray0[0] = 1109;
23:       VecInt vecInt0 = new VecInt(intArray0);
24:       assertEquals(1, intArray0.length);
25:       assertFalse(vecInt0.isEmpty());
26:       assertEquals(1109, vecInt0.last());
27:       assertEquals(1, vecInt0.size());
28:       assertNotNull(vecInt0);
29:       assertArrayEquals(new int[] {1109}, intArray0);
30:       
31:       VecInt vecInt1 = new VecInt(intArray0);
32:       assertEquals(1, intArray0.length);
33:       assertEquals(1, vecInt1.size());
34:       assertFalse(vecInt1.isEmpty());
35:       assertEquals(1109, vecInt1.last());
36:       assertTrue(vecInt1.equals((Object)vecInt0));
37:       assertNotNull(vecInt1);
38:       assertArrayEquals(new int[] {1109}, intArray0);
39:       
40:       VecInt vecInt2 = new VecInt(intArray0);
41:       assertEquals(1, intArray0.length);
42:       assertEquals(1, vecInt2.size());
43:       assertFalse(vecInt2.isEmpty());
44:       assertEquals(1109, vecInt2.last());
45:       assertTrue(vecInt2.equals((Object)vecInt0));
46:       assertTrue(vecInt2.equals((Object)vecInt1));
47:       assertNotNull(vecInt2);
48:       assertArrayEquals(new int[] {1109}, intArray0);
49:       
50:       VecInt vecInt3 = null;
51:       // Undeclared exception!
52:       try { 
53:         VecInt.access$000((VecInt) null);
54:         fail("Expecting exception: NullPointerException");
55:       
56:       } catch(NullPointerException e) {
57:          //
58:          // no message in exception (getMessage() returned null)
59:          //
60:          verifyException("org.sat4j.core.VecInt", e);
61:       }
62:   }
63: }
RegularFileObject[/tmp/EvoSuite_36_1550531338012/org/sat4j/core/VecInt_36_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Feb 18 23:08:58 GMT 2019
5:  */
6: 
7: package org.sat4j.core;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class VecInt_36_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.core.VecInt"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(VecInt_36_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.sat4j.core.ReadOnlyVecInt",
82:       "org.sat4j.specs.IteratorInt",
83:       "org.sat4j.core.VecInt$1",
84:       "org.sat4j.specs.IVecInt",
85:       "org.sat4j.core.EmptyVecInt",
86:       "org.sat4j.core.VecInt"
87:     );
88:   } 
89: 
90:   private static void resetClasses() {
91:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(VecInt_36_tmp__ESTest_scaffolding.class.getClassLoader()); 
92: 
93:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
94:       "org.sat4j.core.EmptyVecInt",
95:       "org.sat4j.core.VecInt",
96:       "org.sat4j.core.VecInt$1",
97:       "org.sat4j.core.ReadOnlyVecInt",
98:       "org.sat4j.core.EmptyVecInt$1"
99:     );
100:   }
101: }

[MASTER] 00:08:58.241 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
int[] intArray0 = new int[1];
intArray0[0] = 1109;
VecInt vecInt0 = new VecInt(intArray0);
assertEquals(1, intArray0.length);
assertFalse(vecInt0.isEmpty());
assertEquals(1109, vecInt0.last());
assertEquals(1, vecInt0.size());
assertNotNull(vecInt0);
assertArrayEquals(new int[] {1109}, intArray0);

VecInt vecInt1 = new VecInt(intArray0);
assertEquals(1, intArray0.length);
assertEquals(1, vecInt1.size());
assertFalse(vecInt1.isEmpty());
assertEquals(1109, vecInt1.last());
assertTrue(vecInt1.equals((Object)vecInt0));
assertNotNull(vecInt1);
assertArrayEquals(new int[] {1109}, intArray0);

VecInt vecInt2 = new VecInt(intArray0);
assertEquals(1, intArray0.length);
assertEquals(1, vecInt2.size());
assertFalse(vecInt2.isEmpty());
assertEquals(1109, vecInt2.last());
assertTrue(vecInt2.equals((Object)vecInt0));
assertTrue(vecInt2.equals((Object)vecInt1));
assertNotNull(vecInt2);
assertArrayEquals(new int[] {1109}, intArray0);

VecInt vecInt3 = null;
VecInt.access$000((VecInt) null);

[MASTER] 00:09:45.331 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
