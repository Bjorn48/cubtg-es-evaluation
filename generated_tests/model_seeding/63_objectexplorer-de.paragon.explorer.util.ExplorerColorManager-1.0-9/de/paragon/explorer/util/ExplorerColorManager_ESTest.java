/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 26 00:54:11 GMT 2019
 */

package de.paragon.explorer.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.paragon.explorer.figure.TextBoxFigure;
import de.paragon.explorer.util.ExplorerColorManager;
import java.awt.Color;
import java.awt.SystemColor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExplorerColorManager_ESTest extends ExplorerColorManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      SystemColor systemColor0 = SystemColor.infoText;
      explorerColorManager0.setFocusForeground(systemColor0);
      Color color0 = explorerColorManager0.getFocusForeground();
      assertEquals((-16777216), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      SystemColor systemColor0 = SystemColor.infoText;
      explorerColorManager0.setFocusBackground(systemColor0);
      Color color0 = explorerColorManager0.getFocusBackground();
      assertSame(color0, systemColor0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      SystemColor systemColor0 = SystemColor.infoText;
      explorerColorManager0.setCopyBackground(systemColor0);
      Color color0 = explorerColorManager0.getCopyBackground();
      assertEquals((-16777216), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      // Undeclared exception!
      try { 
        explorerColorManager0.getForeground((TextBoxFigure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.paragon.explorer.util.ExplorerColorManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      // Undeclared exception!
      try { 
        explorerColorManager0.getBackground((TextBoxFigure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.paragon.explorer.util.ExplorerColorManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      Color color0 = explorerColorManager0.getDefaultCopyBackground();
      assertEquals(255, color0.getAlpha());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      SystemColor systemColor0 = SystemColor.controlHighlight;
      explorerColorManager0.setFocusForeground(systemColor0);
      Color color0 = explorerColorManager0.getFocusForeground();
      assertEquals(255, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      Color color0 = Color.getHSBColor((-523.6607F), (-523.6607F), (-932.6668F));
      explorerColorManager0.setCopyBackground(color0);
      Color color1 = explorerColorManager0.getCopyBackground();
      assertEquals(251, color1.getGreen());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExplorerColorManager.getDefaultExplorerFocusBackground();
      Color color0 = ExplorerColorManager.getDefaultExplorerFocusBackground();
      assertEquals((-13434727), color0.getRGB());
      assertNotNull(color0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      Color color0 = Color.GREEN;
      explorerColorManager0.setAttributeBackground(color0);
      assertEquals(255, color0.getGreen());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      Color color0 = Color.getHSBColor((-523.6607F), (-523.6607F), (-932.6668F));
      explorerColorManager0.setObjectForeground(color0);
      assertEquals(1, color0.getTransparency());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      explorerColorManager0.getFocusBackground();
      Color color0 = explorerColorManager0.getFocusBackground();
      assertNotNull(color0);
      assertEquals((-13434727), color0.getRGB());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExplorerColorManager.getDefaultExplorerObjectBackground();
      Color color0 = ExplorerColorManager.getDefaultExplorerObjectBackground();
      assertEquals((-6710785), color0.getRGB());
      assertNotNull(color0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      explorerColorManager0.setAttributeForeground((Color) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      SystemColor systemColor0 = SystemColor.textHighlightText;
      explorerColorManager0.setFocusBackground(systemColor0);
      Color color0 = explorerColorManager0.getFocusBackground();
      assertSame(color0, systemColor0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      SystemColor systemColor0 = SystemColor.activeCaption;
      explorerColorManager0.setObjectBackground(systemColor0);
      assertEquals(128, systemColor0.getBlue());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      Color color0 = explorerColorManager0.getCopyBackground();
      assertEquals(0, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExplorerColorManager explorerColorManager0 = new ExplorerColorManager();
      Color color0 = explorerColorManager0.getFocusForeground();
      assertEquals((-1), color0.getRGB());
  }
}
