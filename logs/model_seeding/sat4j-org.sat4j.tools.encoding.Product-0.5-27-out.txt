* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.tools.encoding.Product
* Starting Client-0
* Connecting to master process on port 12209
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.tools.encoding.Product
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 699
* Using seed 1550580739808
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 136 / 699
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.1981981981981982
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.1568627450980392
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.11538461538461539
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.375
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.8
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.1568627450980392
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
[MASTER] 13:53:04.462 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.sat4j.minisat.constraints.MixedDataStructureSingleWL canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 13:53:06.405 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.UnitPropagationListener
[MASTER] 13:53:06.448 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IConstr
[MASTER] 13:53:08.709 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.ILits
[MASTER] 13:53:09.413 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.tools.GroupClauseSelectorSolver due to org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.opt.MinOneDecorator
[MASTER] 13:53:12.338 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IVecInt
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 282
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.6126126126126126
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.45098039215686275
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.782051282051282
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.43137254901960786
[MASTER] 13:53:21.955 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.tools.ManyCore due to org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.opt.MinOneDecorator
[MASTER] 13:53:22.097 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.opt.MaxSatDecorator
[MASTER] 13:53:22.264 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.constraints.card.MinWatchCard due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.ILits
[MASTER] 13:53:24.682 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.constraints.cnf.CBClause due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IVecInt
[MASTER] 13:53:33.926 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.opt.MinOneDecorator due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.ISolver
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 375
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.7747747747747747
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6274509803921569
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8076923076923077
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6274509803921569
[MASTER] 13:53:37.059 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.sat4j.minisat.constraints.cnf.Lits canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 13:53:37.984 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.minisat.constraints.card.MaxWatchCard
[MASTER] 13:53:40.052 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.sat4j.tools.StatisticsSolver canUseFunctionalMocks=false, canBeMocked: true
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 462
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.7747747747747747
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6274509803921569
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.811965811965812
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6274509803921569
[MASTER] 13:53:44.966 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.tools.ManyCore due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.core.Solver due to org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.minisat.core.SearchParams
[MASTER] 13:53:46.425 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.tools.ManyCore due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.core.Solver due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.IOrder
[MASTER] 13:53:46.700 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for org.sat4j.core.ASolverFactory<org.sat4j.opt.MinOneDecorator> canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 13:53:47.883 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.sat4j.tools.encoding.Binomial canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 13:53:48.111 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.ISolver
[MASTER] 13:53:48.157 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.core.Solver due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.ILogAble
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 557
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
[MASTER] 13:53:54.422 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.sat4j.tools.GateTranslator canUseFunctionalMocks=false, canBeMocked: true
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 638
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8828828828828829
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8431372549019608
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.938034188034188
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8431372549019608
[MASTER] 13:54:00.258 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.constraints.cnf.LearntWLClause due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.ILits
[MASTER] 13:54:02.033 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.tools.ClausalCardinalitiesDecorator due to org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.opt.MinOneDecorator
[MASTER] 13:54:08.117 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.tools.ManyCore due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.core.Solver due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.orders.RandomWalkDecorator due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.orders.VarOrderHeap due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.IPhaseSelectionStrategy
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 729
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8828828828828829
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8431372549019608
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.938034188034188
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8431372549019608
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 815
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.954954954954955
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9411764705882353
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.938034188034188
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9411764705882353
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 887
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.954954954954955
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9411764705882353
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.938034188034188
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9411764705882353
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.954954954954955
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9411764705882353
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.938034188034188
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9411764705882353
* Search finished after 124s and 8 generations, 14890 statements, best individual has fitness: 44.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.954954954954955
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9411764705882353
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.938034188034188
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9411764705882353
* Minimizing test suite
[MASTER] 13:55:46.871 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 111
* Number of covered goals: 106
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 51
* Number of covered goals: 48
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 94%
* Total number of goals: 468
* Number of covered goals: 439
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 8
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 51
* Number of covered goals: 48
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.954954954954955
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9411764705882353
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.938034188034188
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9411764705882353
* Generated 33 tests with total length 641
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:56:28.703 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6856833333333333% of time used, but only 8/33 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 10%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.954954954954955
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9411764705882353
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.938034188034188
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9411764705882353
* Compiling and checking tests
[MASTER] 13:57:21.295 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<110> but was:<1>
[MASTER] 13:57:21.306 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Product product0 = new Product();
assertNotNull(product0);

MinOneDecorator minOneDecorator0 = mock(MinOneDecorator.class, new ViolatedAssumptionAnswer());
doReturn((IConstr) null, (IConstr) null).when(minOneDecorator0).addAtMost(any(org.sat4j.specs.IVecInt.class) , anyInt());
doReturn(false).when(minOneDecorator0).isSatisfiable();
doReturn(110, 110, 0).when(minOneDecorator0).nVars();
doReturn(true).when(minOneDecorator0).primeImplicant(anyInt());
ClausalCardinalitiesDecorator<MinOneDecorator> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<MinOneDecorator>(minOneDecorator0);
assertNotNull(clausalCardinalitiesDecorator0);

MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(clausalCardinalitiesDecorator0);
assertNotNull(maxSatDecorator0);
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());

IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(maxSatDecorator0);
assertNotNull(iVecInt0);
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertEquals(110, iVecInt0.size());
assertEquals((-110), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());

SolutionFoundListener solutionFoundListener0 = SolutionFoundListener.VOID;
assertNotNull(solutionFoundListener0);

AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(maxSatDecorator0, iVecInt0, solutionFoundListener0);
assertNotNull(abstractMinimalModel0);
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertEquals(110, iVecInt0.size());
assertEquals((-110), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());

boolean boolean0 = clausalCardinalitiesDecorator0.primeImplicant(2771);
assertTrue(boolean0);

abstractMinimalModel0.setExpectedNumberOfClauses(2771);
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(2771, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(2771, maxSatDecorator0.getExpectedNumberOfClauses());
assertEquals(110, iVecInt0.size());
assertEquals((-110), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());

clausalCardinalitiesDecorator0.reset();
maxSatDecorator0.clearLearntClauses();
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(2771, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(2771, maxSatDecorator0.getExpectedNumberOfClauses());

boolean boolean1 = maxSatDecorator0.isSatisfiable();
assertFalse(boolean1 == boolean0);
assertFalse(boolean1);
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(2771, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(2771, maxSatDecorator0.getExpectedNumberOfClauses());

IConstr iConstr0 = product0.addAtMostOne(abstractMinimalModel0, iVecInt0);
assertNotNull(iConstr0);
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(2771, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(2771, maxSatDecorator0.getExpectedNumberOfClauses());
assertEquals(110, iVecInt0.size());
assertEquals((-110), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());
assertEquals(222, iConstr0.size());
assertFalse(iConstr0.canBePropagatedMultipleTimes());
assertEquals(0.0, iConstr0.getActivity(), 0.01);

IConstr iConstr1 = product0.addAtMostOne(clausalCardinalitiesDecorator0, iVecInt0);
assertFalse(iConstr1.equals((Object)iConstr0));
assertNotSame(iConstr1, iConstr0);
assertNotNull(iConstr1);
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(2771, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(2771, maxSatDecorator0.getExpectedNumberOfClauses());
assertEquals(110, iVecInt0.size());
assertEquals((-110), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());
assertFalse(iConstr1.canBePropagatedMultipleTimes());
assertEquals(222, iConstr1.size());
assertEquals(0.0, iConstr1.getActivity(), 0.01);

LightFactory lightFactory0 = new LightFactory();
assertNotNull(lightFactory0);

IConstr iConstr2 = product0.addExactly(maxSatDecorator0, iVecInt0, 110);
assertFalse(iConstr2.equals((Object)iConstr0));
assertFalse(iConstr2.equals((Object)iConstr1));
assertNotSame(iConstr2, iConstr0);
assertNotSame(iConstr2, iConstr1);
assertNotNull(iConstr2);
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(2771, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(2771, maxSatDecorator0.getExpectedNumberOfClauses());
assertEquals(110, iVecInt0.size());
assertEquals((-110), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());
assertFalse(iConstr2.canBePropagatedMultipleTimes());
assertEquals(2, iConstr2.size());
assertEquals(0.0, iConstr2.getActivity(), 0.01);

Solver solver0 = (Solver)lightFactory0.lightSolver();
assertNotNull(solver0);
assertEquals(0, solver0.nConstraints());
assertFalse(solver0.isSolverKeptHot());
assertFalse(solver0.isVerbose());
assertFalse(solver0.isDBSimplificationAllowed());
assertEquals(2147483, solver0.getTimeout());
assertEquals(0, solver0.decisionLevel());
assertEquals("c ", solver0.getLogPrefix());
assertEquals(0, solver0.currentDecisionLevel());
assertEquals(0, solver0.nVars());
assertEquals(0, solver0.getPropagationLevel());
assertEquals(0, solver0.realNumberOfVariables());

solver0.model();

[MASTER] 13:57:29.138 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<-2922> but was:<-2>
[MASTER] 13:57:29.141 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Product product0 = new Product();
assertNotNull(product0);

MinOneDecorator minOneDecorator0 = mock(MinOneDecorator.class, new ViolatedAssumptionAnswer());
doReturn((IConstr) null, (IConstr) null, (IConstr) null).when(minOneDecorator0).addAtMost(any(org.sat4j.specs.IVecInt.class) , anyInt());
doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(minOneDecorator0).addClause(any(org.sat4j.specs.IVecInt.class));
doReturn(92, 2922, 2922, 0, 0).when(minOneDecorator0).nVars();
doReturn(0, 0, 0, 0, 0).when(minOneDecorator0).nextFreeVarId(anyBoolean());
doReturn((-3312)).when(minOneDecorator0).realNumberOfVariables();
ClausalCardinalitiesDecorator<MinOneDecorator> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<MinOneDecorator>(minOneDecorator0);
assertNotNull(clausalCardinalitiesDecorator0);

MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(clausalCardinalitiesDecorator0);
assertNotNull(maxSatDecorator0);
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertFalse(maxSatDecorator0.isOptimal());
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertFalse(maxSatDecorator0.isSolutionOptimal());

IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(maxSatDecorator0);
assertNotNull(iVecInt0);
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertFalse(maxSatDecorator0.isOptimal());
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertEquals((-2922), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());
assertEquals(2922, iVecInt0.size());

SolutionFoundListener solutionFoundListener0 = SolutionFoundListener.VOID;
assertNotNull(solutionFoundListener0);

AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(maxSatDecorator0, iVecInt0, solutionFoundListener0);
assertNotNull(abstractMinimalModel0);
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertFalse(maxSatDecorator0.isOptimal());
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertEquals((-2922), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());
assertEquals(2922, iVecInt0.size());

IConstr iConstr0 = product0.addAtLeast(clausalCardinalitiesDecorator0, iVecInt0, 4191);
assertNull(iConstr0);
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertFalse(maxSatDecorator0.isOptimal());
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertEquals((-2922), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());
assertEquals(2922, iVecInt0.size());

int int0 = 2771;
abstractMinimalModel0.setExpectedNumberOfClauses(2771);
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(2771, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertEquals(2771, maxSatDecorator0.getExpectedNumberOfClauses());
assertEquals((-2922), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());
assertEquals(2922, iVecInt0.size());

clausalCardinalitiesDecorator0.reset();
int int1 = abstractMinimalModel0.realNumberOfVariables();
assertFalse(int1 == int0);
assertEquals((-3312), int1);
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(2771, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertEquals(2771, maxSatDecorator0.getExpectedNumberOfClauses());
assertEquals((-2922), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());
assertEquals(2922, iVecInt0.size());

maxSatDecorator0.clearLearntClauses();
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(2771, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertEquals(2771, maxSatDecorator0.getExpectedNumberOfClauses());

product0.addAtMostNonOpt(abstractMinimalModel0, iVecInt0, 2771);
product0.addAtMostNonOpt(abstractMinimalModel0, iVecInt0, int0);
maxSatDecorator0.nVars();
product0.addAtMostOne(abstractMinimalModel0, iVecInt0);
int int2 = 0;
product0.addAtMostNonOpt(maxSatDecorator0, iVecInt0, int2);
int int3 = (-353);
product0.addExactly(clausalCardinalitiesDecorator0, iVecInt0, int3);
product0.addExactlyOne(abstractMinimalModel0, iVecInt0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'Product_ESTest' to evosuite-tests
* Done!

* Computation finished
