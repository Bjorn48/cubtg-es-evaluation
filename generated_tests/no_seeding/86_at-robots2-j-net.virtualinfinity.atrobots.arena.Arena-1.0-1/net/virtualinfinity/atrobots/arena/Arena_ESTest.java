/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 13:50:07 GMT 2019
 */

package net.virtualinfinity.atrobots.arena;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.virtualinfinity.atrobots.ArenaObjectVisitor;
import net.virtualinfinity.atrobots.ArenaObjectVisitorAdaptor;
import net.virtualinfinity.atrobots.arena.Arena;
import net.virtualinfinity.atrobots.arena.Explosion;
import net.virtualinfinity.atrobots.arena.ExplosionFunction;
import net.virtualinfinity.atrobots.arena.FrameBuilder;
import net.virtualinfinity.atrobots.arena.Heading;
import net.virtualinfinity.atrobots.arena.LinearDamageFunction;
import net.virtualinfinity.atrobots.arena.Position;
import net.virtualinfinity.atrobots.arena.RoundTimer;
import net.virtualinfinity.atrobots.arena.SimulationObserver;
import net.virtualinfinity.atrobots.arenaobjects.ArenaObject;
import net.virtualinfinity.atrobots.arenaobjects.CollidableArenaObject;
import net.virtualinfinity.atrobots.arenaobjects.DamageInflicter;
import net.virtualinfinity.atrobots.hardware.mines.Mine;
import net.virtualinfinity.atrobots.hardware.missiles.Missile;
import net.virtualinfinity.atrobots.hardware.radio.Transceiver;
import net.virtualinfinity.atrobots.measures.AbsoluteAngle;
import net.virtualinfinity.atrobots.measures.Vector;
import net.virtualinfinity.atrobots.radio.RadioDispatcher;
import net.virtualinfinity.atrobots.robot.FinalRobotScore;
import net.virtualinfinity.atrobots.robot.Robot;
import net.virtualinfinity.atrobots.robot.RobotListener;
import net.virtualinfinity.atrobots.robot.RobotScore;
import net.virtualinfinity.atrobots.robot.RobotScoreKeeper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Arena_ESTest extends Arena_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Arena arena0 = new Arena();
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      RobotScore robotScore0 = FinalRobotScore.copyOf(robotScoreKeeper0);
      Robot robot0 = new Robot("", 7, robotScore0);
      Transceiver transceiver0 = new Transceiver();
      robot0.setTransceiver(transceiver0);
      arena0.addRobot(robot0);
      int int0 = arena0.countActiveRobots();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Arena arena0 = new Arena();
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      RobotScore robotScore0 = FinalRobotScore.copyOf(robotScoreKeeper0);
      Robot robot0 = new Robot("", 7, robotScore0);
      Transceiver transceiver0 = new Transceiver();
      robot0.setTransceiver(transceiver0);
      arena0.addRobot(robot0);
      // Undeclared exception!
      try { 
        arena0.visitActiveRobots((ArenaObjectVisitor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Arena arena0 = new Arena();
      Mine mine0 = new Mine((DamageInflicter) null);
      arena0.addCollidable(mine0);
      // Undeclared exception!
      try { 
        arena0.simulate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.Position", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FrameBuilder frameBuilder0 = new FrameBuilder();
      frameBuilder0.addSimulationObserver((SimulationObserver) null);
      Arena arena0 = new Arena(frameBuilder0);
      // Undeclared exception!
      try { 
        arena0.simulate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.SimulationFrameBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Arena arena0 = new Arena();
      // Undeclared exception!
      try { 
        arena0.explosion((DamageInflicter) null, (ExplosionFunction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.Arena", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FrameBuilder frameBuilder0 = new FrameBuilder();
      Arena arena0 = new Arena(frameBuilder0);
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      RobotScore robotScore0 = FinalRobotScore.copyOf(robotScoreKeeper0);
      Robot robot0 = new Robot("", 2453, robotScore0);
      arena0.addIntangible(robot0);
      // Undeclared exception!
      try { 
        arena0.endRound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FrameBuilder frameBuilder0 = new FrameBuilder();
      frameBuilder0.addSimulationObserver((SimulationObserver) null);
      Arena arena0 = new Arena(frameBuilder0);
      // Undeclared exception!
      try { 
        arena0.endRound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.SimulationFrameBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Arena arena0 = new Arena();
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      RobotScore robotScore0 = FinalRobotScore.copyOf(robotScoreKeeper0);
      Robot robot0 = new Robot("", 40, robotScore0);
      robot0.addRobotListener((RobotListener) null);
      Transceiver transceiver0 = new Transceiver();
      robot0.setTransceiver(transceiver0);
      arena0.addRobot(robot0);
      // Undeclared exception!
      try { 
        arena0.determineWinners();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FrameBuilder frameBuilder0 = new FrameBuilder();
      frameBuilder0.addSimulationObserver((SimulationObserver) null);
      Arena arena0 = new Arena(frameBuilder0);
      // Undeclared exception!
      try { 
        arena0.buildFrame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.SimulationFrameBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Arena arena0 = new Arena();
      // Undeclared exception!
      try { 
        arena0.addCollidable((CollidableArenaObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.Arena", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Arena arena0 = new Arena();
      arena0.addIntangible((ArenaObject) null);
      assertEquals(0, arena0.countActiveRobots());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Arena arena0 = new Arena();
      arena0.determineWinners();
      assertFalse(arena0.isOnlyOneRobotAlive());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Arena arena0 = new Arena();
      arena0.buildFrame();
      assertEquals(0, arena0.countActiveRobots());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Arena arena0 = new Arena();
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      Robot robot0 = new Robot((String) null, (-3912), robotScoreKeeper0);
      Transceiver transceiver0 = new Transceiver();
      robot0.setTransceiver(transceiver0);
      arena0.addRobot(robot0);
      ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor0 = new ArenaObjectVisitorAdaptor();
      arena0.visitActiveRobots(arenaObjectVisitorAdaptor0);
      assertTrue(arena0.isOnlyOneRobotAlive());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Arena arena0 = new Arena();
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      RobotScore robotScore0 = FinalRobotScore.copyOf(robotScoreKeeper0);
      Robot robot0 = new Robot("", 40, robotScore0);
      Transceiver transceiver0 = new Transceiver();
      robot0.setTransceiver(transceiver0);
      arena0.addRobot(robot0);
      boolean boolean0 = arena0.isOnlyOneRobotAlive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Arena arena0 = new Arena();
      boolean boolean0 = arena0.isOnlyOneRobotAlive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Arena arena0 = new Arena();
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      RobotScore robotScore0 = FinalRobotScore.copyOf(robotScoreKeeper0);
      Robot robot0 = new Robot("", 7, robotScore0);
      Transceiver transceiver0 = new Transceiver();
      robot0.setTransceiver(transceiver0);
      arena0.addRobot(robot0);
      arena0.addRobot(robot0);
      arena0.determineWinners();
      assertFalse(arena0.isOnlyOneRobotAlive());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Arena arena0 = new Arena();
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      RobotScore robotScore0 = FinalRobotScore.copyOf(robotScoreKeeper0);
      Robot robot0 = new Robot("", 7, robotScore0);
      Transceiver transceiver0 = new Transceiver();
      robot0.setTransceiver(transceiver0);
      arena0.addRobot(robot0);
      arena0.determineWinners();
      assertTrue(arena0.isOnlyOneRobotAlive());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Arena arena0 = new Arena();
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      RobotScore robotScore0 = FinalRobotScore.copyOf(robotScoreKeeper0);
      Robot robot0 = new Robot("", 7, robotScore0);
      Transceiver transceiver0 = new Transceiver();
      robot0.setTransceiver(transceiver0);
      arena0.addRobot(robot0);
      AbsoluteAngle absoluteAngle0 = AbsoluteAngle.fromCartesian(0.0, 7);
      Vector vector0 = Vector.createPolar(absoluteAngle0, 2801.75734393486);
      Explosion explosion0 = new Explosion(vector0, 0.0);
      Position position0 = explosion0.getPosition();
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 0.0, 7);
      arena0.explosion(robot0, linearDamageFunction0);
      assertEquals(7.0, linearDamageFunction0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Arena arena0 = new Arena();
      Position position0 = Position.random(0.0, 0.0, (-1.0), 0.0);
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      RobotScore robotScore0 = FinalRobotScore.copyOf(robotScoreKeeper0);
      Robot robot0 = new Robot((String) null, (-2339), robotScore0);
      AbsoluteAngle absoluteAngle0 = AbsoluteAngle.fromCartesian((-1800.3598035857), (-1800.3598035857));
      Missile missile0 = robot0.createMissile(absoluteAngle0, position0, 0.0);
      arena0.addCollidable(missile0);
      arena0.simulate();
      assertEquals(0, arena0.countActiveRobots());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FrameBuilder frameBuilder0 = new FrameBuilder();
      Arena arena0 = new Arena(frameBuilder0);
      Heading heading0 = new Heading();
      Vector vector0 = heading0.times((-2407.0));
      Position position0 = new Position(vector0);
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 1561, 1561);
      arena0.explosion((DamageInflicter) null, linearDamageFunction0);
      arena0.buildFrame();
      assertFalse(arena0.isOnlyOneRobotAlive());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Arena arena0 = new Arena();
      RoundTimer roundTimer0 = arena0.getRoundTimer();
      assertNotNull(roundTimer0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Arena arena0 = new Arena();
      arena0.endRound();
      assertEquals(0, arena0.countActiveRobots());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Arena arena0 = new Arena();
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      RobotScore robotScore0 = FinalRobotScore.copyOf(robotScoreKeeper0);
      Robot robot0 = new Robot("", 7, robotScore0);
      // Undeclared exception!
      try { 
        arena0.addRobot(robot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.robot.Robot", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FrameBuilder frameBuilder0 = new FrameBuilder();
      Arena arena0 = new Arena(frameBuilder0);
      RadioDispatcher radioDispatcher0 = arena0.getRadioDispatcher();
      assertNotNull(radioDispatcher0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Arena arena0 = new Arena();
      int int0 = arena0.countActiveRobots();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Arena arena0 = new Arena();
      Position position0 = Position.random(0.0, (-1.0), 0.0, (-1.0));
      RobotScoreKeeper robotScoreKeeper0 = new RobotScoreKeeper();
      RobotScore robotScore0 = FinalRobotScore.copyOf(robotScoreKeeper0);
      Robot robot0 = new Robot((String) null, (-2339), robotScore0);
      AbsoluteAngle absoluteAngle0 = AbsoluteAngle.fromCartesian(0.0, 0.0);
      Missile missile0 = robot0.createMissile(absoluteAngle0, position0, 0.0);
      arena0.addCollidable(missile0);
      arena0.simulate();
      assertFalse(arena0.isOnlyOneRobotAlive());
  }
}
