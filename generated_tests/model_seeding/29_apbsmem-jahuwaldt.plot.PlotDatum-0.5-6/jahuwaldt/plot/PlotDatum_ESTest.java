/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 14:04:36 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.BoxLLSymbol;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.PlotSymbol;
import jahuwaldt.plot.RTriangle3Symbol;
import jahuwaldt.plot.Triangle4Symbol;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(325.2, 325.2, true);
      plotDatum0.setX(1740.882476917582);
      assertEquals(1740.882476917582, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 80.0, false);
      plotDatum0.setYError(80.0);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(80.0, plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 80.0, false);
      plotDatum0.setYError(80.0);
      double double0 = plotDatum0.getYError();
      assertTrue(plotDatum0.hasErrorBar());
      assertEquals(80.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(3948.4, 0.001, true);
      plotDatum0.setYError((-1333.0515));
      double double0 = plotDatum0.getYError();
      assertEquals((-1333.0515), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(483.90582653, 483.90582653, true);
      assertEquals(483.90582653, plotDatum0.y, 0.01);
      
      plotDatum0.setY(0.0);
      double double0 = plotDatum0.getY();
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1.0, false);
      plotDatum0.setY((-457.071513155));
      double double0 = plotDatum0.getY();
      assertEquals((-457.071513155), plotDatum0.y, 0.01);
      assertEquals((-457.071513155), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      double double0 = plotDatum0.getX();
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1694.6993335761), (-160.8), false, (PlotSymbol) null);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.connected());
      assertEquals((-160.8), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-1694.6993335761), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2176.449), (-2176.449), false);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.connected());
      assertEquals((-2176.449), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-2176.449), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      RTriangle3Symbol rTriangle3Symbol0 = new RTriangle3Symbol();
      rTriangle3Symbol0.setSize(0);
      plotDatum0.setPlotSymbol(rTriangle3Symbol0);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-4252.9577720707), (-4252.9577720707), true, triangle4Symbol0);
      triangle4Symbol0.setSize((-2469));
      plotDatum0.getPlotSymbol();
      assertEquals((-4252.9577720707), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-4252.9577720707), plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.4035, true);
      Color color0 = Color.darkGray;
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.4035, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(64, color1.getGreen());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(483.90582653, 483.90582653, true);
      Color color0 = new Color(1);
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertTrue(plotDatum0.connected());
      assertEquals(483.90582653, plotDatum0.y, 0.01);
      assertEquals(483.90582653, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-16777215), color1.getRGB());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(298.15, 0.0, true);
      boolean boolean0 = plotDatum0.connected();
      assertTrue(boolean0);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(298.15, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BoxLLSymbol boxLLSymbol0 = new BoxLLSymbol();
      PlotDatum plotDatum0 = new PlotDatum(704.03074301497, 1713.6474515344914, true, boxLLSymbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.hasErrorBar());
      assertEquals(704.03074301497, plotDatum1.x, 0.01);
      assertEquals(1713.6474515344914, plotDatum1.y, 0.01);
      assertTrue(plotDatum1.connected());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertFalse(plotDatum1.hasErrorBar());
      assertEquals(0.0, plotDatum1.y, 0.01);
      assertEquals(0.0, plotDatum1.x, 0.01);
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.connected());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      plotDatum0.setLineColor((Color) null);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-20.0), plotDatum0.y, 0.01);
      assertEquals((-20.0), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      plotDatum0.setYError(0.0);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(439.1, 439.1, false);
      double double0 = plotDatum0.getYError();
      assertEquals(439.1, plotDatum0.y, 0.01);
      assertEquals(439.1, plotDatum0.x, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2176.449), (-2176.449), false);
      boolean boolean0 = plotDatum0.connected();
      assertEquals((-2176.449), plotDatum0.y, 0.01);
      assertFalse(boolean0);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-2176.449), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BoxLLSymbol boxLLSymbol0 = new BoxLLSymbol();
      PlotDatum plotDatum0 = new PlotDatum(704.03074301497, 1713.6474515344914, true, boxLLSymbol0);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(1713.6474515344914, plotDatum0.y, 0.01);
      assertEquals(704.03074301497, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2176.449), (-2176.449), false);
      plotDatum0.setConnected(false);
      assertFalse(plotDatum0.connected());
      assertEquals((-2176.449), plotDatum0.y, 0.01);
      assertEquals((-2176.449), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-4252.9577720707), (-4252.9577720707), true, triangle4Symbol0);
      plotDatum0.getPlotSymbol();
      assertTrue(plotDatum0.connected());
      assertEquals((-4252.9577720707), plotDatum0.y, 0.01);
      assertEquals((-4252.9577720707), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(3083.939433535, 3083.939433535, false);
      double double0 = plotDatum0.getY();
      assertEquals(3083.939433535, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(3083.939433535, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(3948.4, 3948.4, false);
      double double0 = plotDatum0.getX();
      assertEquals(3948.4, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals(3948.4, plotDatum0.y, 0.01);
  }
}
