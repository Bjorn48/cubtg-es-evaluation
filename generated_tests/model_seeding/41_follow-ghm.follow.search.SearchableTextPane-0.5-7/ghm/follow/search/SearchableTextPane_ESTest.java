/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 15:12:06 GMT 2019
 */

package ghm.follow.search;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ghm.follow.search.LineResult;
import ghm.follow.search.SearchableTextPane;
import java.awt.Font;
import java.text.AttributedCharacterIterator;
import java.text.Format;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SearchableTextPane_ESTest extends SearchableTextPane_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-1));
      int int0 = searchableTextPane0.search("", (-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<Format.Field, LineResult> hashMap0 = new HashMap<Format.Field, LineResult>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 2362);
      int int0 = searchableTextPane0.search("2v! |", 1473);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Font font0 = new Font("f {`{Vi;&", 614, 614);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 614);
      // Undeclared exception!
      try { 
        searchableTextPane0.highlight("f {`{Vi;&", 614);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Illegal repetition near index 1
         // f {`{Vi;&
         //  ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Font font0 = Font.decode("[z#F");
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 584);
      // Undeclared exception!
      try { 
        searchableTextPane0.highlight("[z#F", 584);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown search strategy requested [flags=584
         //
         verifyException("ghm.follow.search.SearchEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-1));
      searchableTextPane0.removeHighlights();
      assertFalse(searchableTextPane0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 42);
      // Undeclared exception!
      try { 
        searchableTextPane0.search((String) null, 42);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 1);
      List<LineResult> list0 = searchableTextPane0.highlight("ghm.follow.search.SearchableTextPane", 1);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Font font0 = new Font("", 614, 614);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 614);
      int int0 = searchableTextPane0.search("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<Format.Field, Integer> hashMap0 = new HashMap<Format.Field, Integer>();
      Font font0 = new Font(hashMap0);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      int int0 = searchableTextPane0.search((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Font font0 = new Font("", 614, 614);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 614);
      List<LineResult> list0 = searchableTextPane0.highlight("", 614);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<Format.Field, Integer> hashMap0 = new HashMap<Format.Field, Integer>();
      Font font0 = new Font(hashMap0);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      List<LineResult> list0 = searchableTextPane0.highlight((String) null, 3247);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<Format.Field, Integer> hashMap0 = new HashMap<Format.Field, Integer>();
      Font font0 = new Font(hashMap0);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      boolean boolean0 = searchableTextPane0.getScrollableTracksViewportWidth();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Font font0 = new Font("ghm.follow.search.SearchableTextPane", 1, 1);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 1);
      int int0 = searchableTextPane0.search("ghm.follow.search.SearchableTextPane");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 15);
      List<LineResult> list0 = searchableTextPane0.highlight("E:3\"?d+3#R|", 15);
      assertEquals(1, list0.size());
  }
}
