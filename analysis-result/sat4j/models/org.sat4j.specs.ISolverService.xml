<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s7" action="org.sat4j.specs.ISolverService.getVariableHeuristics()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="s4"><transition target="s5" action="org.sat4j.specs.ISolverService.addAtMostOnTheFly(int[],int)" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.sat4j.specs.ISolverService.nVars()" proba="0.5714285714285714"></transition><transition target="s4" action="org.sat4j.specs.ISolverService.getLogPrefix()" proba="0.14285714285714285"></transition><transition target="s6" action="org.sat4j.specs.ISolverService.getLearnedConstraints()" proba="0.14285714285714285"></transition><transition target="s1" action="org.sat4j.specs.ISolverService.createBlockingClauseForCurrentModel()" proba="0.14285714285714285"></transition></state><state id="s1"><transition target="s2" action="org.sat4j.specs.ISolverService.addClauseOnTheFly(int[])" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>