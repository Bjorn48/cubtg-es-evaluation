[MASTER] 13:40:28.185 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.minisat.core.Solver<D> : Type points to itself
[MASTER] 13:42:39.680 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_23_1550493759547/org/sat4j/minisat/constraints/cnf/OriginalWLClause_23_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_23_1550493759547/org/sat4j/minisat/constraints/cnf/OriginalWLClause_23_tmp__ESTest_scaffolding.java]]
[MASTER] 13:42:39.680 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 13:42:39.680 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 13:42:39.700 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: org.sat4j.minisat.constraints.cnf.UnitClause cannot be converted to org.sat4j.minisat.constraints.cnf.OriginalWLClause: 42
[MASTER] 13:42:39.742 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_23_1550493759547/org/sat4j/minisat/constraints/cnf/OriginalWLClause_23_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Feb 18 12:42:39 GMT 2019
4:  */
5: 
6: package org.sat4j.minisat.constraints.cnf;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import org.sat4j.core.VecInt;
15: import org.sat4j.minisat.constraints.MixedDataStructureDanielWLConciseBinary;
16: import org.sat4j.minisat.constraints.cnf.OriginalWLClause;
17: import org.sat4j.minisat.constraints.cnf.UnitClause;
18: import org.sat4j.minisat.core.RestartStrategy;
19: import org.sat4j.minisat.core.SearchParams;
20: import org.sat4j.minisat.core.Solver;
21: import org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy;
22: import org.sat4j.minisat.learning.NoLearningButHeuristics;
23: import org.sat4j.minisat.orders.PureOrder;
24: import org.sat4j.minisat.orders.RandomWalkDecorator;
25: 
26: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
27: public class OriginalWLClause_23_tmp__ESTest extends OriginalWLClause_23_tmp__ESTest_scaffolding {
28: 
29:   @Test(timeout = 4000)
30:   public void test0()  throws Throwable  {
31:       VecInt vecInt0 = new VecInt();
32:       vecInt0.push(3);
33:       NoLearningButHeuristics<MixedDataStructureDanielWLConciseBinary> noLearningButHeuristics0 = new NoLearningButHeuristics<MixedDataStructureDanielWLConciseBinary>();
34:       MixedDataStructureDanielWLConciseBinary mixedDataStructureDanielWLConciseBinary0 = new MixedDataStructureDanielWLConciseBinary();
35:       PureOrder pureOrder0 = new PureOrder();
36:       RandomWalkDecorator randomWalkDecorator0 = new RandomWalkDecorator(pureOrder0);
37:       Solver<MixedDataStructureDanielWLConciseBinary> solver0 = new Solver<MixedDataStructureDanielWLConciseBinary>(noLearningButHeuristics0, mixedDataStructureDanielWLConciseBinary0, (SearchParams) null, randomWalkDecorator0, (RestartStrategy) null);
38:       UnitClause unitClause0 = (UnitClause)solver0.addClause(vecInt0);
39:       WatcherBasedPrimeImplicantStrategy watcherBasedPrimeImplicantStrategy0 = new WatcherBasedPrimeImplicantStrategy();
40:       // Undeclared exception!
41:       try { 
42:         ((OriginalWLClause) unitClause0).propagatePI(watcherBasedPrimeImplicantStrategy0, 3);
43:         fail("Expecting exception: IllegalArgumentException");
44:       
45:       } catch(IllegalArgumentException e) {
46:       }
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_23_1550493759547/org/sat4j/minisat/constraints/cnf/OriginalWLClause_23_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Feb 18 12:42:39 GMT 2019
5:  */
6: 
7: package org.sat4j.minisat.constraints.cnf;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class OriginalWLClause_23_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.minisat.constraints.cnf.OriginalWLClause"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
76:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(OriginalWLClause_23_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.sat4j.minisat.core.ConflictTimerAdapter",
82:       "org.sat4j.tools.ManyCore",
83:       "org.sat4j.specs.UnitPropagationListener",
84:       "org.sat4j.tools.SolutionCounter",
85:       "org.sat4j.minisat.core.SizeComparator",
86:       "org.sat4j.tools.SolverDecorator",
87:       "org.sat4j.specs.Propagatable",
88:       "org.sat4j.minisat.core.Counter",
89:       "org.sat4j.minisat.constraints.cnf.Clauses",
90:       "org.sat4j.minisat.core.Pair",
91:       "org.sat4j.core.EmptyVecInt",
92:       "org.sat4j.minisat.constraints.AbstractCardinalityDataStructure",
93:       "org.sat4j.specs.IVec",
94:       "org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy",
95:       "org.sat4j.minisat.constraints.cnf.UnitClause",
96:       "org.sat4j.specs.Lbool",
97:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
98:       "org.sat4j.minisat.orders.NegativeLiteralSelectionStrategy",
99:       "org.sat4j.specs.SearchListener",
100:       "org.sat4j.minisat.core.SimplificationType",
101:       "org.sat4j.minisat.learning.MiniSATLearning",
102:       "org.sat4j.minisat.core.SearchParams",
103:       "org.sat4j.specs.ILogAble$1",
104:       "org.sat4j.specs.Constr",
105:       "org.sat4j.minisat.learning.NoLearningButHeuristics",
106:       "org.sat4j.specs.TimeoutException",
107:       "org.sat4j.specs.ISolverService",
108:       "org.sat4j.minisat.constraints.cnf.WLClause",
109:       "org.sat4j.minisat.core.LearningStrategy",
110:       "org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy",
111:       "org.sat4j.specs.IteratorInt",
112:       "org.sat4j.specs.ISolver",
113:       "org.sat4j.minisat.orders.RandomWalkDecorator",
114:       "org.sat4j.specs.UnitClauseProvider$1",
115:       "org.sat4j.minisat.core.CircularBuffer",
116:       "org.sat4j.minisat.learning.LimitedLearning",
117:       "org.sat4j.minisat.core.VoidTracing",
118:       "org.sat4j.minisat.core.ActivityListener",
119:       "org.sat4j.minisat.restarts.Glucose21Restarts",
120:       "org.sat4j.minisat.core.GlucoseLCDS",
121:       "org.sat4j.minisat.core.ILits",
122:       "org.sat4j.specs.ILogAble",
123:       "org.sat4j.specs.ContradictionException",
124:       "org.sat4j.core.LiteralsUtils",
125:       "org.sat4j.minisat.learning.PercentLengthLearning",
126:       "org.sat4j.specs.IConstr",
127:       "org.sat4j.specs.IVecInt",
128:       "org.sat4j.minisat.core.PrimeImplicantStrategy",
129:       "org.sat4j.minisat.core.Learner",
130:       "org.sat4j.specs.MandatoryLiteralListener",
131:       "org.sat4j.minisat.core.ActivityComparator",
132:       "org.sat4j.specs.IProblem",
133:       "org.sat4j.minisat.restarts.MiniSATRestarts",
134:       "org.sat4j.core.VecInt",
135:       "org.sat4j.minisat.core.Solver",
136:       "org.sat4j.minisat.constraints.cnf.Lits",
137:       "org.sat4j.minisat.core.Solver$2",
138:       "org.sat4j.specs.UnitClauseProvider",
139:       "org.sat4j.minisat.core.Solver$1",
140:       "org.sat4j.minisat.learning.AbstractLearning",
141:       "org.sat4j.minisat.core.Solver$4",
142:       "org.sat4j.minisat.core.Solver$3",
143:       "org.sat4j.minisat.core.LearnedConstraintsEvaluationType",
144:       "org.sat4j.minisat.learning.ClauseOnlyLearning",
145:       "org.sat4j.core.ASolverFactory",
146:       "org.sat4j.minisat.core.DataStructureFactory",
147:       "org.sat4j.core.Vec",
148:       "org.sat4j.minisat.core.Glucose2LCDS",
149:       "org.sat4j.minisat.core.Solver$6",
150:       "org.sat4j.minisat.core.SolverStats",
151:       "org.sat4j.minisat.core.Solver$8",
152:       "org.sat4j.minisat.core.IPhaseSelectionStrategy",
153:       "org.sat4j.minisat.core.ConstrActivityListener",
154:       "org.sat4j.minisat.restarts.ArminRestarts",
155:       "org.sat4j.specs.SearchListenerAdapter",
156:       "org.sat4j.tools.OutcomeListener",
157:       "org.sat4j.minisat.core.ActivityLCDS",
158:       "org.sat4j.minisat.constraints.cnf.OriginalWLClause",
159:       "org.sat4j.minisat.orders.VarOrderHeap",
160:       "org.sat4j.minisat.orders.NaturalStaticOrder",
161:       "org.sat4j.minisat.core.ISimplifier",
162:       "org.sat4j.minisat.core.ConflictTimer",
163:       "org.sat4j.minisat.core.VarActivityListener",
164:       "org.sat4j.specs.VarMapper",
165:       "org.sat4j.minisat.orders.LevelBasedVarOrderHeap",
166:       "org.sat4j.specs.RandomAccessModel",
167:       "org.sat4j.minisat.core.LBDConflictTimer",
168:       "org.sat4j.minisat.orders.TabuListDecorator",
169:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWLConciseBinary",
170:       "org.sat4j.minisat.learning.NoLearningNoHeuristics",
171:       "org.sat4j.minisat.orders.PureOrder",
172:       "org.sat4j.minisat.core.SizeLCDS",
173:       "org.sat4j.minisat.core.RestartStrategy",
174:       "org.sat4j.minisat.core.AgeLCDS",
175:       "org.sat4j.core.ReadOnlyVecInt",
176:       "org.sat4j.minisat.core.IOrder",
177:       "org.sat4j.minisat.orders.VariableComparator",
178:       "org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy",
179:       "org.sat4j.minisat.core.ICDCL",
180:       "org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy",
181:       "org.sat4j.minisat.constraints.CardinalityDataStructure",
182:       "org.sat4j.minisat.core.MemoryBasedConflictTimer"
183:     );
184:   } 
185: 
186:   private static void resetClasses() {
187:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(OriginalWLClause_23_tmp__ESTest_scaffolding.class.getClassLoader()); 
188: 
189:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
190:       "org.sat4j.minisat.constraints.cnf.WLClause",
191:       "org.sat4j.minisat.constraints.cnf.OriginalWLClause",
192:       "org.sat4j.specs.Constr$1",
193:       "org.sat4j.specs.Constr",
194:       "org.sat4j.core.ASolverFactory",
195:       "org.sat4j.specs.SearchListenerAdapter",
196:       "org.sat4j.tools.ManyCore",
197:       "org.sat4j.minisat.learning.LimitedLearning",
198:       "org.sat4j.minisat.learning.FixedLengthLearning",
199:       "org.sat4j.minisat.learning.AbstractLearning",
200:       "org.sat4j.minisat.learning.NoLearningButHeuristics",
201:       "org.sat4j.minisat.learning.MiniSATLearning",
202:       "org.sat4j.minisat.orders.VarOrderHeap",
203:       "org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy",
204:       "org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy",
205:       "org.sat4j.minisat.orders.RandomWalkDecorator",
206:       "org.sat4j.minisat.learning.NoLearningNoHeuristics",
207:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
208:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWLConciseBinary",
209:       "org.sat4j.minisat.core.SearchParams",
210:       "org.sat4j.minisat.orders.PureOrder",
211:       "org.sat4j.minisat.restarts.ArminRestarts",
212:       "org.sat4j.specs.ILogAble$1",
213:       "org.sat4j.specs.ILogAble",
214:       "org.sat4j.minisat.core.Solver$1",
215:       "org.sat4j.minisat.core.Solver",
216:       "org.sat4j.minisat.core.ActivityComparator",
217:       "org.sat4j.minisat.core.SolverStats",
218:       "org.sat4j.minisat.core.VoidTracing",
219:       "org.sat4j.specs.UnitClauseProvider$1",
220:       "org.sat4j.specs.UnitClauseProvider",
221:       "org.sat4j.minisat.core.Solver$2",
222:       "org.sat4j.minisat.core.Solver$3",
223:       "org.sat4j.minisat.core.Solver$4",
224:       "org.sat4j.minisat.core.Pair",
225:       "org.sat4j.minisat.core.ConflictTimerAdapter",
226:       "org.sat4j.minisat.core.MemoryBasedConflictTimer",
227:       "org.sat4j.minisat.core.ActivityLCDS",
228:       "org.sat4j.minisat.core.LBDConflictTimer",
229:       "org.sat4j.minisat.core.GlucoseLCDS",
230:       "org.sat4j.minisat.core.Glucose2LCDS",
231:       "org.sat4j.minisat.core.AgeLCDS",
232:       "org.sat4j.minisat.core.SizeLCDS",
233:       "org.sat4j.minisat.core.Solver$8",
234:       "org.sat4j.minisat.orders.SubsetVarOrder",
235:       "org.sat4j.minisat.restarts.LubyRestarts",
236:       "org.sat4j.minisat.constraints.AbstractCardinalityDataStructure",
237:       "org.sat4j.minisat.constraints.CardinalityDataStructure",
238:       "org.sat4j.minisat.learning.PercentLengthLearning",
239:       "org.sat4j.minisat.orders.PhaseCachingAutoEraseStrategy",
240:       "org.sat4j.minisat.orders.LevelBasedVarOrderHeap",
241:       "org.sat4j.minisat.orders.TabuListDecorator",
242:       "org.sat4j.minisat.restarts.NoRestarts",
243:       "org.sat4j.minisat.core.Solver$10",
244:       "org.sat4j.tools.SolverDecorator",
245:       "org.sat4j.tools.SolutionCounter",
246:       "org.sat4j.tools.AbstractClauseSelectorSolver",
247:       "org.sat4j.tools.GroupClauseSelectorSolver",
248:       "org.sat4j.tools.AbstractClauseSelectorSolver$1",
249:       "org.sat4j.tools.AbstractClauseSelectorSolver$2",
250:       "org.sat4j.minisat.learning.ClauseOnlyLearning",
251:       "org.sat4j.minisat.restarts.FixedPeriodRestarts",
252:       "org.sat4j.minisat.learning.ActiveLearning",
253:       "org.sat4j.minisat.orders.PositiveLiteralSelectionStrategy",
254:       "org.sat4j.minisat.constraints.card.AtLeast",
255:       "org.sat4j.specs.ContradictionException",
256:       "org.sat4j.minisat.orders.RSATPhaseSelectionStrategy",
257:       "org.sat4j.AbstractLauncher",
258:       "org.sat4j.MUSLauncher",
259:       "org.sat4j.AbstractLauncher$1",
260:       "org.sat4j.DecisionMode",
261:       "org.sat4j.ExitCode",
262:       "org.sat4j.OptimizationMode",
263:       "org.sat4j.ILauncherMode",
264:       "org.sat4j.tools.StatisticsSolver",
265:       "org.sat4j.minisat.restarts.EMARestarts",
266:       "org.sat4j.tools.ModelIterator",
267:       "org.sat4j.tools.SubModelIterator",
268:       "org.sat4j.core.VecInt$1",
269:       "org.sat4j.opt.MinOneDecorator",
270:       "org.sat4j.minisat.restarts.Glucose21Restarts",
271:       "org.sat4j.minisat.core.CircularBuffer",
272:       "org.sat4j.BasicLauncher",
273:       "org.sat4j.minisat.orders.NegativeLiteralSelectionStrategy",
274:       "org.sat4j.core.ReadOnlyVecInt",
275:       "org.sat4j.minisat.orders.RSATLastLearnedClausesPhaseSelectionStrategy",
276:       "org.sat4j.minisat.orders.UserFixedPhaseSelectionStrategy",
277:       "org.sat4j.minisat.orders.NaturalStaticOrder",
278:       "org.sat4j.tools.AbstractOutputSolver",
279:       "org.sat4j.tools.DimacsOutputSolver",
280:       "org.sat4j.tools.AbstractMinimalModel",
281:       "org.sat4j.minisat.core.Counter",
282:       "org.sat4j.opt.AbstractSelectorVariablesDecorator",
283:       "org.sat4j.opt.MaxSatDecorator",
284:       "org.sat4j.minisat.orders.RandomLiteralSelectionStrategy",
285:       "org.sat4j.minisat.restarts.MiniSATRestarts",
286:       "org.sat4j.tools.FullClauseSelectorSolver",
287:       "org.sat4j.tools.SolutionFoundListener$1",
288:       "org.sat4j.tools.SolutionFoundListener",
289:       "org.sat4j.core.EmptyVecInt$1",
290:       "org.sat4j.tools.Minimal4CardinalityModel",
291:       "org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy",
292:       "org.sat4j.core.LiteralsUtils",
293:       "org.sat4j.minisat.constraints.cnf.UnitClauses",
294:       "org.sat4j.specs.Lbool",
295:       "org.sat4j.minisat.core.Heap",
296:       "org.sat4j.minisat.orders.ActivityBasedVariableComparator",
297:       "org.sat4j.minisat.core.ConflictTimerContainer",
298:       "org.sat4j.minisat.core.Solver$6",
299:       "org.sat4j.minisat.constraints.cnf.Clauses",
300:       "org.sat4j.minisat.constraints.card.MinWatchCard",
301:       "org.sat4j.minisat.constraints.CardinalityDataStructureYanMin",
302:       "org.sat4j.minisat.constraints.CardinalityDataStructureYanMax",
303:       "org.sat4j.minisat.constraints.cnf.LearntWLClause",
304:       "org.sat4j.minisat.constraints.cnf.UnitClause",
305:       "org.sat4j.tools.ClausalCardinalitiesDecorator",
306:       "org.sat4j.tools.encoding.EncodingStrategyAdapter",
307:       "org.sat4j.tools.encoding.Sequential",
308:       "org.sat4j.tools.encoding.Binary",
309:       "org.sat4j.tools.encoding.Product",
310:       "org.sat4j.tools.encoding.Commander",
311:       "org.sat4j.tools.encoding.Binomial",
312:       "org.sat4j.tools.encoding.Ladder",
313:       "org.sat4j.tools.encoding.Policy",
314:       "org.sat4j.LightFactory",
315:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWL",
316:       "org.sat4j.tools.SingleSolutionDetector",
317:       "org.sat4j.tools.GateTranslator",
318:       "org.sat4j.tools.Minimal4InclusionModel",
319:       "org.sat4j.specs.TimeoutException",
320:       "org.sat4j.minisat.constraints.xor.Xor",
321:       "org.sat4j.tools.OptToSatAdapter",
322:       "org.sat4j.minisat.constraints.ClausalDataStructureWL",
323:       "org.sat4j.minisat.constraints.cnf.HTClause",
324:       "org.sat4j.minisat.constraints.cnf.LearntHTClause",
325:       "org.sat4j.tools.IVisualizationTool",
326:       "org.sat4j.minisat.constraints.cnf.CBClause",
327:       "org.sat4j.minisat.constraints.cnf.LearntBinaryClause",
328:       "org.sat4j.minisat.constraints.card.MaxWatchCard",
329:       "org.sat4j.tools.DimacsStringSolver",
330:       "org.sat4j.tools.DotSearchTracing",
331:       "org.sat4j.minisat.constraints.MixedDataStructureSingleWL",
332:       "org.sat4j.tools.ModelIteratorToSATAdapter",
333:       "org.sat4j.minisat.constraints.MixedDataStructureDanielHT",
334:       "org.sat4j.minisat.constraints.cnf.OriginalHTClause",
335:       "org.sat4j.minisat.constraints.cnf.BinaryClauses",
336:       "org.sat4j.core.ConstrGroup",
337:       "org.sat4j.tools.CheckMUSSolutionListener",
338:       "org.sat4j.tools.NegationDecorator",
339:       "org.sat4j.tools.LexicoDecorator",
340:       "org.sat4j.minisat.SolverFactory",
341:       "org.sat4j.specs.FakeConstr",
342:       "org.sat4j.minisat.core.Solver$5",
343:       "org.sat4j.minisat.core.Solver$5$1",
344:       "org.sat4j.core.Vec$1",
345:       "org.sat4j.minisat.core.Solver$9",
346:       "org.sat4j.core.EmptyVecInt",
347:       "org.sat4j.core.VecInt",
348:       "org.sat4j.minisat.constraints.cnf.Lits",
349:       "org.sat4j.core.Vec",
350:       "org.sat4j.minisat.core.SizeComparator"
351:     );
352:   }
353: }

[MASTER] 13:42:39.744 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
VecInt vecInt0 = new VecInt();
vecInt0.push(3);
NoLearningButHeuristics<MixedDataStructureDanielWLConciseBinary> noLearningButHeuristics0 = new NoLearningButHeuristics<MixedDataStructureDanielWLConciseBinary>();
MixedDataStructureDanielWLConciseBinary mixedDataStructureDanielWLConciseBinary0 = new MixedDataStructureDanielWLConciseBinary();
PureOrder pureOrder0 = new PureOrder();
RandomWalkDecorator randomWalkDecorator0 = new RandomWalkDecorator(pureOrder0);
Solver<MixedDataStructureDanielWLConciseBinary> solver0 = new Solver<MixedDataStructureDanielWLConciseBinary>(noLearningButHeuristics0, mixedDataStructureDanielWLConciseBinary0, (SearchParams) null, randomWalkDecorator0, (RestartStrategy) null);
UnitClause unitClause0 = (UnitClause)solver0.addClause(vecInt0);
WatcherBasedPrimeImplicantStrategy watcherBasedPrimeImplicantStrategy0 = new WatcherBasedPrimeImplicantStrategy();
((OriginalWLClause) unitClause0).propagatePI(watcherBasedPrimeImplicantStrategy0, 3);

