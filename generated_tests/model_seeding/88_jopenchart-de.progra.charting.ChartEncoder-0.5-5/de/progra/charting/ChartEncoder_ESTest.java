/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 13:34:11 GMT 2019
 */

package de.progra.charting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.Chart;
import de.progra.charting.ChartEncoder;
import de.progra.charting.DefaultChart;
import java.awt.Rectangle;
import java.awt.geom.Line2D;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChartEncoder_ESTest extends ChartEncoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.setLine(2105.92, 7.0, 0.0, 0.0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      defaultChart0.setBounds(rectangle0);
      try { 
        ChartEncoder.createPNG((OutputStream) null, defaultChart0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // output == null!
         //
         verifyException("de.progra.charting.ChartEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Rectangle rectangle0 = new Rectangle();
      defaultChart0.bounds = rectangle0;
      try { 
        ChartEncoder.createJPEG((OutputStream) null, defaultChart0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Width (0) and height (0) cannot be <= 0
         //
         verifyException("de.progra.charting.ChartEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Rectangle rectangle0 = new Rectangle();
      defaultChart0.setBounds(rectangle0);
      try { 
        ChartEncoder.createEncodedImage((OutputStream) null, defaultChart0, "Tck+hZ]'");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Width (0) and height (0) cannot be <= 0
         //
         verifyException("de.progra.charting.ChartEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = ChartEncoder.getSupportedFormats();
      assertEquals(12, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ChartEncoder.createGIF((OutputStream) null, (Chart) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ChartEncoder chartEncoder0 = new ChartEncoder();
  }
}
