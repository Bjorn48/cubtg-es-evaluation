[MASTER] 23:50:16.004 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 23:54:48.842 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_168_1550357688769/org/sat4j/core/VecInt_168_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_168_1550357688769/org/sat4j/core/VecInt_168_tmp__ESTest_scaffolding.java]]
[MASTER] 23:54:48.842 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 23:54:48.842 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 23:54:48.847 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method access$100(org.sat4j.core.VecInt)
  location: class org.sat4j.core.VecInt: 64
[MASTER] 23:54:48.855 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_168_1550357688769/org/sat4j/core/VecInt_168_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sat Feb 16 22:54:48 GMT 2019
4:  */
5: 
6: package org.sat4j.core;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import org.sat4j.core.VecInt;
14: 
15: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
16: public class VecInt_168_tmp__ESTest extends VecInt_168_tmp__ESTest_scaffolding {
17: 
18:   @Test(timeout = 4000)
19:   public void test0()  throws Throwable  {
20:       VecInt vecInt0 = new VecInt(1559, 0);
21:       assertEquals(1559, vecInt0.size());
22:       assertFalse(vecInt0.isEmpty());
23:       assertEquals(0, vecInt0.last());
24:       assertNotNull(vecInt0);
25:       
26:       VecInt vecInt1 = new VecInt(1559);
27:       assertFalse(vecInt1.equals((Object)vecInt0));
28:       assertEquals(0, vecInt1.size());
29:       assertTrue(vecInt1.isEmpty());
30:       assertNotNull(vecInt1);
31:       
32:       Integer integer0 = new Integer(0);
33:       assertEquals(0, (int)integer0);
34:       assertNotNull(integer0);
35:       
36:       boolean boolean0 = vecInt0.contains((-1));
37:       assertFalse(vecInt0.equals((Object)vecInt1));
38:       assertFalse(boolean0);
39:       assertNotSame(vecInt0, vecInt1);
40:       assertEquals(1559, vecInt0.size());
41:       assertFalse(vecInt0.isEmpty());
42:       assertEquals(0, vecInt0.last());
43:       
44:       boolean boolean1 = vecInt0.isSubsetOf(vecInt1);
45:       assertFalse(vecInt0.equals((Object)vecInt1));
46:       assertFalse(vecInt1.equals((Object)vecInt0));
47:       assertFalse(boolean1 == boolean0);
48:       assertTrue(boolean1);
49:       assertNotSame(vecInt0, vecInt1);
50:       assertNotSame(vecInt1, vecInt0);
51:       assertEquals(1559, vecInt0.size());
52:       assertFalse(vecInt0.isEmpty());
53:       assertEquals(0, vecInt0.last());
54:       assertEquals(0, vecInt1.size());
55:       assertTrue(vecInt1.isEmpty());
56:       
57:       VecInt vecInt2 = new VecInt(0, 0);
58:       assertFalse(vecInt2.equals((Object)vecInt0));
59:       assertTrue(vecInt2.equals((Object)vecInt1));
60:       assertEquals(0, vecInt2.size());
61:       assertTrue(vecInt2.isEmpty());
62:       assertNotNull(vecInt2);
63:       
64:       int[] intArray0 = VecInt.access$100(vecInt2);
65:       assertFalse(vecInt2.equals((Object)vecInt0));
66:       assertTrue(vecInt2.equals((Object)vecInt1));
67:       assertEquals(0, intArray0.length);
68:       assertNotSame(vecInt2, vecInt1);
69:       assertNotSame(vecInt2, vecInt0);
70:       assertEquals(0, vecInt2.size());
71:       assertTrue(vecInt2.isEmpty());
72:       assertArrayEquals(new int[] {}, intArray0);
73:       assertNotNull(intArray0);
74:       
75:       vecInt2.sortUnique();
76:       assertFalse(vecInt2.equals((Object)vecInt0));
77:       assertTrue(vecInt2.equals((Object)vecInt1));
78:       assertNotSame(vecInt2, vecInt1);
79:       assertNotSame(vecInt2, vecInt0);
80:       assertEquals(0, vecInt2.size());
81:       assertTrue(vecInt2.isEmpty());
82:   }
83: }
RegularFileObject[/tmp/EvoSuite_168_1550357688769/org/sat4j/core/VecInt_168_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sat Feb 16 22:54:48 GMT 2019
5:  */
6: 
7: package org.sat4j.core;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class VecInt_168_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.core.VecInt"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(VecInt_168_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.sat4j.core.ReadOnlyVecInt",
82:       "org.sat4j.specs.IteratorInt",
83:       "org.sat4j.core.VecInt$1",
84:       "org.sat4j.specs.IVecInt",
85:       "org.sat4j.core.EmptyVecInt",
86:       "org.sat4j.core.VecInt"
87:     );
88:   } 
89: 
90:   private static void resetClasses() {
91:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(VecInt_168_tmp__ESTest_scaffolding.class.getClassLoader()); 
92: 
93:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
94:       "org.sat4j.core.EmptyVecInt",
95:       "org.sat4j.core.VecInt",
96:       "org.sat4j.core.VecInt$1",
97:       "org.sat4j.core.ReadOnlyVecInt"
98:     );
99:   }
100: }

[MASTER] 23:54:48.856 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
VecInt vecInt0 = new VecInt(1559, 0);
assertEquals(1559, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertEquals(0, vecInt0.last());
assertNotNull(vecInt0);

VecInt vecInt1 = new VecInt(1559);
assertFalse(vecInt1.equals((Object)vecInt0));
assertEquals(0, vecInt1.size());
assertTrue(vecInt1.isEmpty());
assertNotNull(vecInt1);

Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

boolean boolean0 = vecInt0.contains((-1));
assertFalse(vecInt0.equals((Object)vecInt1));
assertFalse(boolean0);
assertNotSame(vecInt0, vecInt1);
assertEquals(1559, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertEquals(0, vecInt0.last());

boolean boolean1 = vecInt0.isSubsetOf(vecInt1);
assertFalse(vecInt0.equals((Object)vecInt1));
assertFalse(vecInt1.equals((Object)vecInt0));
assertFalse(boolean1 == boolean0);
assertTrue(boolean1);
assertNotSame(vecInt0, vecInt1);
assertNotSame(vecInt1, vecInt0);
assertEquals(1559, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertEquals(0, vecInt0.last());
assertEquals(0, vecInt1.size());
assertTrue(vecInt1.isEmpty());

VecInt vecInt2 = new VecInt(0, 0);
assertFalse(vecInt2.equals((Object)vecInt0));
assertTrue(vecInt2.equals((Object)vecInt1));
assertEquals(0, vecInt2.size());
assertTrue(vecInt2.isEmpty());
assertNotNull(vecInt2);

int[] intArray0 = VecInt.access$100(vecInt2);
assertFalse(vecInt2.equals((Object)vecInt0));
assertTrue(vecInt2.equals((Object)vecInt1));
assertEquals(0, intArray0.length);
assertNotSame(vecInt2, vecInt1);
assertNotSame(vecInt2, vecInt0);
assertEquals(0, vecInt2.size());
assertTrue(vecInt2.isEmpty());
assertArrayEquals(new int[] {}, intArray0);
assertNotNull(intArray0);

vecInt2.sortUnique();
assertFalse(vecInt2.equals((Object)vecInt0));
assertTrue(vecInt2.equals((Object)vecInt1));
assertNotSame(vecInt2, vecInt1);
assertNotSame(vecInt2, vecInt0);
assertEquals(0, vecInt2.size());
assertTrue(vecInt2.isEmpty());


[MASTER] 23:54:49.830 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_174_1550357689792/org/sat4j/core/VecInt_174_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_174_1550357689792/org/sat4j/core/VecInt_174_tmp__ESTest_scaffolding.java]]
[MASTER] 23:54:49.831 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 23:54:49.831 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 23:54:49.831 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method access$000(org.sat4j.core.VecInt)
  location: class org.sat4j.core.VecInt: 24
[MASTER] 23:54:49.831 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_174_1550357689792/org/sat4j/core/VecInt_174_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sat Feb 16 22:54:49 GMT 2019
4:  */
5: 
6: package org.sat4j.core;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import org.sat4j.core.VecInt;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class VecInt_174_tmp__ESTest extends VecInt_174_tmp__ESTest_scaffolding {
18: 
19:   @Test(timeout = 4000)
20:   public void test0()  throws Throwable  {
21:       VecInt vecInt0 = null;
22:       // Undeclared exception!
23:       try { 
24:         VecInt.access$000((VecInt) null);
25:         fail("Expecting exception: NullPointerException");
26:       
27:       } catch(NullPointerException e) {
28:          //
29:          // no message in exception (getMessage() returned null)
30:          //
31:          verifyException("org.sat4j.core.VecInt", e);
32:       }
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_174_1550357689792/org/sat4j/core/VecInt_174_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sat Feb 16 22:54:49 GMT 2019
5:  */
6: 
7: package org.sat4j.core;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class VecInt_174_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.core.VecInt"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(VecInt_174_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.sat4j.core.ReadOnlyVecInt",
82:       "org.sat4j.specs.IteratorInt",
83:       "org.sat4j.core.VecInt$1",
84:       "org.sat4j.specs.IVecInt",
85:       "org.sat4j.core.EmptyVecInt",
86:       "org.sat4j.core.VecInt"
87:     );
88:   } 
89: 
90:   private static void resetClasses() {
91:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(VecInt_174_tmp__ESTest_scaffolding.class.getClassLoader()); 
92: 
93:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
94:       "org.sat4j.core.EmptyVecInt",
95:       "org.sat4j.core.VecInt",
96:       "org.sat4j.core.VecInt$1",
97:       "org.sat4j.core.ReadOnlyVecInt"
98:     );
99:   }
100: }

[MASTER] 23:54:49.832 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
VecInt vecInt0 = null;
VecInt.access$000((VecInt) null);

