/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 15:25:14 GMT 2019
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.SelectedTag;
import weka.filters.unsupervised.attribute.RemoveType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RemoveType_ESTest extends RemoveType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RemoveType removeType0 = new RemoveType();
      removeType0.m_attTypeToDelete = (-2716);
      String[] stringArray0 = removeType0.getOptions();
      assertFalse(removeType0.getInvertSelection());
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RemoveType removeType0 = new RemoveType();
      removeType0.m_invert = true;
      boolean boolean0 = removeType0.getInvertSelection();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[1];
      RemoveType removeType0 = new RemoveType();
      try { 
        removeType0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RemoveType removeType0 = new RemoveType();
      // Undeclared exception!
      try { 
        removeType0.setAttributeTypeString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.RemoveType", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RemoveType removeType0 = new RemoveType();
      // Undeclared exception!
      try { 
        removeType0.setAttributeType((SelectedTag) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.RemoveType", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RemoveType removeType0 = new RemoveType();
      removeType0.m_attributeFilter = null;
      // Undeclared exception!
      try { 
        removeType0.output();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.RemoveType", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RemoveType removeType0 = new RemoveType();
      removeType0.m_attributeFilter = null;
      // Undeclared exception!
      try { 
        removeType0.isOutputFormatDefined();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.filters.unsupervised.attribute.RemoveType", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RemoveType removeType0 = new RemoveType();
      removeType0.m_attTypeToDelete = (-803);
      // Undeclared exception!
      try { 
        removeType0.getAttributeType();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Selected tag is not valid
         //
         verifyException("weka.core.SelectedTag", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RemoveType removeType0 = new RemoveType();
      String[] stringArray0 = new String[6];
      stringArray0[0] = ">C/a/X";
      stringArray0[1] = "No class";
      stringArray0[2] = "Q[txLh+Fgi@9q[(Zt";
      stringArray0[3] = "iN&t_b,ee";
      stringArray0[4] = "@)F=u`dB*H";
      stringArray0[5] = "";
      removeType0.setOptions(stringArray0);
      assertFalse(removeType0.getInvertSelection());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      RemoveType removeType0 = new RemoveType();
      assertFalse(removeType0.getInvertSelection());
      
      removeType0.setInvertSelection(true);
      assertTrue(removeType0.getInvertSelection());
  }
}
