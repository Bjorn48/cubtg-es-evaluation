/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 19:46:09 GMT 2019
 */

package org.dom4j.tree;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import org.dom4j.Element;
import org.dom4j.Namespace;
import org.dom4j.Node;
import org.dom4j.QName;
import org.dom4j.bean.BeanAttributeList;
import org.dom4j.bean.BeanElement;
import org.dom4j.bean.BeanMetaData;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMDocumentType;
import org.dom4j.dom.DOMElement;
import org.dom4j.dom.DOMNamespace;
import org.dom4j.tree.AbstractBranch;
import org.dom4j.tree.BaseElement;
import org.dom4j.tree.ContentListFacade;
import org.dom4j.util.NonLazyElement;
import org.dom4j.util.UserDataElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContentListFacade_ESTest extends ContentListFacade_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, linkedList0);
      boolean boolean0 = contentListFacade0.addAll((-271), (Collection<? extends Namespace>) linkedList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("");
      DOMDocument dOMDocument0 = new DOMDocument(dOMElement0);
      Class<String> class0 = String.class;
      BeanMetaData beanMetaData0 = new BeanMetaData(class0);
      QName qName0 = new QName("jB}P*", (Namespace) null, "jB}P*");
      BeanElement beanElement0 = new BeanElement(qName0, (Object) null);
      BeanAttributeList beanAttributeList0 = beanMetaData0.createAttributeList(beanElement0);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, beanAttributeList0);
      Node[] nodeArray0 = new Node[5];
      Node[] nodeArray1 = contentListFacade0.toArray(nodeArray0);
      assertSame(nodeArray0, nodeArray1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DOMNamespace dOMNamespace0 = new DOMNamespace("", "p)i 77S['7&7dbW\"");
      QName qName0 = new QName("p)i 77S['7&7dbW\"", dOMNamespace0);
      DOMElement dOMElement0 = new DOMElement(qName0, 0);
      DOMDocument dOMDocument0 = new DOMDocument(dOMElement0);
      NonLazyElement nonLazyElement0 = new NonLazyElement("", dOMNamespace0);
      List<Namespace> list0 = nonLazyElement0.additionalNamespaces("");
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, list0);
      contentListFacade0.add((Namespace) dOMNamespace0);
      int int0 = contentListFacade0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DOMDocumentType dOMDocumentType0 = new DOMDocumentType("org.dom4j.tree.ContentListFacade", "org.dom4j.tree.ContentListFacade", "org.dom4j.tree.ContentListFacade");
      DOMDocument dOMDocument0 = new DOMDocument("org.dom4j.tree.ContentListFacade", (DOMElement) null, dOMDocumentType0);
      DOMNamespace dOMNamespace0 = new DOMNamespace((Element) null, "", "org.dom4j.tree.ContentListFacade");
      QName qName0 = new QName("", dOMNamespace0);
      NonLazyElement nonLazyElement0 = new NonLazyElement(qName0, 10);
      List<Namespace> list0 = nonLazyElement0.getNamespacesForURI("org.dom4j.tree.ContentListFacade");
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, list0);
      contentListFacade0.add(0, (Namespace) dOMNamespace0);
      boolean boolean0 = contentListFacade0.remove((Namespace) dOMNamespace0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      DOMNamespace dOMNamespace0 = new DOMNamespace("", "");
      NonLazyElement nonLazyElement0 = new NonLazyElement("", dOMNamespace0);
      List<Namespace> list0 = nonLazyElement0.additionalNamespaces("");
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, list0);
      contentListFacade0.add((Namespace) dOMNamespace0);
      int int0 = contentListFacade0.indexOf((Namespace) dOMNamespace0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, (List<Namespace>) null);
      List<Namespace> list0 = contentListFacade0.getBackingList();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BaseElement baseElement0 = new BaseElement("9[Wc vd+mEDMF}wQK");
      NonLazyElement nonLazyElement0 = new NonLazyElement((QName) null, 196);
      List<Namespace> list0 = nonLazyElement0.additionalNamespaces("9[Wc vd+mEDMF}wQK");
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(baseElement0, list0);
      ContentListFacade<Namespace> contentListFacade1 = new ContentListFacade<Namespace>(baseElement0, contentListFacade0);
      List<Namespace> list1 = contentListFacade1.getBackingList();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>((AbstractBranch) null, linkedList0);
      Class<Integer> class0 = Integer.class;
      BeanMetaData beanMetaData0 = BeanMetaData.get(class0);
      BeanElement beanElement0 = new BeanElement("$+yni", contentListFacade0);
      BeanAttributeList beanAttributeList0 = beanMetaData0.createAttributeList(beanElement0);
      ContentListFacade<DOMNamespace> contentListFacade1 = new ContentListFacade<DOMNamespace>((AbstractBranch) null, beanAttributeList0);
      ContentListFacade<DOMNamespace> contentListFacade2 = new ContentListFacade<DOMNamespace>((AbstractBranch) null, contentListFacade1);
      List<DOMNamespace> list0 = contentListFacade2.getBackingList();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, linkedList0);
      // Undeclared exception!
      try { 
        contentListFacade0.toArray((Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, linkedList0);
      // Undeclared exception!
      try { 
        contentListFacade0.toArray();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.Object; cannot be cast to [Lorg.dom4j.Node;
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument("]crQcm@iPr##9T");
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, (List<Namespace>) null);
      // Undeclared exception!
      try { 
        contentListFacade0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Namespace namespace0 = Namespace.get("");
      Object object0 = new Object();
      BeanElement beanElement0 = new BeanElement("", namespace0, object0);
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(beanElement0, beanAttributeList0);
      // Undeclared exception!
      try { 
        contentListFacade0.set((-885), namespace0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // set(int,Object) unsupported
         //
         verifyException("org.dom4j.bean.BeanAttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, linkedList0);
      // Undeclared exception!
      try { 
        contentListFacade0.set((-271), (Namespace) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -271, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserDataElement userDataElement0 = new UserDataElement("");
      List<Namespace> list0 = userDataElement0.declaredNamespaces();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(userDataElement0, list0);
      // Undeclared exception!
      try { 
        contentListFacade0.set(2, (Namespace) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.dom4j.tree.LazyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<String> class0 = String.class;
      BeanMetaData beanMetaData0 = new BeanMetaData(class0);
      BeanAttributeList beanAttributeList0 = new BeanAttributeList((BeanElement) null, beanMetaData0);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>((AbstractBranch) null, beanAttributeList0);
      // Undeclared exception!
      try { 
        contentListFacade0.removeAll(beanAttributeList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>((AbstractBranch) null, linkedList0);
      Namespace namespace0 = new Namespace("2.0", "org.dom4j.tree.ContentListFacade");
      // Undeclared exception!
      try { 
        contentListFacade0.remove(namespace0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }
}
