/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 21:27:32 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.MultiLineLabel;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.image.BufferedImage;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import javax.swing.DebugGraphics;
import javax.swing.plaf.synth.SynthLabelUI;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiLineLabel_ESTest extends MultiLineLabel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(".#7FT$0d^");
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 1);
      multiLineLabel0.num_lines = 2660;
      Graphics graphics0 = bufferedImage0.getGraphics();
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(graphics0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("d@%h2#Tt$Te.YsJU^da", 0, 2, 2);
      HashMap<AttributedCharacterIterator.Attribute, SynthLabelUI> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, SynthLabelUI>();
      Font font0 = new Font(hashMap0);
      multiLineLabel0.setFont(font0);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("7?z{rOg)f5", 53, (-368), 2);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("|,M4BP=", 1);
      BufferedImage bufferedImage0 = new BufferedImage(1, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics2D0);
      Font font0 = debugGraphics0.getFont();
      multiLineLabel0.setFont(font0);
      multiLineLabel0.paint(graphics2D0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(1, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n");
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, dimension0.width);
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Font font0 = Font.decode(".(<Iy;eJOhcV4s(;X");
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 372);
      Font font1 = font0.deriveFont((-2275.7544F));
      multiLineLabel0.setFont(font1);
      multiLineLabel0.setLabel("k:f.L$mfN\"CR#)4H");
      assertEquals(372, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("{default=AttributeSet,}\n{name=default,}\n");
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.newLabel("");
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", (-387), 4884, (-387));
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Style style0 = defaultStyledDocument0.getLogicalStyle(372);
      Font font0 = styleContext0.getFont((AttributeSet) style0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.measure();
      assertEquals((-387), multiLineLabel0.getMarginWidth());
      assertEquals((-387), multiLineLabel0.getAlignment());
      assertEquals(4884, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", (-387), 4884, (-387));
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Style style0 = defaultStyledDocument0.getLogicalStyle(372);
      Font font0 = styleContext0.getFont((AttributeSet) style0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.addNotify();
      assertEquals(4884, multiLineLabel0.getMarginHeight());
      assertEquals((-387), multiLineLabel0.getAlignment());
      assertEquals((-387), multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", (-387), 4884, (-387));
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(9768, dimension0.height);
      assertEquals((-387), multiLineLabel0.getAlignment());
      assertEquals((-774), dimension0.width);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(0, dimension0.width);
      assertEquals(0, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("g{WNk*>+g)1\"x[", 88, 88, 678);
      multiLineLabel0.max_width = (-294);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(0, dimension0.height);
      assertEquals(678, multiLineLabel0.getAlignment());
      assertEquals(88, multiLineLabel0.getMarginWidth());
      assertEquals(88, multiLineLabel0.getMarginHeight());
      assertEquals((-294), dimension0.width);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", (-387), 4884, (-387));
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Style style0 = defaultStyledDocument0.getLogicalStyle(372);
      Font font0 = styleContext0.getFont((AttributeSet) style0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.setLabel("Re1+E)yl/c");
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(15, dimension0.height);
      assertEquals(4884, multiLineLabel0.getMarginHeight());
      assertEquals(70, dimension0.width);
      assertEquals((-387), multiLineLabel0.getAlignment());
      assertEquals((-387), multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", 0, 1, 10);
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(10, multiLineLabel0.getAlignment());
      assertEquals(0, int0);
      assertEquals(1, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Create");
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(0, int0);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(0, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("TFTJ5#", 1456, (-2894));
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals((-2894), int0);
      assertEquals(1456, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n");
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, int0);
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("j2TA,wmoS?Zp7HQa<");
      // Undeclared exception!
      try { 
        multiLineLabel0.setFont((Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("w%WNXHv&7L0", (-1));
      // Undeclared exception!
      try { 
        multiLineLabel0.newLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      // Undeclared exception!
      try { 
        multiLineLabel0.measure();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, (-1), (-1), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 117, 117);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 240);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("EY}82D,f!Et-j~4rG", 2455, 2455, 2455);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("~o)TLjY)I0x");
      Font font0 = new Font("0vX4#-8", (-2522), 0);
      multiLineLabel0.setFont(font0);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", (-387), 4884, (-387));
      multiLineLabel0.setAlignment(3031);
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(3031, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("|,M4BP=", 1);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(20, dimension0.width);
      assertEquals(1, multiLineLabel0.getAlignment());
      assertEquals(20, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", (-387), 4884, (-387));
      int int0 = multiLineLabel0.getAlignment();
      assertEquals((-387), int0);
      assertEquals(4884, multiLineLabel0.getMarginHeight());
      assertEquals((-387), multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Can not change to ");
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(10, int0);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.MultiLineLabel", 400, 400, 400);
      // Undeclared exception!
      try { 
        multiLineLabel0.setLabel("Newzgrabber.MultiLineLabel");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("%");
      multiLineLabel0.setMarginWidth(3);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", (-387), 4884, (-387));
      // Undeclared exception!
      try { 
        multiLineLabel0.addNotify();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", (-387), 4884, (-387));
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(4884, multiLineLabel0.getMarginHeight());
      assertEquals((-387), multiLineLabel0.getAlignment());
      assertEquals((-387), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("|,M4BP=", 1);
      BufferedImage bufferedImage0 = new BufferedImage(1, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics2D0);
      Font font0 = debugGraphics0.getFont();
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(1, multiLineLabel0.getAlignment());
      assertEquals(35, dimension0.height);
      assertEquals(72, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", (-387), 4884, (-387));
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      multiLineLabel0.setForeground(systemColor0);
      assertEquals((-387), multiLineLabel0.getMarginWidth());
      assertEquals((-387), multiLineLabel0.getAlignment());
      assertEquals(4884, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("JI$-xCw}3Lo5C|)k", 0, 0, 0);
      multiLineLabel0.setMarginHeight((-2656));
      multiLineLabel0.getPreferredSize();
      assertEquals((-2656), multiLineLabel0.getMarginHeight());
  }
}
