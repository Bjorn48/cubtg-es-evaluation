/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 13:49:29 GMT 2019
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.Instance;
import weka.filters.unsupervised.attribute.InterquartileRange;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InterquartileRange_ESTest extends InterquartileRange_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InterquartileRange interquartileRange0 = new InterquartileRange();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      interquartileRange0.m_ExtremeValuesAsOutliers = true;
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      interquartileRange0.m_AttributeIndices = intArray0;
      interquartileRange0.isOutlier((Instance) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InterquartileRange interquartileRange0 = new InterquartileRange();
      double[] doubleArray0 = new double[4];
      interquartileRange0.m_Median = doubleArray0;
      InterquartileRange.ValueType interquartileRange_ValueType0 = InterquartileRange.ValueType.LOWER_EXTREME_VALUES;
      interquartileRange0.getValues(interquartileRange_ValueType0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InterquartileRange interquartileRange0 = new InterquartileRange();
      double[] doubleArray0 = new double[8];
      interquartileRange0.m_LowerExtremeValue = doubleArray0;
      InterquartileRange.ValueType interquartileRange_ValueType0 = InterquartileRange.ValueType.LOWER_OUTLIER_VALUES;
      interquartileRange0.getValues(interquartileRange_ValueType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InterquartileRange interquartileRange0 = new InterquartileRange();
      double[] doubleArray0 = new double[8];
      interquartileRange0.m_LowerExtremeValue = doubleArray0;
      InterquartileRange.ValueType interquartileRange_ValueType0 = InterquartileRange.ValueType.UPPER_EXTREME_VALUES;
      interquartileRange0.getValues(interquartileRange_ValueType0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InterquartileRange interquartileRange0 = new InterquartileRange();
      interquartileRange0.setExtremeValuesFactor(3.0);
  }
}
