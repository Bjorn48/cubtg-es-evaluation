<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="com.soops.CEN4010.JMCA.JParser.parseTest.JMCAParserTestFrame.getSize()" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="com.soops.CEN4010.JMCA.JParser.parseTest.JMCAParserTestFrame.setLocation(int,int)" proba="1.0"></transition></state><state id="s5"><transition target="s6" action="com.soops.CEN4010.JMCA.JParser.parseTest.JMCAParserTestFrame.setVisible(boolean)" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="com.soops.CEN4010.JMCA.JParser.parseTest.JMCAParserTestFrame.&lt;init&gt;(javax.swing.tree.DefaultMutableTreeNode,java.lang.String)" proba="1.0"></transition></state><state id="s1"><transition target="s3" action="com.soops.CEN4010.JMCA.JParser.parseTest.JMCAParserTestFrame.validate()" proba="0.5"></transition><transition target="s2" action="com.soops.CEN4010.JMCA.JParser.parseTest.JMCAParserTestFrame.pack()" proba="0.5"></transition></state><state id="s2"><transition target="s3" action="com.soops.CEN4010.JMCA.JParser.parseTest.JMCAParserTestFrame.validate()" proba="1.0"></transition></state></states></ts>