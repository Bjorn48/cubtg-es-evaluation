/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 18:30:30 GMT 2019
 */

package org.dom4j.tree;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.dom4j.Namespace;
import org.dom4j.Node;
import org.dom4j.QName;
import org.dom4j.bean.BeanAttributeList;
import org.dom4j.bean.BeanElement;
import org.dom4j.bean.BeanMetaData;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMElement;
import org.dom4j.dom.DOMNamespace;
import org.dom4j.tree.AbstractBranch;
import org.dom4j.tree.BackedList;
import org.dom4j.tree.BaseElement;
import org.dom4j.tree.ContentListFacade;
import org.dom4j.tree.DefaultDocument;
import org.dom4j.tree.DefaultDocumentType;
import org.dom4j.tree.DefaultElement;
import org.dom4j.util.IndexedElement;
import org.dom4j.util.NonLazyElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContentListFacade_ESTest extends ContentListFacade_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BaseElement baseElement0 = new BaseElement("-eJ,s#G");
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(baseElement0, linkedList0);
      Namespace namespace0 = new Namespace((String) null, (String) null);
      contentListFacade0.add(0, namespace0);
      assertFalse(contentListFacade0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = QName.get("org.dom4j.tree.ContentListFacade", "org.dom4j.tree.ContentListFacade");
      IndexedElement indexedElement0 = new IndexedElement(qName0);
      List<Namespace> list0 = indexedElement0.additionalNamespaces("{Y5eD7)pa$,?G6s");
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>((AbstractBranch) null, list0);
      Node[] nodeArray0 = new Node[7];
      Node[] nodeArray1 = contentListFacade0.toArray(nodeArray0);
      assertSame(nodeArray1, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      DefaultElement defaultElement0 = new DefaultElement((QName) null);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(defaultElement0, linkedList0);
      int int0 = contentListFacade0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DOMNamespace dOMNamespace0 = new DOMNamespace((String) null, (String) null);
      BaseElement baseElement0 = new BaseElement((String) null, dOMNamespace0);
      DefaultDocumentType defaultDocumentType0 = new DefaultDocumentType();
      DefaultDocument defaultDocument0 = new DefaultDocument((String) null, baseElement0, defaultDocumentType0);
      Class<Object> class0 = Object.class;
      BeanMetaData beanMetaData0 = new BeanMetaData(class0);
      Object object0 = new Object();
      BeanElement beanElement0 = new BeanElement("9![SSd", dOMNamespace0, object0);
      BeanAttributeList beanAttributeList0 = beanMetaData0.createAttributeList(beanElement0);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(defaultDocument0, beanAttributeList0);
      int int0 = contentListFacade0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      linkedList0.add((Namespace) null);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, linkedList0);
      Namespace namespace0 = contentListFacade0.set(0, (Namespace) null);
      assertNull(namespace0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      DefaultElement defaultElement0 = new DefaultElement((QName) null);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(defaultElement0, linkedList0);
      boolean boolean0 = contentListFacade0.removeAll(linkedList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      Namespace namespace0 = new Namespace("", "");
      DOMElement dOMElement0 = new DOMElement("H-S-f|LvvdO(ZZ", namespace0);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMElement0, linkedList0);
      contentListFacade0.add(namespace0);
      boolean boolean0 = contentListFacade0.remove(namespace0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      NonLazyElement nonLazyElement0 = new NonLazyElement((String) null, namespace0);
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(nonLazyElement0, linkedList0);
      contentListFacade0.add(namespace0);
      int int0 = contentListFacade0.lastIndexOf(namespace0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BaseElement baseElement0 = new BaseElement("-eJ,s#G");
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(baseElement0, linkedList0);
      Namespace namespace0 = new Namespace((String) null, (String) null);
      contentListFacade0.add(namespace0);
      int int0 = contentListFacade0.indexOf(namespace0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultElement defaultElement0 = new DefaultElement("");
      ContentListFacade<DOMNamespace> contentListFacade0 = new ContentListFacade<DOMNamespace>(defaultElement0, (List<DOMNamespace>) null);
      List<DOMNamespace> list0 = contentListFacade0.getBackingList();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultElement defaultElement0 = new DefaultElement((QName) null, 783);
      LinkedList<DOMNamespace> linkedList0 = new LinkedList<DOMNamespace>();
      BeanElement beanElement0 = new BeanElement((QName) null);
      ContentListFacade<DOMNamespace> contentListFacade0 = new ContentListFacade<DOMNamespace>(defaultElement0, linkedList0);
      ContentListFacade<DOMNamespace> contentListFacade1 = new ContentListFacade<DOMNamespace>(beanElement0, contentListFacade0);
      List<DOMNamespace> list0 = contentListFacade1.getBackingList();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QName qName0 = QName.get("vaLfQ>6&*");
      IndexedElement indexedElement0 = new IndexedElement(qName0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      NonLazyElement nonLazyElement0 = new NonLazyElement((String) null, namespace0);
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(nonLazyElement0, linkedList0);
      contentListFacade0.add(namespace0);
      ContentListFacade<Namespace> contentListFacade1 = new ContentListFacade<Namespace>(indexedElement0, contentListFacade0);
      List<Namespace> list0 = contentListFacade1.getBackingList();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, linkedList0);
      contentListFacade0.add((Namespace) null);
      Namespace namespace0 = contentListFacade0.get(0);
      assertNull(namespace0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("", "");
      List<Namespace> list0 = beanElement0.declaredNamespaces();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(beanElement0, list0);
      Namespace namespace0 = new Namespace("", "");
      contentListFacade0.add(namespace0);
      Namespace namespace1 = contentListFacade0.get(0);
      assertEquals("", namespace1.getText());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      DefaultElement defaultElement0 = new DefaultElement((QName) null);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(defaultElement0, linkedList0);
      // Undeclared exception!
      try { 
        contentListFacade0.toArray((Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultDocument defaultDocument0 = new DefaultDocument("_5v3;fl<");
      ContentListFacade<DOMNamespace> contentListFacade0 = new ContentListFacade<DOMNamespace>(defaultDocument0, (List<DOMNamespace>) null);
      // Undeclared exception!
      try { 
        contentListFacade0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IndexedElement indexedElement0 = new IndexedElement((String) null);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(indexedElement0, (List<Namespace>) null);
      // Undeclared exception!
      try { 
        contentListFacade0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultElement defaultElement0 = new DefaultElement((QName) null);
      DOMNamespace dOMNamespace0 = new DOMNamespace("", "");
      BeanElement beanElement0 = new BeanElement((QName) null, dOMNamespace0);
      Class<Namespace> class0 = Namespace.class;
      BeanMetaData beanMetaData0 = new BeanMetaData(class0);
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0, beanMetaData0);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(defaultElement0, beanAttributeList0);
      // Undeclared exception!
      try { 
        contentListFacade0.set((-4959), (Namespace) dOMNamespace0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // set(int,Object) unsupported
         //
         verifyException("org.dom4j.bean.BeanAttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>((AbstractBranch) null, linkedList0);
      // Undeclared exception!
      try { 
        contentListFacade0.set((-42), (Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement((String) null, (Object) null);
      List<Namespace> list0 = beanElement0.declaredNamespaces();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(beanElement0, list0);
      // Undeclared exception!
      try { 
        contentListFacade0.set(0, (Namespace) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.dom4j.tree.LazyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("", "");
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(beanElement0, (List<Namespace>) null);
      // Undeclared exception!
      try { 
        contentListFacade0.removeAll(beanAttributeList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement((QName) null, 1510);
      ContentListFacade<DOMNamespace> contentListFacade0 = new ContentListFacade<DOMNamespace>(dOMElement0, (List<DOMNamespace>) null);
      DOMNamespace dOMNamespace0 = new DOMNamespace("", "9I+QY8>^+M}9ij1");
      // Undeclared exception!
      try { 
        contentListFacade0.remove(dOMNamespace0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ContentListFacade<DOMNamespace> contentListFacade0 = new ContentListFacade<DOMNamespace>((AbstractBranch) null, (List<DOMNamespace>) null);
      // Undeclared exception!
      try { 
        contentListFacade0.remove((-27));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, linkedList0);
      // Undeclared exception!
      try { 
        contentListFacade0.remove((-451));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -451, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BaseElement baseElement0 = new BaseElement("\f9z?>=:l");
      BackedList<DOMNamespace> backedList0 = baseElement0.createResultList();
      ContentListFacade<DOMNamespace> contentListFacade0 = new ContentListFacade<DOMNamespace>(baseElement0, backedList0);
      // Undeclared exception!
      try { 
        contentListFacade0.remove(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("org.dom4j.tree.LazyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("", "");
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(beanElement0, beanAttributeList0);
      // Undeclared exception!
      try { 
        contentListFacade0.remove(1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.dom4j.Node
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("", "");
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(beanElement0, beanAttributeList0);
      // Undeclared exception!
      try { 
        contentListFacade0.remove((-1527));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("", (Namespace) null);
      ContentListFacade<DOMNamespace> contentListFacade0 = new ContentListFacade<DOMNamespace>(dOMElement0, (List<DOMNamespace>) null);
      DOMNamespace dOMNamespace0 = new DOMNamespace("", "");
      // Undeclared exception!
      try { 
        contentListFacade0.lastIndexOf(dOMNamespace0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("B![H<7l%uQ'hg^A", "B![H<7l%uQ'hg^A");
      ContentListFacade<DOMNamespace> contentListFacade0 = new ContentListFacade<DOMNamespace>(beanElement0, (List<DOMNamespace>) null);
      // Undeclared exception!
      try { 
        contentListFacade0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, (List<Namespace>) null);
      // Undeclared exception!
      try { 
        contentListFacade0.indexOf((Namespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, (List<Namespace>) null);
      // Undeclared exception!
      try { 
        contentListFacade0.get((-2242));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BaseElement baseElement0 = new BaseElement((QName) null);
      BackedList<DOMNamespace> backedList0 = baseElement0.createResultList();
      ContentListFacade<DOMNamespace> contentListFacade0 = new ContentListFacade<DOMNamespace>((AbstractBranch) null, backedList0);
      // Undeclared exception!
      try { 
        contentListFacade0.get(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.dom4j.tree.LazyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      ContentListFacade<DOMNamespace> contentListFacade0 = new ContentListFacade<DOMNamespace>(dOMDocument0, (List<DOMNamespace>) null);
      // Undeclared exception!
      try { 
        contentListFacade0.containsAll((Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultElement defaultElement0 = new DefaultElement((QName) null);
      ContentListFacade<DOMNamespace> contentListFacade0 = new ContentListFacade<DOMNamespace>(defaultElement0, (List<DOMNamespace>) null);
      // Undeclared exception!
      try { 
        contentListFacade0.contains((DOMNamespace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("", "");
      List<Namespace> list0 = beanElement0.declaredNamespaces();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(beanElement0, list0);
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);
      // Undeclared exception!
      try { 
        contentListFacade0.addAll((Collection<? extends Namespace>) beanAttributeList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The node \"org.dom4j.bean.BeanAttribute@0000000011\" could not be added to the element \"\" because: The Node already has an existing parent of \"\"
         //
         verifyException("org.dom4j.tree.AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("", "");
      List<Namespace> list0 = beanElement0.declaredNamespaces();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(beanElement0, list0);
      Namespace namespace0 = new Namespace("", "");
      contentListFacade0.add(namespace0);
      // Undeclared exception!
      contentListFacade0.addAll((Collection<? extends Namespace>) contentListFacade0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      linkedList0.add((Namespace) null);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, linkedList0);
      // Undeclared exception!
      try { 
        contentListFacade0.addAll((Collection<? extends Namespace>) linkedList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      Namespace namespace0 = Namespace.get("");
      NonLazyElement nonLazyElement0 = new NonLazyElement("", namespace0);
      List<Namespace> list0 = nonLazyElement0.additionalNamespaces("");
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, list0);
      contentListFacade0.add(namespace0);
      // Undeclared exception!
      try { 
        contentListFacade0.addAll((Collection<? extends Namespace>) list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.LazyList$LazyListIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, linkedList0);
      // Undeclared exception!
      try { 
        contentListFacade0.addAll((Collection<? extends Namespace>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultDocument defaultDocument0 = new DefaultDocument("_5v3;fl<");
      QName qName0 = QName.get("_5v3;fl<", (String) null, "_5v3;fl<");
      BaseElement baseElement0 = new BaseElement(qName0);
      List<Namespace> list0 = baseElement0.declaredNamespaces();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(defaultDocument0, list0);
      BeanElement beanElement0 = new BeanElement(qName0);
      Class<Object> class0 = Object.class;
      BeanMetaData beanMetaData0 = new BeanMetaData(class0);
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0, beanMetaData0);
      // Undeclared exception!
      try { 
        contentListFacade0.addAll(0, (Collection<? extends Namespace>) beanAttributeList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The node \"org.dom4j.bean.BeanAttribute@0000000018\" could not be added to the element \"_5v3;fl<\" because: The Node already has an existing parent of \"_5v3;fl<\"
         //
         verifyException("org.dom4j.tree.AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      BeanMetaData beanMetaData0 = new BeanMetaData(class0);
      BeanElement beanElement0 = new BeanElement("org.dom4j.tree.ContentListFacade", "");
      BeanAttributeList beanAttributeList0 = beanMetaData0.createAttributeList(beanElement0);
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(beanElement0, beanAttributeList0);
      // Undeclared exception!
      try { 
        contentListFacade0.addAll(4, (Collection<? extends Namespace>) beanAttributeList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // add(int,Object) unsupported
         //
         verifyException("org.dom4j.bean.BeanAttributeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DOMElement dOMElement0 = new DOMElement("");
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMElement0, (List<Namespace>) null);
      // Undeclared exception!
      try { 
        contentListFacade0.addAll((-2517), (Collection<? extends Namespace>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.ContentListFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DOMDocument dOMDocument0 = new DOMDocument();
      LinkedList<Namespace> linkedList0 = new LinkedList<Namespace>();
      ContentListFacade<Namespace> contentListFacade0 = new ContentListFacade<Namespace>(dOMDocument0, linkedList0);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      linkedList0.add(namespace0);
      // Undeclared exception!
      try { 
        contentListFacade0.addAll((-1), (Collection<? extends Namespace>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 1
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
