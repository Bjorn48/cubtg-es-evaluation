/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 15:26:24 GMT 2019
 */

package org.sat4j.tools.xplain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sat4j.core.VecInt;
import org.sat4j.minisat.constraints.CardinalityDataStructureYanMax;
import org.sat4j.specs.IVecInt;
import org.sat4j.tools.AbstractMinimalModel;
import org.sat4j.tools.ClausalCardinalitiesDecorator;
import org.sat4j.tools.ManyCore;
import org.sat4j.tools.Minimal4CardinalityModel;
import org.sat4j.tools.OptToSatAdapter;
import org.sat4j.tools.StatisticsSolver;
import org.sat4j.tools.encoding.Ladder;
import org.sat4j.tools.xplain.QuickXplain2001Strategy;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QuickXplain2001Strategy_ESTest extends QuickXplain2001Strategy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QuickXplain2001Strategy quickXplain2001Strategy0 = new QuickXplain2001Strategy();
      OptToSatAdapter[] optToSatAdapterArray0 = new OptToSatAdapter[1];
      OptToSatAdapter optToSatAdapter0 = mock(OptToSatAdapter.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(optToSatAdapter0).isVerbose();
      doReturn(0, 0).when(optToSatAdapter0).nVars();
      doReturn((IVecInt) null).when(optToSatAdapter0).unsatExplanation();
      optToSatAdapterArray0[0] = optToSatAdapter0;
      ManyCore<OptToSatAdapter> manyCore0 = new ManyCore<OptToSatAdapter>(optToSatAdapterArray0);
      IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(optToSatAdapter0);
      HashMap<Integer, CardinalityDataStructureYanMax> hashMap0 = new HashMap<Integer, CardinalityDataStructureYanMax>();
      // Undeclared exception!
      try { 
        quickXplain2001Strategy0.explain(manyCore0, hashMap0, iVecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.xplain.QuickXplain2001Strategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QuickXplain2001Strategy quickXplain2001Strategy0 = new QuickXplain2001Strategy();
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      int[] intArray0 = new int[7];
      VecInt vecInt0 = new VecInt(intArray0);
      Minimal4CardinalityModel minimal4CardinalityModel0 = new Minimal4CardinalityModel(statisticsSolver0, vecInt0);
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      // Undeclared exception!
      try { 
        quickXplain2001Strategy0.explain(minimal4CardinalityModel0, hashMap0, vecInt0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not implemented yet!
         //
         verifyException("org.sat4j.tools.StatisticsSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QuickXplain2001Strategy quickXplain2001Strategy0 = new QuickXplain2001Strategy();
      HashMap<Integer, OptToSatAdapter> hashMap0 = new HashMap<Integer, OptToSatAdapter>();
      VecInt vecInt0 = new VecInt();
      OptToSatAdapter optToSatAdapter0 = mock(OptToSatAdapter.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(optToSatAdapter0).isSatisfiable(any(org.sat4j.specs.IVecInt.class));
      doReturn(false).when(optToSatAdapter0).isVerbose();
      doReturn(vecInt0).when(optToSatAdapter0).unsatExplanation();
      Ladder ladder0 = new Ladder();
      ClausalCardinalitiesDecorator<OptToSatAdapter> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<OptToSatAdapter>(optToSatAdapter0, ladder0);
      IVecInt iVecInt0 = quickXplain2001Strategy0.explain(clausalCardinalitiesDecorator0, hashMap0, vecInt0);
      assertEquals(0, iVecInt0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QuickXplain2001Strategy quickXplain2001Strategy0 = new QuickXplain2001Strategy();
      String string0 = quickXplain2001Strategy0.toString();
      assertEquals("QuickXplain (IJCAI WS 2001 version) minimization strategy", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QuickXplain2001Strategy quickXplain2001Strategy0 = new QuickXplain2001Strategy();
      quickXplain2001Strategy0.cancelExplanationComputation();
      assertEquals("QuickXplain (IJCAI WS 2001 version) minimization strategy", quickXplain2001Strategy0.toString());
  }
}
