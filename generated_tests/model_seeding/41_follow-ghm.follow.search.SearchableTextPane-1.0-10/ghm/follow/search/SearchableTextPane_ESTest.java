/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 26 01:53:48 GMT 2019
 */

package ghm.follow.search;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ghm.follow.search.LineResult;
import ghm.follow.search.SearchableTextPane;
import java.awt.Component;
import java.awt.Font;
import java.awt.SystemColor;
import java.text.Format;
import java.util.HashMap;
import java.util.List;
import java.util.regex.PatternSyntaxException;
import javax.swing.JTextPane;
import javax.swing.border.LineBorder;
import javax.swing.plaf.multi.MultiTextUI;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.LabelView;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SearchableTextPane_ESTest extends SearchableTextPane_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Font font0 = new Font("t>yJ", 0, (-1162));
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      int int0 = searchableTextPane0.search("", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Element element0 = defaultStyledDocument0.getCharacterElement((-1349));
      LabelView labelView0 = new LabelView(element0);
      Font font0 = labelView0.getFont();
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 1);
      int int0 = searchableTextPane0.search("\",Eqy~(B", (-1349));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 6);
      // Undeclared exception!
      try { 
        searchableTextPane0.highlight(" (", 6);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 2
         //  (
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<Format.Field, String> hashMap0 = new HashMap<Format.Field, String>();
      Font font0 = new Font(hashMap0);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 316);
      MultiTextUI multiTextUI0 = new MultiTextUI();
      searchableTextPane0.setUI(multiTextUI0);
      // Undeclared exception!
      try { 
        searchableTextPane0.highlight("[T&_q17~uM5j'B\"", (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ghm.follow.search.SearchableTextPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 28);
      // Undeclared exception!
      try { 
        searchableTextPane0.highlight("+$|w", 28);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown search strategy requested [flags=28
         //
         verifyException("ghm.follow.search.SearchEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-2));
      SearchableTextPane searchableTextPane1 = new SearchableTextPane((Font) null, (-2));
      searchableTextPane0.add((Component) searchableTextPane1);
      // Undeclared exception!
      try { 
        searchableTextPane1.getScrollableTracksViewportWidth();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.text.PlainView", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      JTextPane jTextPane0 = new JTextPane();
      MutableAttributeSet mutableAttributeSet0 = jTextPane0.getInputAttributes();
      Font font0 = styleContext0.getFont((AttributeSet) mutableAttributeSet0);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      searchableTextPane0.removeHighlights();
      assertFalse(searchableTextPane0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 15);
      // Undeclared exception!
      try { 
        searchableTextPane0.search((String) null, 15);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet();
      Font font0 = styleContext0.getFont((AttributeSet) simpleAttributeSet0);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      List<LineResult> list0 = searchableTextPane0.highlight("3M8esp$&xaQ?K", 9);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 1166);
      int int0 = searchableTextPane0.search("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-1227));
      int int0 = searchableTextPane0.search((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-1227));
      List<LineResult> list0 = searchableTextPane0.highlight("", (-1227));
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 0);
      List<LineResult> list0 = searchableTextPane0.highlight((String) null, 0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 1166);
      Font font0 = Font.decode("");
      SearchableTextPane searchableTextPane1 = new SearchableTextPane(font0, (-58));
      searchableTextPane1.add((Component) searchableTextPane0);
      SystemColor systemColor0 = SystemColor.infoText;
      LineBorder lineBorder0 = new LineBorder(systemColor0, 1166);
      searchableTextPane0.setBorder(lineBorder0);
      boolean boolean0 = searchableTextPane0.getScrollableTracksViewportWidth();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 1166);
      Font font0 = Font.decode("");
      SearchableTextPane searchableTextPane1 = new SearchableTextPane(font0, (-58));
      searchableTextPane1.add((Component) searchableTextPane0);
      boolean boolean0 = searchableTextPane0.getScrollableTracksViewportWidth();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet();
      Font font0 = styleContext0.getFont((AttributeSet) simpleAttributeSet0);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      boolean boolean0 = searchableTextPane0.getScrollableTracksViewportWidth();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet();
      Font font0 = styleContext0.getFont((AttributeSet) simpleAttributeSet0);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      int int0 = searchableTextPane0.search("3M8esp$&xaQ?K");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 1126);
      List<LineResult> list0 = searchableTextPane0.highlight("|", 1126);
      assertEquals(1, list0.size());
  }
}
