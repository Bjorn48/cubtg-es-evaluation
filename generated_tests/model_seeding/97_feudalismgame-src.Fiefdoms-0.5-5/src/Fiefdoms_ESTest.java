/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 13:41:34 GMT 2019
 */

package src;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ListIterator;
import java.util.stream.Stream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import src.Fiefdoms;
import src.Intruders;
import src.Knight;
import src.Player;
import src.Retainers;
import src.Vassals;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Fiefdoms_ESTest extends Fiefdoms_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.buyPersonalCastles(3);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      assertNotNull(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setRebelliousVassals(0, false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Vassals> arrayList0 = new ArrayList<Vassals>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      boolean boolean0 = arrayList0.addAll(0, (Collection<? extends Vassals>) fiefdoms0.loyalVassals);
      assertFalse(boolean0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      boolean boolean1 = arrayList0.add((Vassals) null);
      assertTrue(boolean1);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(boolean1 == boolean0);
      
      fiefdoms0.setRebelliousVassals(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      assertNotNull(arrayList1);
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      fiefdoms0.setMuslim((-1), false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Innexistent fiefdom: ";
      stringArray0[1] = "I9N)Z/6Wv";
      stringArray0[2] = "s6S!5;,]ebEaG,r<v";
      stringArray0[3] = "src.SAXParser";
      stringArray0[4] = "";
      String[] stringArray1 = arrayList1.toArray(stringArray0);
      assertNotNull(stringArray1);
      assertEquals(5, stringArray0.length);
      assertEquals(5, stringArray1.length);
      assertSame(stringArray0, stringArray1);
      assertSame(stringArray1, stringArray0);
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      boolean boolean2 = arrayList1.add((Player) null);
      assertTrue(boolean2);
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      fiefdoms0.setVassalsList(arrayList1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      
      String string0 = fiefdoms0.getName();
      assertNull(string0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.buyFiefdomCastles(3);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertNull(arrayList2);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMuslim();
      assertNotNull(arrayList3);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      
      Intruders intruders0 = new Intruders((String) null, (String) null);
      assertNotNull(intruders0);
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      
      boolean boolean3 = arrayList3.add(intruders0);
      assertTrue(boolean3);
      assertTrue(arrayList3.contains(intruders0));
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, arrayList3.size());
      assertFalse(arrayList3.isEmpty());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      
      fiefdoms0.setMagyar(arrayList3);
      assertTrue(arrayList3.contains(intruders0));
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, arrayList3.size());
      assertFalse(arrayList3.isEmpty());
      
      fiefdoms0.buyFiefdomCastles(0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      String string1 = fiefdoms0.getName();
      assertNull(string1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      String string2 = fiefdoms0.getConqueror();
      assertNull(string2);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setFiefdomCastles(true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      boolean boolean0 = arrayList0.add("5fW4i");
      assertTrue(boolean0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      boolean boolean1 = arrayList0.add("5fW4i");
      assertTrue(boolean1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean1 == boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "5fW4i", "5fW4i", 2, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      
      boolean boolean2 = fiefdoms0.loyalVassals.add((Vassals) null);
      assertTrue(boolean2);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      fiefdoms0.setPersonalCastles(0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      
      fiefdoms0.loyalVassals = fiefdoms0.loyalVassals;
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertFalse(fiefdoms0.loyalVassals.isEmpty());
      assertEquals(1, fiefdoms0.loyalVassals.size());
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertNotNull(arrayList1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList1.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertEquals(2, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      
      Stream<String> stream0 = arrayList1.stream();
      assertNotNull(stream0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList1.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertEquals(2, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      
      boolean boolean3 = arrayList1.add("");
      assertTrue(boolean3);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList1.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertEquals(3, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      
      arrayList0.trimToSize();
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      ListIterator<Vassals> listIterator0 = fiefdoms0.loyalVassals.listIterator();
      assertNotNull(listIterator0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(listIterator0.hasNext());
      assertFalse(listIterator0.hasPrevious());
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getViking();
      assertNotNull(arrayList2);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      
      fiefdoms0.setRebelliousVassals(2, true);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      
      String string0 = fiefdoms0.getConqueror();
      assertNull(string0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      
      fiefdoms0.setName("");
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      
      String string1 = fiefdoms0.getName();
      assertEquals("", string1);
      assertNotNull(string1);
      assertTrue(arrayList0.contains(""));
      assertSame(arrayList0, arrayList1);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      
      fiefdoms0.setOwner("knightsSax.xml");
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains("knightsSax.xml"));
      assertSame(arrayList0, arrayList1);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("knightsSax.xml", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      
      ArrayList<String> arrayList3 = fiefdoms0.getInvaderType();
      assertNotNull(arrayList3);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains("knightsSax.xml"));
      assertTrue(arrayList3.contains(""));
      assertFalse(arrayList3.contains("knightsSax.xml"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList3, arrayList0);
      assertSame(arrayList3, arrayList1);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList3.isEmpty());
      assertEquals(3, arrayList3.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("knightsSax.xml", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      
      fiefdoms0.setValue(0);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains("knightsSax.xml"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList3);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("knightsSax.xml", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, ".", ".", 1, false, (ArrayList<String>) null);
      assertNotNull(fiefdoms1);
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(1, fiefdoms1.getValue());
      assertEquals(".", fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(".", fiefdoms1.getName());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      fiefdoms1.setKingdom(true);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(1, fiefdoms1.getValue());
      assertEquals(".", fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(".", fiefdoms1.getName());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setMuslim((-3909), false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setMuslim(2, true);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setLoyalVassals(5, false);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.shaderColor = null;
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setViking(2, false);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertNull(floatArray0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setMuslim((-2668), false);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      boolean boolean0 = arrayList0.add("5fW4i");
      assertTrue(boolean0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      
      boolean boolean1 = arrayList0.add("5fW4i");
      assertTrue(boolean1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertTrue(boolean1 == boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "5fW4i", "5fW4i", 2, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      
      boolean boolean2 = fiefdoms0.loyalVassals.add((Vassals) null);
      assertTrue(boolean2);
      assertTrue(arrayList0.contains("5fW4i"));
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      fiefdoms0.setPersonalCastles(0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      
      fiefdoms0.loyalVassals = fiefdoms0.loyalVassals;
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(fiefdoms0.loyalVassals.isEmpty());
      assertEquals(1, fiefdoms0.loyalVassals.size());
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertNotNull(arrayList1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList1.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      
      Stream<String> stream0 = arrayList1.stream();
      assertNotNull(stream0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList1.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      
      boolean boolean3 = arrayList1.add("");
      assertTrue(boolean3);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList1.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList1.isEmpty());
      assertEquals(3, arrayList1.size());
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      
      arrayList0.trimToSize();
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      
      fiefdoms0.setInvaderType(arrayList1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList1.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList1.isEmpty());
      assertEquals(3, arrayList1.size());
      
      fiefdoms0.setRebelliousVassals(fiefdoms0.loyalVassals);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertNotNull(arrayList2);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList2.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList2, arrayList0);
      assertSame(arrayList2, arrayList1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList2.isEmpty());
      assertEquals(3, arrayList2.size());
      
      ArrayList<Player> arrayList3 = new ArrayList<Player>(2);
      assertNotNull(arrayList3);
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      
      fiefdoms0.setVassalsList(arrayList3);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      
      fiefdoms0.setFiefdomCastles(false);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getMagyar();
      assertNotNull(arrayList4);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertTrue(arrayList4.isEmpty());
      assertEquals(0, arrayList4.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      
      int int1 = fiefdoms0.getPeasants();
      assertEquals(0, int1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(int1 == int0);
      
      fiefdoms0.setRebelliousVassals(0, false);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setOwner("l#-xAv}O.Zif4g{");
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("l#-xAv}O.Zif4g{", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      
      byte[] byteArray0 = new byte[3];
      fiefdoms0.setPersonalCastles(true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)111;
      fiefdoms0.setMuslim((ArrayList<Intruders>) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setOwner("dPnwm=$P");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("dPnwm=$P", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setViking(9936, false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("dPnwm=$P", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setKingdom(false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("dPnwm=$P", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setLoyalVassals(9936, false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("dPnwm=$P", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      // Undeclared exception!
      try { 
        fiefdoms0.setMuslim((int) (byte)2, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.Fiefdoms", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setPeasants((-633));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-633), fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals((-633), int0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-633), fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertNotNull(fiefdoms1);
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      String string0 = fiefdoms1.getOwner();
      assertNull(string0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      fiefdoms1.setRebelliousVassals((-2632), true);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setLoyalVassals((-2401), true);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      assertNotNull(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      fiefdoms0.loyalVassals = arrayList0;
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(fiefdoms0.loyalVassals.isEmpty());
      assertEquals(0, fiefdoms0.loyalVassals.size());
      
      Vassals vassals0 = new Vassals((String) null, "ht{ktt<pnhk'pc");
      assertNotNull(vassals0);
      assertEquals("ht{ktt<pnhk'pc", vassals0.getFiefdom());
      assertNull(vassals0.getLocation());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      
      boolean boolean0 = arrayList0.add(vassals0);
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(vassals0));
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("ht{ktt<pnhk'pc", vassals0.getFiefdom());
      assertNull(vassals0.getLocation());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      
      fiefdoms0.buyPersonalCastles(915);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setConqueror((String) null);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setRebelliousVassals(3380, false);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setMagyar(3380, false);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      boolean boolean0 = arrayList0.add("5fW4i");
      assertTrue(boolean0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      boolean boolean1 = arrayList0.add("5fW4i");
      assertTrue(boolean1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean1 == boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "5fW4i", "5fW4i", 2, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getRebelliousVassals();
      assertNotNull(arrayList1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      boolean boolean2 = arrayList1.add((Vassals) null);
      assertTrue(boolean2);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      fiefdoms0.setPersonalCastles(0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      
      fiefdoms0.loyalVassals = arrayList1;
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, fiefdoms0.loyalVassals.size());
      assertFalse(fiefdoms0.loyalVassals.isEmpty());
      
      ArrayList<String> arrayList2 = fiefdoms0.getNeighbors();
      assertNotNull(arrayList2);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList2.contains("5fW4i"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList2, arrayList0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertFalse(arrayList2.isEmpty());
      assertEquals(2, arrayList2.size());
      
      Stream<String> stream0 = arrayList2.stream();
      assertNotNull(stream0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList2.contains("5fW4i"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList2, arrayList0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertFalse(arrayList2.isEmpty());
      assertEquals(2, arrayList2.size());
      
      boolean boolean3 = arrayList2.add("");
      assertTrue(boolean3);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList2.contains("5fW4i"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList2, arrayList0);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(3, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      
      arrayList0.trimToSize();
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList2);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      fiefdoms0.setInvaderType(arrayList2);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList2.contains("5fW4i"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList2, arrayList0);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(3, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      
      fiefdoms0.setRebelliousVassals(arrayList1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList2);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      
      ArrayList<String> arrayList3 = fiefdoms0.getInvaderType();
      assertNotNull(arrayList3);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList3.contains("5fW4i"));
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList3, arrayList0);
      assertSame(arrayList3, arrayList2);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(3, arrayList3.size());
      assertFalse(arrayList3.isEmpty());
      
      fiefdoms0.setLoyalVassals(arrayList1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList2);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      
      ArrayList<Player> arrayList4 = new ArrayList<Player>(1);
      assertNotNull(arrayList4);
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      
      fiefdoms0.setVassalsList(arrayList4);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList2);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList2);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertTrue(int1 == int0);
      
      fiefdoms0.setFiefdomCastles(false);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList2);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList5 = fiefdoms0.getMagyar();
      assertNotNull(arrayList5);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList2);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList5.size());
      assertTrue(arrayList5.isEmpty());
      
      int int2 = fiefdoms0.getPeasants();
      assertEquals(0, int2);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList2);
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      
      ArrayList<String> arrayList0 = knight0.getConversation();
      assertNotNull(arrayList0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      knight0.setVotes(arrayList0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      knight0.setName((String) null);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      
      String string0 = knight0.getLocation();
      assertEquals("Ile-De-France", string0);
      assertNotNull(string0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      
      Knight knight1 = new Knight();
      assertNotNull(knight1);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.equals((Object)knight0));
      
      ArrayList<String> arrayList1 = knight1.getFiefdoms();
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains(string0));
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      knight1.setRebellionCounter(0);
      assertNotSame(knight1, knight0);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.equals((Object)knight0));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList1, "viking", "", 0, true, arrayList1);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList1.contains(string0));
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      fiefdoms0.setPeasants(0);
      assertFalse(arrayList1.contains(string0));
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      fiefdoms0.setFiefdomCastles(1);
      assertFalse(arrayList1.contains(string0));
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      fiefdoms0.buyPersonalCastles((-3963));
      assertFalse(arrayList1.contains(string0));
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      fiefdoms0.setViking((-4570), true);
      assertFalse(arrayList1.contains(string0));
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertNotNull(byteArray0);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertFalse(arrayList1.contains(string0));
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      fiefdoms0.setPeasants(0);
      assertFalse(arrayList1.contains(string0));
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      fiefdoms0.setMagyar((ArrayList<Intruders>) null);
      assertFalse(arrayList1.contains(string0));
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getViking();
      assertNotNull(arrayList2);
      assertFalse(arrayList1.contains(string0));
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList1, arrayList0);
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      fiefdoms0.setShaderColor((float[]) null);
      assertFalse(arrayList1.contains(string0));
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertNull(arrayList3);
      assertFalse(arrayList1.contains(string0));
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setFiefdomCastles(false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMagyar(0, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setRebelliousVassals(0, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertEquals((-1), int1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setRebelliousVassals(3380, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      
      ArrayList<String> arrayList0 = knight0.getConversation();
      assertNotNull(arrayList0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "@_5DN-2u+?EXC]", "magyar", 746, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("@_5DN-2u+?EXC]"));
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(746, fiefdoms0.getValue());
      assertEquals("@_5DN-2u+?EXC]", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("@_5DN-2u+?EXC]"));
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(746, fiefdoms0.getValue());
      assertEquals("@_5DN-2u+?EXC]", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(746, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setMuslim(2, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setLoyalVassals((ArrayList<Vassals>) null);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setConqueror(".");
      assertEquals(".", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.buyPersonalCastles(1068);
      assertEquals(".", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      String string0 = fiefdoms0.getOwner();
      assertNull(string0);
      assertEquals(".", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertNull(arrayList0);
      assertEquals(".", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setKingdom(true);
      assertEquals(".", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setViking((ArrayList<Intruders>) null);
      assertEquals(".", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setMuslim((-1329), true);
      assertEquals(".", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "2P3gpeB`4J>H<@rl<J", (String) null, 1696, false, (ArrayList<String>) null);
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      
      fiefdoms0.setFiefdomCastles(false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      fiefdoms0.setPeasants(1696);
      assertEquals(1696, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      
      fiefdoms0.setViking(2921, false);
      assertEquals(1696, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      
      fiefdoms0.setPeasants(1696);
      assertEquals(1696, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      
      byte[] byteArray0 = new byte[0];
      fiefdoms0.selectioncolor = byteArray0;
      assertEquals(1696, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList0);
      assertEquals(1696, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(1696, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertNull(arrayList1);
      assertEquals(1696, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      
      fiefdoms0.setPersonalCastles(false);
      assertEquals(1696, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMuslim();
      assertNotNull(arrayList2);
      assertEquals(1696, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      
      Intruders intruders0 = new Intruders();
      assertNotNull(intruders0);
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      
      boolean boolean1 = arrayList2.add(intruders0);
      assertTrue(boolean1);
      assertTrue(arrayList2.contains(intruders0));
      assertEquals(1696, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertTrue(boolean1 == boolean0);
      
      fiefdoms0.setMuslim(arrayList2);
      assertTrue(arrayList2.contains(intruders0));
      assertEquals(1696, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      
      fiefdoms0.setLoyalVassals(5, false);
      assertEquals(1696, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals("2P3gpeB`4J>H<@rl<J", fiefdoms0.getName());
      assertEquals(1696, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, (String) null, (String) null, 0, false, arrayList0);
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertNotNull(arrayList1);
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      
      String string0 = knight0.getLocation();
      assertEquals("Ile-De-France", string0);
      assertNotNull(string0);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      
      ArrayList<Player> arrayList0 = knight0.getAllies();
      assertNotNull(arrayList0);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      String string1 = knight0.getName();
      assertNull(string1);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      
      String string2 = knight0.getPassword();
      assertNull(string2);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      
      ArrayList<String> arrayList1 = knight0.conversation;
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains(string0));
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      fiefdoms0.setInvaderType(arrayList1);
      assertFalse(arrayList1.contains(string0));
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      boolean boolean0 = arrayList1.add("");
      assertTrue(boolean0);
      assertFalse(arrayList1.contains(string0));
      assertTrue(arrayList1.contains(""));
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      
      Knight knight1 = new Knight("You cannot buy more than a total of ", "You cannot buy more than a total of ", "You cannot buy more than a total of ");
      assertNotNull(knight1);
      assertFalse(knight1.getDead());
      assertEquals("You cannot buy more than a total of ", knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("You cannot buy more than a total of ", knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getKills());
      assertEquals("You cannot buy more than a total of ", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertFalse(knight1.isDead());
      assertFalse(knight1.equals((Object)knight0));
      
      ArrayList<Vassals> arrayList2 = knight1.getMovingVassals();
      assertNotNull(arrayList2);
      assertNotSame(knight1, knight0);
      assertFalse(knight1.getDead());
      assertEquals("You cannot buy more than a total of ", knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("You cannot buy more than a total of ", knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getKills());
      assertEquals("You cannot buy more than a total of ", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertFalse(knight1.isDead());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertFalse(knight1.equals((Object)knight0));
      
      ListIterator<Vassals> listIterator0 = arrayList2.listIterator();
      assertNotNull(listIterator0);
      assertNotSame(knight1, knight0);
      assertFalse(knight1.getDead());
      assertEquals("You cannot buy more than a total of ", knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("You cannot buy more than a total of ", knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getKills());
      assertEquals("You cannot buy more than a total of ", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertFalse(knight1.isDead());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertFalse(listIterator0.hasPrevious());
      assertFalse(listIterator0.hasNext());
      assertFalse(knight1.equals((Object)knight0));
      
      arrayList2.ensureCapacity((-468));
      assertNotSame(knight1, knight0);
      assertFalse(knight1.getDead());
      assertEquals("You cannot buy more than a total of ", knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("You cannot buy more than a total of ", knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getKills());
      assertEquals("You cannot buy more than a total of ", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertFalse(knight1.isDead());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertFalse(knight1.equals((Object)knight0));
      
      fiefdoms0.setLoyalVassals(arrayList2);
      assertNotSame(knight1, knight0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertFalse(knight1.getDead());
      assertEquals("You cannot buy more than a total of ", knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("You cannot buy more than a total of ", knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getKills());
      assertEquals("You cannot buy more than a total of ", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertFalse(knight1.isDead());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertFalse(knight1.equals((Object)knight0));
      
      fiefdoms0.setName("u");
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("u", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Player> arrayList3 = new ArrayList<Player>();
      assertNotNull(arrayList3);
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertTrue(arrayList3.equals((Object)arrayList0));
      
      boolean boolean1 = arrayList3.retainAll(arrayList1);
      assertFalse(boolean1);
      assertFalse(arrayList1.contains(string0));
      assertTrue(arrayList1.contains(""));
      assertNotSame(knight0, knight1);
      assertNotSame(arrayList3, arrayList0);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertFalse(boolean1 == boolean0);
      assertFalse(knight0.equals((Object)knight1));
      assertTrue(arrayList3.equals((Object)arrayList0));
      
      boolean boolean2 = arrayList3.add((Player) knight1);
      assertTrue(boolean2);
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList3, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals("You cannot buy more than a total of ", knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("You cannot buy more than a total of ", knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getKills());
      assertEquals("You cannot buy more than a total of ", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertFalse(knight1.isDead());
      assertFalse(arrayList3.isEmpty());
      assertEquals(1, arrayList3.size());
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(knight1.equals((Object)knight0));
      assertFalse(arrayList3.equals((Object)arrayList0));
      
      fiefdoms0.setVassalsList(arrayList3);
      assertNotSame(arrayList3, arrayList0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("u", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertFalse(arrayList3.isEmpty());
      assertEquals(1, arrayList3.size());
      assertFalse(arrayList3.equals((Object)arrayList0));
      
      fiefdoms0.setConqueror("You cannot have more than a total of ");
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("u", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      boolean boolean3 = arrayList3.add((Player) knight1);
      assertTrue(boolean3);
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList3, arrayList0);
      assertFalse(knight1.getDead());
      assertEquals("You cannot buy more than a total of ", knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("You cannot buy more than a total of ", knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getKills());
      assertEquals("You cannot buy more than a total of ", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertFalse(knight1.isDead());
      assertFalse(arrayList3.isEmpty());
      assertEquals(2, arrayList3.size());
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(knight1.equals((Object)knight0));
      assertFalse(arrayList3.equals((Object)arrayList0));
      
      fiefdoms0.setLoyalVassals(arrayList2);
      assertNotSame(knight1, knight0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("u", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertFalse(knight1.getDead());
      assertEquals("You cannot buy more than a total of ", knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("You cannot buy more than a total of ", knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getKills());
      assertEquals("You cannot buy more than a total of ", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertFalse(knight1.isDead());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertFalse(knight1.equals((Object)knight0));
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals("u", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setKingdom(false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals("u", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setPeasants(0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals("u", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<String> arrayList4 = fiefdoms0.getNeighbors();
      assertNull(arrayList4);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals("u", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setLoyalVassals(552, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals("u", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setMagyar(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setOwner("p");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("p", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      String string0 = fiefdoms0.getOwner();
      assertNull(string0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      float[] floatArray0 = new float[0];
      fiefdoms0.shaderColor = floatArray0;
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMuslim(1, false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setConqueror("}t");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.loyalVassals = null;
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertNotNull(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      fiefdoms0.setMuslim(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getRebelliousVassals();
      assertNotNull(arrayList1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      byte[] byteArray0 = new byte[0];
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setOwner((String) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getViking();
      assertNotNull(arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.equals((Object)arrayList0));
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMuslim();
      assertNotNull(arrayList3);
      assertNotSame(arrayList3, arrayList2);
      assertSame(arrayList3, arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.equals((Object)arrayList2));
      
      ArrayList<String> arrayList4 = fiefdoms0.getNeighbors();
      assertNull(arrayList4);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setOwner("}0M3dNx_}N#4rDC|");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals("}0M3dNx_}N#4rDC|", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList5 = fiefdoms0.getMuslim();
      assertNotNull(arrayList5);
      assertNotSame(arrayList5, arrayList2);
      assertSame(arrayList5, arrayList3);
      assertSame(arrayList5, arrayList0);
      assertTrue(arrayList5.isEmpty());
      assertEquals(0, arrayList5.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals("}0M3dNx_}N#4rDC|", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList5.equals((Object)arrayList2));
      
      byte[] byteArray1 = fiefdoms0.getSelectioncolor();
      assertNotNull(byteArray1);
      assertEquals(0, byteArray1.length);
      assertArrayEquals(new byte[] {}, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}t", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals("}0M3dNx_}N#4rDC|", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setLoyalVassals((-2527), false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setName("qU+y=A");
      assertEquals("qU+y=A", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      boolean boolean0 = arrayList0.add("5fW4i");
      assertTrue(boolean0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      boolean boolean1 = arrayList0.add("5fW4i");
      assertTrue(boolean1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean1 == boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "5fW4i", "5fW4i", 2793, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2793, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      assertNotNull(arrayList1);
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      boolean boolean2 = arrayList1.add((Player) null);
      assertTrue(boolean2);
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      boolean boolean3 = arrayList1.add((Player) null);
      assertTrue(boolean3);
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      
      fiefdoms0.setVassalsList(arrayList1);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2793, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      
      String string0 = fiefdoms0.getName();
      assertEquals("5fW4i", string0);
      assertNotNull(string0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2793, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      
      fiefdoms0.buyFiefdomCastles(398);
      assertTrue(arrayList0.contains("5fW4i"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2793, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(398, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertNotNull(arrayList2);
      assertTrue(arrayList0.contains("5fW4i"));
      assertTrue(arrayList2.contains("5fW4i"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList2, arrayList0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2793, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(398, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertEquals(2, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList2);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2793, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(398, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMuslim();
      assertNotNull(arrayList3);
      assertTrue(arrayList0.contains("5fW4i"));
      assertSame(arrayList0, arrayList2);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2793, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(398, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      
      Intruders intruders0 = new Intruders("H)W'", "X5CqKIw$j{j5");
      assertNotNull(intruders0);
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      
      boolean boolean4 = arrayList3.add(intruders0);
      assertTrue(boolean4);
      assertTrue(arrayList0.contains("5fW4i"));
      assertFalse(arrayList0.contains("X5CqKIw$j{j5"));
      assertTrue(arrayList3.contains(intruders0));
      assertSame(arrayList0, arrayList2);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2793, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(398, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertFalse(arrayList3.isEmpty());
      assertEquals(1, arrayList3.size());
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      
      fiefdoms0.setMagyar(arrayList3);
      assertTrue(arrayList0.contains("5fW4i"));
      assertFalse(arrayList0.contains("X5CqKIw$j{j5"));
      assertTrue(arrayList3.contains(intruders0));
      assertSame(arrayList0, arrayList2);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2793, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(398, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertFalse(arrayList3.isEmpty());
      assertEquals(1, arrayList3.size());
      
      fiefdoms0.buyFiefdomCastles(2793);
      assertTrue(arrayList0.contains("5fW4i"));
      assertFalse(arrayList0.contains("X5CqKIw$j{j5"));
      assertSame(arrayList0, arrayList2);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2793, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(398, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertNotNull(fiefdoms1);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      String string1 = fiefdoms1.getName();
      assertNull(string1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getMagyar();
      assertNotNull(arrayList4);
      assertTrue(arrayList0.contains("5fW4i"));
      assertFalse(arrayList0.contains("X5CqKIw$j{j5"));
      assertTrue(arrayList4.contains(intruders0));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList4, arrayList3);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList4.size());
      assertFalse(arrayList4.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2793, fiefdoms0.getValue());
      assertEquals("5fW4i", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(398, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5fW4i", fiefdoms0.getName());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      
      ArrayList<Vassals> arrayList0 = knight0.getMovingVassals();
      assertNotNull(arrayList0);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setLoyalVassals(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertNull(arrayList1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Knight knight0 = new Knight("Invalid number", "`!f", "`!f");
      assertNotNull(knight0);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      
      ArrayList<String> arrayList0 = knight0.getConversation();
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("Invalid number"));
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      knight0.setDead(false);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "`!f", "Invalid origin fiefdom", (-4562), false, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("Invalid number"));
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.buyFiefdomCastles((-2574));
      assertFalse(arrayList0.contains("Invalid number"));
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getRebelliousVassals();
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("Invalid number"));
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      Comparator<Vassals> comparator0 = (Comparator<Vassals>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      assertFalse(arrayList0.contains("Invalid number"));
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      boolean boolean0 = arrayList0.containsAll(arrayList1);
      assertTrue(boolean0);
      assertFalse(arrayList0.contains("Invalid number"));
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("Invalid number"));
      assertFalse(arrayList2.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList2, arrayList0);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      fiefdoms0.setViking(2195, true);
      assertFalse(arrayList0.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<String> arrayList3 = fiefdoms0.getNeighbors();
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains("Invalid number"));
      assertFalse(arrayList3.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList3, arrayList2);
      assertSame(arrayList3, arrayList0);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getViking();
      assertNotNull(arrayList4);
      assertFalse(arrayList0.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList3);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2195, arrayList4.size());
      assertFalse(arrayList4.isEmpty());
      
      knight0.setWounds(0);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      
      fiefdoms0.setMuslim(3, true);
      assertFalse(arrayList0.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList3);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles((-1521));
      assertFalse(arrayList0.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList3);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1521), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setMuslim(2, false);
      assertFalse(arrayList0.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList3);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1521), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Player> arrayList5 = fiefdoms0.getVassalsList();
      assertNull(arrayList5);
      assertFalse(arrayList0.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList3);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1521), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Invalid origin fiefdom", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setOwner("`!f");
      assertFalse(arrayList0.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList3);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1521), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("`!f", fiefdoms0.getOwner());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList6 = fiefdoms0.getMagyar();
      assertNotNull(arrayList6);
      assertFalse(arrayList0.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList3);
      assertNotSame(arrayList6, arrayList4);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, arrayList6.size());
      assertTrue(arrayList6.isEmpty());
      assertEquals((-1521), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("`!f", fiefdoms0.getOwner());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList6.equals((Object)arrayList4));
      
      ArrayList<String> arrayList7 = fiefdoms0.getInvaderType();
      assertNotNull(arrayList7);
      assertFalse(arrayList0.contains("Invalid number"));
      assertFalse(arrayList7.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList7);
      assertSame(arrayList7, arrayList3);
      assertSame(arrayList7, arrayList0);
      assertSame(arrayList7, arrayList2);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1521), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("`!f", fiefdoms0.getOwner());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList7.isEmpty());
      assertEquals(0, arrayList7.size());
      
      ArrayList<Intruders> arrayList8 = fiefdoms0.getViking();
      assertNotNull(arrayList8);
      assertFalse(arrayList0.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList7);
      assertSame(arrayList8, arrayList4);
      assertNotSame(arrayList8, arrayList6);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1521), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("`!f", fiefdoms0.getOwner());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList8.isEmpty());
      assertEquals(2195, arrayList8.size());
      assertFalse(arrayList8.equals((Object)arrayList6));
      
      ArrayList<String> arrayList9 = fiefdoms0.getNeighbors();
      assertNotNull(arrayList9);
      assertFalse(arrayList0.contains("Invalid number"));
      assertFalse(arrayList9.contains("Invalid number"));
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList9);
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList7);
      assertSame(arrayList9, arrayList7);
      assertSame(arrayList9, arrayList3);
      assertSame(arrayList9, arrayList0);
      assertSame(arrayList9, arrayList2);
      assertEquals("`!f", knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("`!f", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Invalid number", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1521), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("`!f", fiefdoms0.getOwner());
      assertEquals((-4562), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("`!f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList9.size());
      assertTrue(arrayList9.isEmpty());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Knight knight0 = new Knight("#8(S6l{", "w:da1kob}b2w<", "muslim");
      assertNotNull(knight0);
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      
      ArrayList<String> arrayList1 = knight0.conversation;
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains("#8(S6l{"));
      assertNotSame(arrayList1, arrayList0);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      ArrayList<Vassals> arrayList2 = new ArrayList<Vassals>();
      assertNotNull(arrayList2);
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      ArrayList<Retainers> arrayList3 = knight0.getRetainers();
      assertNotNull(arrayList3);
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      
      boolean boolean0 = arrayList2.removeAll(arrayList3);
      assertFalse(boolean0);
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      
      knight0.setMovingVassals(arrayList2);
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "w:da1kob}b2w<", "w:da1kob}b2w<", 0, true, arrayList1);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("#8(S6l{"));
      assertFalse(arrayList1.contains("#8(S6l{"));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      fiefdoms0.buyPersonalCastles((-3));
      assertFalse(arrayList0.contains("#8(S6l{"));
      assertFalse(arrayList1.contains("#8(S6l{"));
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      ListIterator<Vassals> listIterator0 = arrayList2.listIterator();
      assertNotNull(listIterator0);
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(listIterator0.hasPrevious());
      assertFalse(listIterator0.hasNext());
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getViking();
      assertNotNull(arrayList4);
      assertFalse(arrayList0.contains("#8(S6l{"));
      assertFalse(arrayList1.contains("#8(S6l{"));
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList4.isEmpty());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      fiefdoms0.setRebelliousVassals((-3), false);
      assertFalse(arrayList0.contains("#8(S6l{"));
      assertFalse(arrayList1.contains("#8(S6l{"));
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      String string0 = fiefdoms0.getConqueror();
      assertNull(string0);
      assertFalse(arrayList0.contains("#8(S6l{"));
      assertFalse(arrayList1.contains("#8(S6l{"));
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertFalse(arrayList0.contains("#8(S6l{"));
      assertFalse(arrayList1.contains("#8(S6l{"));
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      fiefdoms0.setPersonalCastles(false);
      assertFalse(arrayList0.contains("#8(S6l{"));
      assertFalse(arrayList1.contains("#8(S6l{"));
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      fiefdoms0.setViking(0, false);
      assertFalse(arrayList0.contains("#8(S6l{"));
      assertFalse(arrayList1.contains("#8(S6l{"));
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      ArrayList<Player> arrayList5 = fiefdoms0.getVassalsList();
      assertNull(arrayList5);
      assertFalse(arrayList0.contains("#8(S6l{"));
      assertFalse(arrayList1.contains("#8(S6l{"));
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("#8(S6l{", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("w:da1kob}b2w<", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("w:da1kob}b2w<", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.buyFiefdomCastles((-3961));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setPersonalCastles(false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertNotNull(floatArray0);
      assertEquals(2, floatArray0.length);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertNull(arrayList1);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setViking((-308), true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setViking(1579, true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<String> arrayList2 = fiefdoms0.getNeighbors();
      assertNull(arrayList2);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertNotNull(arrayList3);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte) (-55);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)79;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertEquals(4, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)40, (byte) (-55), (byte) (-1), (byte)79}, byteArray0);
      
      byte[] byteArray1 = fiefdoms0.getSelectioncolor();
      assertNotNull(byteArray1);
      assertEquals(3, byteArray1.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray1);
      assertNotSame(byteArray1, byteArray0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(byteArray1.equals((Object)byteArray0));
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getMuslim();
      assertNotNull(arrayList4);
      assertNotSame(arrayList4, arrayList3);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertTrue(arrayList4.equals((Object)arrayList3));
      
      fiefdoms0.setViking(121, false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList5 = fiefdoms0.getMuslim();
      assertNotNull(arrayList5);
      assertNotSame(arrayList5, arrayList3);
      assertSame(arrayList5, arrayList4);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList5.size());
      assertTrue(arrayList5.isEmpty());
      assertTrue(arrayList5.equals((Object)arrayList3));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", "", 178, false, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(178, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getRebelliousVassals();
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(178, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Player> arrayList0 = fiefdoms0.getVassalsList();
      assertNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setRebelliousVassals((-1045), false);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setMuslim(1568, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertNotNull(fiefdoms1);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getValue());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      ArrayList<String> arrayList0 = fiefdoms1.getInvaderType();
      assertNull(arrayList0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getValue());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      Fiefdoms fiefdoms2 = new Fiefdoms();
      assertNotNull(fiefdoms2);
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getConqueror());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getValue());
      assertFalse(fiefdoms2.isKingdom());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      
      String string0 = fiefdoms2.getName();
      assertNull(string0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getConqueror());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getValue());
      assertFalse(fiefdoms2.isKingdom());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      
      String string1 = fiefdoms2.getOwner();
      assertNull(string1);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getConqueror());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getValue());
      assertFalse(fiefdoms2.isKingdom());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      
      ArrayList<String> arrayList1 = knight0.getConversation();
      assertNotNull(arrayList1);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      Fiefdoms fiefdoms3 = new Fiefdoms(arrayList1, "", "magyar", 0, true, (ArrayList<String>) null);
      assertNotNull(fiefdoms3);
      assertFalse(arrayList1.contains(""));
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertTrue(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getPeasants());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals("", fiefdoms3.getName());
      assertEquals("magyar", fiefdoms3.getOwner());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getValue());
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      
      ArrayList<String> arrayList2 = fiefdoms1.getNeighbors();
      assertNull(arrayList2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms1, fiefdoms3);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getValue());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms3));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
  }
}
