/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 11:51:36 GMT 2019
 */

package module;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.sql.SQLTransactionRollbackException;
import module.Module;
import module.ModuleUnloadException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ModuleUnloadException_ESTest extends ModuleUnloadException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ModuleUnloadException moduleUnloadException0 = new ModuleUnloadException("state.NetworkData", (Throwable) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ModuleUnloadException moduleUnloadException0 = new ModuleUnloadException((Module) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException();
      ModuleUnloadException moduleUnloadException0 = new ModuleUnloadException((Module) null, "", sQLTransactionRollbackException0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Module module0 = mock(Module.class, new ViolatedAssumptionAnswer());
      doReturn("4").when(module0).toString();
      ModuleUnloadException moduleUnloadException0 = new ModuleUnloadException(module0, "4");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ModuleUnloadException moduleUnloadException0 = new ModuleUnloadException((Throwable) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Module module0 = mock(Module.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(module0).toString();
      ModuleUnloadException moduleUnloadException0 = new ModuleUnloadException(module0, (Throwable) null);
  }
}
