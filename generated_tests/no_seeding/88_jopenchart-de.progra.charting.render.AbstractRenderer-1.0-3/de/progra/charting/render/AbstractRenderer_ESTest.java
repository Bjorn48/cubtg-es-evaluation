/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 16:20:03 GMT 2019
 */

package de.progra.charting.render;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.DefaultChart;
import de.progra.charting.Title;
import de.progra.charting.model.DefaultChartDataModel;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractRenderer_ESTest extends AbstractRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Title title0 = new Title("7%]!u8ZuD}");
      Rectangle rectangle0 = new Rectangle(599, 599);
      Dimension dimension0 = title0.getPreferredSize();
      rectangle0.setSize(dimension0);
      title0.setBounds(rectangle0);
      // Undeclared exception!
      try { 
        title0.render((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Title title0 = new Title("de.progra.charting.render.AbstractRenderer");
      BufferedImage bufferedImage0 = new BufferedImage(4140, 213, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      title0.render(graphics2D0);
      assertEquals("de.progra.charting.render.AbstractRenderer", title0.getText());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Title title0 = new Title("de.progra.charting.model.EditableChartDataModel");
      Rectangle rectangle0 = new Rectangle(599, 599);
      rectangle0.setFrame((double) 0, (double) 2, (double) 599, (-19.487296268027947));
      title0.setBounds(rectangle0);
      // Undeclared exception!
      try { 
        title0.render((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "");
      Rectangle rectangle0 = defaultChart0.getBounds();
      assertNull(rectangle0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Title title0 = new Title("de.progra.charting.model.EditableChartDataModel");
      Rectangle rectangle0 = new Rectangle(599, 599);
      rectangle0.setFrame((double) 0, (double) 2, (double) 599, (-19.487296268027947));
      title0.setBounds(rectangle0);
      Rectangle rectangle1 = title0.getBounds();
      assertEquals((-20), rectangle1.height);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Title title0 = new Title("de.progra.charting.model.EditableChartDataModel");
      Rectangle rectangle0 = new Rectangle();
      title0.setBounds(rectangle0);
      Rectangle rectangle1 = title0.getBounds();
      assertEquals(0, rectangle1.height);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Title title0 = new Title("de.progra.charting.model.EditableChartDataModel");
      Rectangle rectangle0 = new Rectangle(599, 599);
      title0.setBounds(rectangle0);
      rectangle0.setBounds((-1107), (-2144184901), 599, 599);
      Rectangle rectangle1 = title0.getBounds();
      assertEquals(599, rectangle1.height);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Title title0 = new Title();
      // Undeclared exception!
      try { 
        title0.paintDefault((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.Title", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Title title0 = new Title("de.progra.charting.model.EditableChartDataModel");
      Rectangle rectangle0 = title0.getBounds();
      assertFalse(rectangle0.isEmpty());
      assertEquals(1.0737418235E9, rectangle0.getCenterX(), 0.01);
      assertEquals(1.0737418235E9, rectangle0.getCenterY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Title title0 = new Title();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.width = 701;
      title0.setBounds(defaultCaret0);
      // Undeclared exception!
      try { 
        title0.render((Graphics2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (701) and height (0) must be non-zero
         //
         verifyException("java.awt.image.ReplicateScaleFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Title title0 = new Title("de.progra.charting.model.EditableChartDataModel");
      Rectangle rectangle0 = new Rectangle();
      title0.setBounds(rectangle0);
      // Undeclared exception!
      try { 
        title0.render((Graphics2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (0) must be non-zero
         //
         verifyException("java.awt.image.ReplicateScaleFilter", e);
      }
  }
}
