/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 17:30:50 GMT 2019
 */

package org.dom4j.tree;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.NoSuchElementException;
import org.dom4j.tree.LazyList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LazyList_ESTest extends LazyList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LazyList<Object> lazyList0 = new LazyList<Object>();
      lazyList0.size = 3608;
      lazyList0.parallelStream();
      // Undeclared exception!
      try { 
        lazyList0.remove(3574);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.LazyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LazyList<Object> lazyList0 = new LazyList<Object>();
      lazyList0.size = 3608;
      Integer integer0 = new Integer(3608);
      lazyList0.lastIndexOf(integer0);
      lazyList0.createIndexedList();
      lazyList0.createIndexedList();
      lazyList0.getEntryHeader(3608);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LazyList<Object> lazyList0 = new LazyList<Object>();
      // Undeclared exception!
      try { 
        lazyList0.removeRange(806, 806);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // FromIndex: 806, ToIndex: 806, Size: 0
         //
         verifyException("org.dom4j.tree.LazyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LazyList<Object> lazyList0 = new LazyList<Object>();
      LazyList<Object> lazyList1 = new LazyList<Object>((LazyList.Entry<Object>) null);
      lazyList0.addAll((Collection<?>) lazyList1);
      LazyList<Object> lazyList2 = new LazyList<Object>((LazyList.Entry<Object>) null);
      LazyList.LazyListIterator lazyList_LazyListIterator0 = null;
      try {
        lazyList_LazyListIterator0 = lazyList2.new LazyListIterator((-978));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -978, Size: 0
         //
         verifyException("org.dom4j.tree.LazyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LazyList<Object> lazyList0 = new LazyList<Object>();
      lazyList0.add((Object) lazyList0);
      int int0 = 1;
      LazyList.LazyListIterator lazyList_LazyListIterator0 = lazyList0.new LazyListIterator(1);
      // Undeclared exception!
      try { 
        lazyList_LazyListIterator0.set(lazyList0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.LazyList$LazyListIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LazyList<Object> lazyList0 = new LazyList<Object>();
      Integer integer0 = new Integer(0);
      integer0.toString();
      LazyList<Integer> lazyList1 = new LazyList<Integer>();
      Integer integer1 = new Integer((-3639));
      integer1.toString();
      // Undeclared exception!
      try { 
        lazyList1.add(1, integer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("org.dom4j.tree.LazyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LazyList<Object> lazyList0 = new LazyList<Object>();
      LazyList.LazyListIterator lazyList_LazyListIterator0 = lazyList0.new LazyListIterator(0);
      // Undeclared exception!
      try { 
        lazyList_LazyListIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.tree.LazyList$LazyListIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LazyList<Object> lazyList0 = new LazyList<Object>();
      lazyList0.add((Object) lazyList0);
      LazyList<Object> lazyList1 = lazyList0.clone();
      LazyList.Entry<Object> lazyList_Entry0 = lazyList1.header;
      LazyList.Entry<Object> lazyList_Entry1 = lazyList0.header;
      lazyList0.removeRange(0, 0);
      LazyList<String> lazyList2 = new LazyList<String>();
      lazyList0.getEntry(0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LazyList<Object> lazyList0 = new LazyList<Object>();
      LazyList<Object> lazyList1 = lazyList0.clone();
      // Undeclared exception!
      try { 
        lazyList1.remove(2883);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2,883, Size: 0
         //
         verifyException("org.dom4j.tree.LazyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LazyList<Object> lazyList0 = new LazyList<Object>();
      lazyList0.size = 3608;
      lazyList0.createIndexedList();
  }
}
