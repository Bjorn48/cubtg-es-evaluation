/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 20:44:56 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.LinearAxisScale;
import jahuwaldt.plot.PlotAxis;
import jahuwaldt.plot.PlotRun;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotXAxis;
import jahuwaldt.plot.PlotYAxis;
import jahuwaldt.plot.RTriangle2Symbol;
import jahuwaldt.plot.SimplePlotXY;
import jahuwaldt.plot.Triangle3Symbol;
import jahuwaldt.plot.XSymbol;
import java.awt.Graphics;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.Stack;
import java.util.TreeSet;
import javax.swing.Box;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimplePlotXY_ESTest extends SimplePlotXY_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      XSymbol xSymbol0 = new XSymbol();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "rVWAIILR]@,sZU}h", "Inconsistant array sizes.", "Inconsistant array sizes.", numberFormat0, (NumberFormat) null, xSymbol0);
      assertEquals("rVWAIILR]@,sZU}h", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      double[] doubleArray0 = new double[5];
      double[] doubleArray1 = new double[5];
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "%IIuK9Bi];@", "Preview", "1I?On^s7f", numberFormat0, numberFormat0);
      assertEquals("%IIuK9Bi];@", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[5];
      Locale locale0 = new Locale("", "", "");
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "", "", "", numberFormat0, numberFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "", "", "", (NumberFormat) null, (NumberFormat) null);
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertEquals(2, plotAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("Lj]9]@p=:6)Ez2.", decimalFormatSymbols0);
      PlotYAxis plotYAxis0 = new PlotYAxis("Lj]9]@p=:6)Ez2.", linearAxisScale0, decimalFormat0, (-1916));
      simplePlotXY0.setVerticalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertEquals(2, PlotAxis.kMajorGrid);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      String string0 = simplePlotXY0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      simplePlotXY0.setTitle("");
      String string0 = simplePlotXY0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY((PlotRunList) null, "", "zJQqc!1)D", "", decimalFormat0, decimalFormat0);
      simplePlotXY0.getRuns();
      assertEquals("", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Stack<PlotXAxis> stack0 = new Stack<PlotXAxis>();
      PlotRunList plotRunList0 = new PlotRunList(stack0);
      Locale locale0 = Locale.FRENCH;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(plotRunList0, "n o;q $DBZ}S3^|", "n o;q $DBZ}S3^|", "]1NTmlt&O", numberFormat0, numberFormat0);
      PlotRun plotRun0 = new PlotRun();
      plotRunList0.add((Object) plotRun0);
      simplePlotXY0.getRuns();
      assertEquals("n o;q $DBZ}S3^|", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertNull(plotAxis0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      PlotRunList plotRunList0 = new PlotRunList(treeSet0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(plotRunList0, (String) null, "_\"L*i~", "", numberFormat0, numberFormat0);
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.aUB = 905.61132533;
      simplePlotXY0.setHorizontalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertEquals(1, plotAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      // Undeclared exception!
      try { 
        simplePlotXY0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      DecimalFormat decimalFormat0 = new DecimalFormat("[aYu3sflh", decimalFormatSymbols0);
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY((double[]) null, (double[]) null, "[aYu3sflh", "[aYu3sflh", "[aYu3sflh", decimalFormat0, decimalFormat0, triangle3Symbol0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      double[] doubleArray0 = new double[18];
      double[] doubleArray1 = new double[0];
      RTriangle2Symbol rTriangle2Symbol0 = new RTriangle2Symbol();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "\nFor more information please see the APBSmem manual.", "\nFor more information please see the APBSmem manual.", "\nFor more information please see the APBSmem manual.", decimalFormat0, decimalFormat0, rTriangle2Symbol0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY((double[]) null, (double[]) null, "meA", "meA", "meA", decimalFormat0, decimalFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      double[] doubleArray0 = new double[18];
      Box box0 = new Box(0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, (String) null, "APBSmem v", "ACt5c.", decimalFormat0, decimalFormat0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        simplePlotXY0.draw((Graphics) null, box0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      PlotRunList plotRunList0 = new PlotRunList(treeSet0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(plotRunList0, (String) null, "_\"L*i~", "", numberFormat0, numberFormat0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertEquals("_\"L*i~", plotAxis0.getLabel());
      assertEquals(2, plotAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertNull(plotAxis0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      Box box0 = Box.createVerticalBox();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY((PlotRunList) null, "Inconsistant array sizes.", "Inconsistant array sizes.", "Inconsistant array sizes.", decimalFormat0, decimalFormat0);
      // Undeclared exception!
      try { 
        simplePlotXY0.draw((Graphics) null, box0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotRunList plotRunList0 = simplePlotXY0.getRuns();
      assertEquals(0, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(plotRunList0, "Inconsistant array sizes.", "e1D(0", "", numberFormat0, numberFormat0);
      SimplePlotXY simplePlotXY1 = (SimplePlotXY)simplePlotXY0.clone();
      assertNotSame(simplePlotXY1, simplePlotXY0);
      assertEquals("Inconsistant array sizes.", simplePlotXY1.getTitle());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "0dIX1Cj|Hr", (String) null, "", numberFormat0, numberFormat0);
      String string0 = simplePlotXY0.getTitle();
      assertEquals("0dIX1Cj|Hr", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "0dIX1Cj|Hr", (String) null, "", numberFormat0, numberFormat0);
      PlotRun[] plotRunArray0 = new PlotRun[8];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      simplePlotXY0.setRuns(plotRunList0);
      assertEquals("0dIX1Cj|Hr", simplePlotXY0.getTitle());
  }
}
