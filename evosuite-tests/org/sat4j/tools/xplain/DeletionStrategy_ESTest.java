/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 07:07:29 GMT 2019
 */

package org.sat4j.tools.xplain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sat4j.LightFactory;
import org.sat4j.core.VecInt;
import org.sat4j.minisat.constraints.CardinalityDataStructureYanMax;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.IVecInt;
import org.sat4j.tools.AbstractMinimalModel;
import org.sat4j.tools.GateTranslator;
import org.sat4j.tools.ManyCore;
import org.sat4j.tools.OptToSatAdapter;
import org.sat4j.tools.StatisticsSolver;
import org.sat4j.tools.xplain.DeletionStrategy;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeletionStrategy_ESTest extends DeletionStrategy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DeletionStrategy deletionStrategy0 = new DeletionStrategy();
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(gateTranslator0);
      HashMap<Integer, CardinalityDataStructureYanMax> hashMap0 = new HashMap<Integer, CardinalityDataStructureYanMax>(2946, 638.35F);
      // Undeclared exception!
      try { 
        deletionStrategy0.explain(gateTranslator0, hashMap0, iVecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.xplain.DeletionStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DeletionStrategy deletionStrategy0 = new DeletionStrategy();
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      VecInt vecInt0 = new VecInt();
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      // Undeclared exception!
      try { 
        deletionStrategy0.explain(statisticsSolver0, hashMap0, vecInt0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not implemented yet!
         //
         verifyException("org.sat4j.tools.StatisticsSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DeletionStrategy deletionStrategy0 = new DeletionStrategy();
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      VecInt vecInt0 = new VecInt();
      vecInt0.pop();
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      // Undeclared exception!
      try { 
        deletionStrategy0.explain(statisticsSolver0, hashMap0, vecInt0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.VecInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DeletionStrategy deletionStrategy0 = new DeletionStrategy();
      VecInt vecInt0 = new VecInt();
      OptToSatAdapter[] optToSatAdapterArray0 = new OptToSatAdapter[0];
      ManyCore<OptToSatAdapter> manyCore0 = new ManyCore<OptToSatAdapter>(true, optToSatAdapterArray0);
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      // Undeclared exception!
      try { 
        deletionStrategy0.explain(manyCore0, hashMap0, vecInt0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DeletionStrategy deletionStrategy0 = new DeletionStrategy();
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      VecInt vecInt0 = new VecInt();
      vecInt0.shrinkTo(97);
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      // Undeclared exception!
      try { 
        deletionStrategy0.explain(statisticsSolver0, hashMap0, vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DeletionStrategy deletionStrategy0 = new DeletionStrategy();
      String string0 = deletionStrategy0.toString();
      assertEquals("Deletion based minimization strategy", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DeletionStrategy deletionStrategy0 = new DeletionStrategy();
      deletionStrategy0.cancelExplanationComputation();
      assertEquals("Deletion based minimization strategy", deletionStrategy0.toString());
  }
}
