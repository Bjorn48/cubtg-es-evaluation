* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.core.Vec
* Starting Client-0
* Connecting to master process on port 16730
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.core.Vec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1334
* Using seed 1550535650784
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 418 / 1334
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.6724137931034483
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5841121495327103
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9473684210526315
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.8947368421052632
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 295
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.7758620689655172
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7157894736842105
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.727803738317757
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5263157894736842
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7157894736842105
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 382
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 475
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.867816091954023
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8315789473684211
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.7897196261682243
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5789473684210527
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8105263157894737
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 573
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9425287356321839
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8736842105263158
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9252336448598131
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.631578947368421
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8315789473684211
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 673
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9052631578947369
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.631578947368421
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 768
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9157894736842105
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9497663551401869
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.631578947368421
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 870
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9509345794392523
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 896
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9509345794392523
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6842105263157895
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* Search finished after 123s and 8 generations, 10978 statements, best individual has fitness: 83.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9509345794392523
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6842105263157895
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* Minimizing test suite
[MASTER] 01:24:14.028 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 174
* Number of covered goals: 167
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 95
* Number of covered goals: 88
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 856
* Number of covered goals: 814
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 68%
* Total number of goals: 38
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 95
* Number of covered goals: 80
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9509345794392523
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6842105263157895
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* Generated 138 tests with total length 2258
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 01:25:01.880 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7407166666666667% of time used, but only 15/138 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 14%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9509345794392523
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6842105263157895
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* Compiling and checking tests
[MASTER] 01:25:55.104 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 01:25:55.104 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>();
vec0.toString();
vec0.insertFirst("");
vec0.removeFromLast("");

[MASTER] 01:25:55.515 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 01:25:55.515 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Integer> vec0 = new Vec<Integer>();
vec0.isEmpty();
Vec<Object> vec1 = new Vec<Object>(1);
Integer integer0 = new Integer((-2347));
vec1.insertFirstWithShifting(integer0);
String[] stringArray0 = new String[7];
String string0 = "";
stringArray0[0] = "";
stringArray0[1] = "";
stringArray0[2] = "";
stringArray0[3] = "";
stringArray0[4] = "";
stringArray0[5] = "org.sat4j.core.Vec";
stringArray0[6] = "";
Vec<String> vec2 = new Vec<String>(stringArray0);
vec2.push("v4d=E");
vec2.removeFromLast("");

[MASTER] 01:26:04.320 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.sat4j.core.ReadOnlyVec;
[MASTER] 01:26:04.321 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
ReadOnlyVec<Object> readOnlyVec0 = null;
Vec<ReadOnlyVec<Object>> vec0 = new Vec<ReadOnlyVec<Object>>(0, (ReadOnlyVec<Object>) null);
assertNotNull(vec0);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());

vec0.insertFirst((ReadOnlyVec<Object>) null);
assertFalse(vec0.isEmpty());
assertEquals(1, vec0.size());

vec0.insertFirst((ReadOnlyVec<Object>) null);
assertFalse(vec0.isEmpty());
assertEquals(2, vec0.size());

ReadOnlyVec<Object>[] readOnlyVecArray0 = vec0.toArray();
assertEquals(2, readOnlyVecArray0.length);
assertNotNull(readOnlyVecArray0);
assertFalse(vec0.isEmpty());
assertEquals(2, vec0.size());

int int1 = 165;
Integer integer0 = new Integer(0);
assertNotNull(integer0);
assertEquals(0, (int)integer0);
assertFalse(integer0.equals((Object)int1));
assertTrue(integer0.equals((Object)int0));

Vec<Integer> vec1 = new Vec<Integer>(165, integer0);
assertNotNull(vec1);
assertFalse(integer0.equals((Object)int1));
assertTrue(integer0.equals((Object)int0));
assertEquals(165, vec1.size());
assertFalse(vec1.isEmpty());

IVec<Integer> iVec0 = vec1.clone();
assertNotNull(iVec0);
assertFalse(integer0.equals((Object)int1));
assertTrue(integer0.equals((Object)int0));
assertEquals(165, vec1.size());
assertFalse(vec1.isEmpty());
assertFalse(iVec0.isEmpty());
assertEquals(165, iVec0.size());

vec1.moveTo(iVec0);
assertFalse(integer0.equals((Object)int1));
assertTrue(integer0.equals((Object)int0));
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertFalse(iVec0.isEmpty());
assertEquals(330, iVec0.size());

vec1.growTo(0, integer0);
assertFalse(integer0.equals((Object)int1));
assertTrue(integer0.equals((Object)int0));
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

int int2 = 0;
Vec<String> vec2 = new Vec<String>(0);
assertNotNull(vec2);
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());

vec2.pop();

[MASTER] 01:26:07.926 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 01:26:07.927 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Vec<Object>> vec0 = new Vec<Vec<Object>>();
assertNotNull(vec0);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());

Vec<Object> vec1 = new Vec<Object>();
assertNotNull(vec1);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());

Vec<Vec<Object>> vec2 = new Vec<Vec<Object>>();
assertNotNull(vec2);
assertTrue(vec2.equals((Object)vec0));
assertTrue(vec2.isEmpty());
assertEquals(0, vec2.size());

vec2.insertFirst(vec1);
assertNotSame(vec2, vec0);
assertFalse(vec2.equals((Object)vec0));
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertEquals(1, vec2.size());
assertFalse(vec2.isEmpty());

vec1.growTo(0, vec0);
assertNotSame(vec0, vec2);
assertFalse(vec0.equals((Object)vec2));
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());

Vec<Integer> vec3 = new Vec<Integer>();
assertNotNull(vec3);
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());

Iterator<Integer> iterator0 = vec3.iterator();
assertNotNull(iterator0);
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());

Vec<String> vec4 = new Vec<String>();
assertNotNull(vec4);
assertEquals(0, vec4.size());
assertTrue(vec4.isEmpty());

vec1.insertFirstWithShifting(vec0);
assertNotSame(vec0, vec2);
assertFalse(vec0.equals((Object)vec2));
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertEquals(1, vec1.size());
assertFalse(vec1.isEmpty());

String[] stringArray0 = new String[2];
stringArray0[0] = "";
stringArray0[1] = "";
IVec<String> iVec0 = vec4.push("");
assertNotNull(iVec0);
assertFalse(vec4.isEmpty());
assertEquals(1, vec4.size());
assertEquals(1, iVec0.size());
assertFalse(iVec0.isEmpty());

vec4.removeFromLast("");

[MASTER] 01:26:08.948 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 01:26:08.949 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Vec<Object>> vec0 = new Vec<Vec<Object>>();
assertNotNull(vec0);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());

Vec<Object> vec1 = new Vec<Object>();
assertNotNull(vec1);
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

vec0.insertFirst(vec1);
assertEquals(1, vec0.size());
assertFalse(vec0.isEmpty());
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

vec1.growTo(0, vec0);
assertEquals(1, vec0.size());
assertFalse(vec0.isEmpty());
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

Vec<Integer> vec2 = new Vec<Integer>();
assertNotNull(vec2);
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());

Iterator<Integer> iterator0 = vec2.iterator();
assertNotNull(iterator0);
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());

String[] stringArray0 = new String[2];
Vec<String> vec3 = new Vec<String>();
assertNotNull(vec3);
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());

vec1.insertFirstWithShifting(vec3);
assertEquals(1, vec1.size());
assertFalse(vec1.isEmpty());
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());

stringArray0[0] = "";
stringArray0[1] = "";
Vec<String> vec4 = new Vec<String>(stringArray0);
assertEquals(2, stringArray0.length);
assertNotNull(vec4);
assertFalse(vec4.equals((Object)vec3));
assertEquals(2, vec4.size());
assertFalse(vec4.isEmpty());

IVec<String> iVec0 = vec4.push("");
assertEquals(2, stringArray0.length);
assertNotNull(iVec0);
assertNotSame(vec4, vec3);
assertFalse(vec4.equals((Object)vec3));
assertEquals(3, vec4.size());
assertFalse(vec4.isEmpty());
assertFalse(iVec0.isEmpty());
assertEquals(3, iVec0.size());

vec4.removeFromLast("");

[MASTER] 01:26:10.762 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Ljava.lang.Comparable;
[MASTER] 01:26:10.766 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(0, (String) null);
assertNotNull(vec0);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());

Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
Vec<Comparable<Object>> vec1 = new Vec<Comparable<Object>>(1, comparable0);
assertNotNull(vec1);
assertEquals(1, vec1.size());
assertFalse(vec1.isEmpty());

vec1.ensure(0);
assertEquals(1, vec1.size());
assertFalse(vec1.isEmpty());

Vec<Comparable<Integer>> vec2 = new Vec<Comparable<Integer>>();
assertNotNull(vec2);
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());

Comparator<Comparable<Integer>> comparator0 = (Comparator<Comparable<Integer>>) mock(Comparator.class, new ViolatedAssumptionAnswer());
vec2.selectionSort(0, 0, comparator0);
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());

Comparable<Integer>[] comparableArray0 = vec2.toArray();
assertEquals(5, comparableArray0.length);
assertNotNull(comparableArray0);
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());

ReadOnlyVec<Object>[] readOnlyVecArray0 = null;
Vec<ReadOnlyVec<Object>> vec3 = new Vec<ReadOnlyVec<Object>>((ReadOnlyVec<Object>[]) null);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'Vec_ESTest' to evosuite-tests
* Done!

* Computation finished
