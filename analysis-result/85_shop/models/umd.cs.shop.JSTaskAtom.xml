<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s7" action="umd.cs.shop.JSTaskAtom.size()" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s9" action="umd.cs.shop.JSTaskAtom.print()" proba="0.6666666666666666"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s12" action="umd.cs.shop.JSTaskAtom.isPrimitive()" proba="0.16666666666666666"></transition><transition target="s8" action="umd.cs.shop.JSTaskAtom.toStr()" proba="0.16666666666666666"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s13"><transition target="s15" action="umd.cs.shop.JSTaskAtom.reduce(umd.cs.shop.JSPlanningDomain,umd.cs.shop.JSState,umd.cs.shop.JSReduction)" proba="0.5"></transition><transition target="s14" action="umd.cs.shop.JSTaskAtom.clone()" proba="0.5"></transition></state><state id="s12"><transition target="s13" action="umd.cs.shop.JSTaskAtom.seekSimplePlan(umd.cs.shop.JSPlanningDomain,umd.cs.shop.JSTState)" proba="1.0"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s15" action="umd.cs.shop.JSTaskAtom.reduce(umd.cs.shop.JSPlanningDomain,umd.cs.shop.JSState,umd.cs.shop.JSReduction)" proba="0.5"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="umd.cs.shop.JSTaskAtom.isGround()" proba="0.10526315789473684"></transition><transition target="s4" action="umd.cs.shop.JSTaskAtom.cloneTA()" proba="0.05263157894736842"></transition><transition target="s11" action="umd.cs.shop.JSTaskAtom.applySubstitutionTA(umd.cs.shop.JSSubstitution)" proba="0.05263157894736842"></transition><transition target="s6" action="umd.cs.shop.JSTaskAtom.&lt;init&gt;(java.io.StreamTokenizer)" proba="0.05263157894736842"></transition><transition target="s10" action="umd.cs.shop.JSTaskAtom.equals(umd.cs.shop.JSPredicateForm)" proba="0.05263157894736842"></transition><transition target="s8" action="umd.cs.shop.JSTaskAtom.toStr()" proba="0.10526315789473684"></transition><transition target="s12" action="umd.cs.shop.JSTaskAtom.isPrimitive()" proba="0.05263157894736842"></transition><transition target="s9" action="umd.cs.shop.JSTaskAtom.print()" proba="0.21052631578947367"></transition><transition target="s1" action="umd.cs.shop.JSTaskAtom.standarizerTA()" proba="0.2631578947368421"></transition><transition target="s2" action="umd.cs.shop.JSTaskAtom.findInList(java.util.Vector)" proba="0.05263157894736842"></transition></state><state id="s1"><transition target="s5" action="umd.cs.shop.JSTaskAtom.matches(umd.cs.shop.JSPredicateForm)" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.6"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>