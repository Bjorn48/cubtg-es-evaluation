/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 17 08:01:23 GMT 2019
 */

package org.sat4j.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sat4j.BasicLauncher;
import org.sat4j.LightFactory;
import org.sat4j.core.ASolverFactory;
import org.sat4j.core.Vec;
import org.sat4j.core.VecInt;
import org.sat4j.specs.IConstr;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.IVecInt;
import org.sat4j.tools.ClausalCardinalitiesDecorator;
import org.sat4j.tools.DimacsOutputSolver;
import org.sat4j.tools.DimacsStringSolver;
import org.sat4j.tools.GateTranslator;
import org.sat4j.tools.GroupClauseSelectorSolver;
import org.sat4j.tools.ModelIterator;
import org.sat4j.tools.encoding.Product;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GateTranslator_ESTest extends GateTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VecInt vecInt0 = new VecInt(265, 265);
      ASolverFactory<DimacsStringSolver> aSolverFactory0 = (ASolverFactory<DimacsStringSolver>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
      BasicLauncher<DimacsStringSolver> basicLauncher0 = new BasicLauncher<DimacsStringSolver>(aSolverFactory0);
      PrintWriter printWriter0 = basicLauncher0.getLogWriter();
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver(printWriter0);
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      BigInteger bigInteger0 = BigInteger.valueOf((-1449L));
      Vec<BigInteger> vec0 = new Vec<BigInteger>(265, bigInteger0);
      // Undeclared exception!
      gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VecInt vecInt0 = new VecInt(260, 260);
      vecInt0.shrink(349);
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      BigInteger bigInteger0 = BigInteger.valueOf(260);
      Vec<BigInteger> vec0 = new Vec<BigInteger>(260, bigInteger0);
      gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      VecInt vecInt0 = new VecInt();
      vecInt0.pop();
      // Undeclared exception!
      try { 
        gateTranslator0.and((-2320), (IVecInt) vecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      gateTranslator0.xor(346, 346, 346);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      gateTranslator0.halfAdderSum(0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      Product product0 = new Product();
      ClausalCardinalitiesDecorator<DimacsOutputSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsOutputSolver>(dimacsOutputSolver0, product0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      gateTranslator0.gateTrue(5);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      gateTranslator0.gateTrue(255);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      gateTranslator0.gateFalse((-1214));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      gateTranslator0.gateFalse(4);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VecInt vecInt0 = new VecInt(260, 260);
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      gateTranslator0.xor(6, (IVecInt) vecInt0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      VecInt vecInt0 = new VecInt();
      // Undeclared exception!
      try { 
        gateTranslator0.xor(238, (IVecInt) vecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      VecInt vecInt0 = new VecInt();
      vecInt0.shrink(3);
      // Undeclared exception!
      try { 
        gateTranslator0.xor(288, (IVecInt) vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.xor(346, 4, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VecInt vecInt0 = new VecInt();
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.or((-1018), vecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VecInt vecInt0 = new VecInt();
      ASolverFactory<DimacsStringSolver> aSolverFactory0 = (ASolverFactory<DimacsStringSolver>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
      BasicLauncher<DimacsStringSolver> basicLauncher0 = new BasicLauncher<DimacsStringSolver>(aSolverFactory0);
      vecInt0.shrinkTo(57);
      PrintWriter printWriter0 = basicLauncher0.getLogWriter();
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver(printWriter0);
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.or(227, vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.not(100, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.ite(1570, 1570, 1570, 1570);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.it(100, 100, 100);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.iff(4, (IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VecInt vecInt0 = new VecInt();
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      vecInt0.insertFirst(0);
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.iff(241, vecInt0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VecInt vecInt0 = new VecInt(260);
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      vecInt0.shrink(5000);
      // Undeclared exception!
      try { 
        gateTranslator0.iff((-8), vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.halfOr(994, (IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      VecInt vecInt0 = new VecInt();
      vecInt0.pop();
      // Undeclared exception!
      try { 
        gateTranslator0.halfOr((-5818), vecInt0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.halfAdderSum(252, 47, 252);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.halfAdderCarry(1, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.fullAdderSum(222, 100, 222, 100);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.fullAdderCarry(220, 220, 253, (-281));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      VecInt vecInt0 = new VecInt();
      // Undeclared exception!
      try { 
        gateTranslator0.and((-2320), (IVecInt) vecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      VecInt vecInt0 = new VecInt();
      vecInt0.shrink(224);
      // Undeclared exception!
      try { 
        gateTranslator0.and(270, (IVecInt) vecInt0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.and((-446), (-446), (-446));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.additionalFullAdderConstraints(260, 260, (-840), 102, (-840));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.additionalFullAdderConstraints((-1783), (-1315), 0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      gateTranslator0.and(6, 4, (-510));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VecInt vecInt0 = new VecInt(260, 260);
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      BigInteger bigInteger0 = BigInteger.valueOf(260);
      Vec<BigInteger> vec0 = new Vec<BigInteger>(260, bigInteger0);
      // Undeclared exception!
      try { 
        gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VecInt vecInt0 = new VecInt();
      IVecInt iVecInt0 = vecInt0.push(1254);
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      BigInteger bigInteger0 = BigInteger.ONE;
      Vec<BigInteger> vec0 = new Vec<BigInteger>(1254, bigInteger0);
      gateTranslator0.xor(227, iVecInt0);
      gateTranslator0.optimisationFunction(iVecInt0, vec0, vecInt0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VecInt vecInt0 = new VecInt(265, 265);
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      BigInteger bigInteger0 = BigInteger.valueOf(265);
      Vec<BigInteger> vec0 = new Vec<BigInteger>(265, bigInteger0);
      // Undeclared exception!
      try { 
        gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VecInt vecInt0 = new VecInt(260, 260);
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      BigInteger bigInteger0 = BigInteger.valueOf(260);
      Vec<BigInteger> vec0 = new Vec<BigInteger>(225, bigInteger0);
      // Undeclared exception!
      try { 
        gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VecInt vecInt0 = new VecInt(265, 265);
      ASolverFactory<DimacsStringSolver> aSolverFactory0 = (ASolverFactory<DimacsStringSolver>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
      BasicLauncher<DimacsStringSolver> basicLauncher0 = new BasicLauncher<DimacsStringSolver>(aSolverFactory0);
      PrintWriter printWriter0 = basicLauncher0.getLogWriter();
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver(printWriter0);
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      // Undeclared exception!
      gateTranslator0.iff(265, vecInt0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      VecInt vecInt0 = new VecInt();
      gateTranslator0.xor(250, (IVecInt) vecInt0);
      gateTranslator0.iff(61, vecInt0);
      IConstr[] iConstrArray0 = gateTranslator0.xor(0, (IVecInt) vecInt0);
      assertEquals(0, vecInt0.last());
      assertEquals(4, iConstrArray0.length);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      VecInt vecInt0 = new VecInt();
      gateTranslator0.xor(250, (IVecInt) vecInt0);
      gateTranslator0.halfOr(0, vecInt0);
      assertEquals(1, vecInt0.size());
      assertEquals((-250), vecInt0.last());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      VecInt vecInt0 = new VecInt();
      IConstr[] iConstrArray0 = gateTranslator0.halfOr(0, vecInt0);
      assertEquals(0, iConstrArray0.length);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      VecInt vecInt0 = new VecInt();
      gateTranslator0.xor(250, (IVecInt) vecInt0);
      gateTranslator0.or(250, vecInt0);
      assertEquals(1, vecInt0.size());
      assertFalse(vecInt0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      VecInt vecInt0 = new VecInt();
      gateTranslator0.xor(250, (IVecInt) vecInt0);
      gateTranslator0.and(4, (IVecInt) vecInt0);
      assertFalse(vecInt0.isEmpty());
      assertEquals(1, vecInt0.size());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.halfAdderSum(0, 723, 1021);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      gateTranslator0.halfAdderCarry(1, 99, 99);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      IConstr[] iConstrArray0 = gateTranslator0.ite(4, 0, 100, 3045);
      assertEquals(6, iConstrArray0.length);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.xor(4, 250, 250);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      gateTranslator0.fullAdderSum(248, 4, (-1919), 707);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      IConstr[] iConstrArray0 = gateTranslator0.it((-3978), 100, 315);
      assertEquals(3, iConstrArray0.length);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.gateFalse(229);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(0);
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      gateTranslator0.fullAdderCarry(389, 1009, 0, 260);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      Product product0 = new Product();
      ClausalCardinalitiesDecorator<DimacsOutputSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsOutputSolver>(dimacsOutputSolver0, product0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      gateTranslator0.additionalFullAdderConstraints(22, 5, (-2531), 110, 110);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      IConstr[] iConstrArray0 = gateTranslator0.not(2, 0);
      assertEquals(2, iConstrArray0.length);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.gateTrue(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      GroupClauseSelectorSolver<ModelIterator> groupClauseSelectorSolver0 = (GroupClauseSelectorSolver<ModelIterator>) mock(GroupClauseSelectorSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null).when(groupClauseSelectorSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<GroupClauseSelectorSolver<ModelIterator>>(groupClauseSelectorSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      VecInt vecInt0 = new VecInt();
      gateTranslator0.iff(61, vecInt0);
      assertEquals(61, vecInt0.last());
  }
}
