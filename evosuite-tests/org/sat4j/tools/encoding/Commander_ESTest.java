/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 18 19:54:47 GMT 2019
 */

package org.sat4j.tools.encoding;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sat4j.core.VecInt;
import org.sat4j.opt.MaxSatDecorator;
import org.sat4j.specs.IConstr;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.IVecInt;
import org.sat4j.tools.ClausalCardinalitiesDecorator;
import org.sat4j.tools.DimacsStringSolver;
import org.sat4j.tools.GroupClauseSelectorSolver;
import org.sat4j.tools.LexicoDecorator;
import org.sat4j.tools.OptToSatAdapter;
import org.sat4j.tools.encoding.Commander;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Commander_ESTest extends Commander_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Commander commander0 = new Commander();
      MaxSatDecorator maxSatDecorator0 = mock(MaxSatDecorator.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null).when(maxSatDecorator0).addAtMost(any(org.sat4j.specs.IVecInt.class) , anyInt());
      GroupClauseSelectorSolver<MaxSatDecorator> groupClauseSelectorSolver0 = new GroupClauseSelectorSolver<MaxSatDecorator>(maxSatDecorator0);
      VecInt vecInt0 = new VecInt(4852, 4852);
      IConstr iConstr0 = commander0.addExactly(groupClauseSelectorSolver0, vecInt0, 0);
      assertFalse(iConstr0.canBePropagatedMultipleTimes());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Commander commander0 = new Commander();
      MaxSatDecorator maxSatDecorator0 = mock(MaxSatDecorator.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(maxSatDecorator0).addClause(any(org.sat4j.specs.IVecInt.class));
      doReturn(0, 0, 0).when(maxSatDecorator0).nextFreeVarId(anyBoolean());
      LexicoDecorator<MaxSatDecorator> lexicoDecorator0 = new LexicoDecorator<MaxSatDecorator>(maxSatDecorator0);
      OptToSatAdapter optToSatAdapter0 = new OptToSatAdapter(lexicoDecorator0);
      int[] intArray0 = new int[9];
      VecInt vecInt0 = new VecInt(intArray0);
      IConstr iConstr0 = commander0.addAtMostOne(optToSatAdapter0, vecInt0);
      assertEquals(22, iConstr0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Commander commander0 = new Commander();
      MaxSatDecorator maxSatDecorator0 = mock(MaxSatDecorator.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(maxSatDecorator0).addClause(any(org.sat4j.specs.IVecInt.class));
      doReturn(0, 0, 0, 0, 0).when(maxSatDecorator0).nextFreeVarId(anyBoolean());
      GroupClauseSelectorSolver<MaxSatDecorator> groupClauseSelectorSolver0 = new GroupClauseSelectorSolver<MaxSatDecorator>(maxSatDecorator0);
      VecInt vecInt0 = new VecInt(4852, 4852);
      // Undeclared exception!
      commander0.addExactlyOne(groupClauseSelectorSolver0, vecInt0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Commander commander0 = new Commander();
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      VecInt vecInt0 = new VecInt();
      // Undeclared exception!
      try { 
        commander0.addExactly(dimacsStringSolver0, vecInt0, 1610);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not a clausal problem! degree 1610
         //
         verifyException("org.sat4j.tools.DimacsStringSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Commander commander0 = new Commander();
      MaxSatDecorator maxSatDecorator0 = mock(MaxSatDecorator.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(maxSatDecorator0).addClause(any(org.sat4j.specs.IVecInt.class));
      doReturn(0, 0, 0, 0, 0).when(maxSatDecorator0).nextFreeVarId(anyBoolean());
      GroupClauseSelectorSolver<MaxSatDecorator> groupClauseSelectorSolver0 = new GroupClauseSelectorSolver<MaxSatDecorator>(maxSatDecorator0);
      VecInt vecInt0 = new VecInt(4852, 4852);
      // Undeclared exception!
      commander0.addAtMostOne(groupClauseSelectorSolver0, vecInt0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Commander commander0 = new Commander();
      MaxSatDecorator maxSatDecorator0 = mock(MaxSatDecorator.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(maxSatDecorator0).addClause(any(org.sat4j.specs.IVecInt.class));
      doReturn(0, 0, 0).when(maxSatDecorator0).nextFreeVarId(anyBoolean());
      LexicoDecorator<MaxSatDecorator> lexicoDecorator0 = new LexicoDecorator<MaxSatDecorator>(maxSatDecorator0);
      int[] intArray0 = new int[9];
      VecInt vecInt0 = new VecInt(intArray0);
      IConstr iConstr0 = commander0.addExactlyOne(lexicoDecorator0, vecInt0);
      assertFalse(iConstr0.canBePropagatedMultipleTimes());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Commander commander0 = new Commander();
      VecInt vecInt0 = new VecInt();
      // Undeclared exception!
      try { 
        commander0.addExactlyOne((ISolver) null, vecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.encoding.EncodingStrategyAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Commander commander0 = new Commander();
      IVecInt iVecInt0 = VecInt.EMPTY;
      // Undeclared exception!
      try { 
        commander0.addExactly((ISolver) null, iVecInt0, 30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.encoding.EncodingStrategyAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Commander commander0 = new Commander();
      MaxSatDecorator maxSatDecorator0 = mock(MaxSatDecorator.class, new ViolatedAssumptionAnswer());
      ClausalCardinalitiesDecorator<MaxSatDecorator> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<MaxSatDecorator>(maxSatDecorator0);
      // Undeclared exception!
      try { 
        commander0.addAtMostOne(clausalCardinalitiesDecorator0, (IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
