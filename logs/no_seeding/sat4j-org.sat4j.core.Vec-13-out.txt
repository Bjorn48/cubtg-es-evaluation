* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.core.Vec
* Starting Client-0
* Connecting to master process on port 9889
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.core.Vec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1334
* Using seed 1550434371834
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initialsss Number of Goals in DynMOSA = 418 / 1334
[Progress:>                             0%] [Cov:==========================>        75%]Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.7701149425287356
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6631578947368421
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6133177570093458
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9210526315789473
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.631578947368421
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
[Progress:>                             0%] [Cov:=============================>     83%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 297
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.867816091954023
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7578947368421053
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.7710280373831776
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5526315789473685
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7263157894736842
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 404
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
[Progress:>                             0%] [Cov:=============================>     84%]Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8735632183908046
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7789473684210526
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.7897196261682243
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5789473684210527
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7473684210526316
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 511
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
[Progress:>                             0%] [Cov:===============================>   90%]Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9482758620689655
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8631578947368421
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9217289719626168
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8631578947368421
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 613
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
[Progress:>                             0%] [Cov:===============================>   91%]Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9482758620689655
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8736842105263158
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9369158878504673
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8736842105263158
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 718
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
[Progress:>                             0%] [Cov:================================>  92%]Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8947368421052632
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9439252336448598
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8842105263157894
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 821
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
[Progress:>                             0%] [Cov:================================>  92%]Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9052631578947369
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9052631578947369
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 928
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
[Progress:>                             0%] [Cov:================================>  93%]Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9052631578947369
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7368421052631579
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9052631578947369
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 949
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
[Progress:>                             0%] [Cov:================================>  93%]Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9052631578947369
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7368421052631579
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9052631578947369

* Search finished after 121s and 8 generations, 11484 statements, best individual has fitness: 83.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9052631578947369
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7368421052631579
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9052631578947369
* Minimizing test suite
[MASTER] 21:16:12.827 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 174
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 95
* Number of covered goals: 86
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 32
* Number of covered goals: 32
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 856
* Number of covered goals: 809
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 74%
* Total number of goals: 38
* Number of covered goals: 28
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 95
* Number of covered goals: 86
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9052631578947369
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7368421052631579
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9052631578947369
* Generated 135 tests with total length 1812
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:17:08.295 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.87115% of time used, but only 9/135 tests minimized), falling back to using all assertions
[MASTER] 21:17:17.189 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 15%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9052631578947369
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7368421052631579
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9052631578947369
* Compiling and checking tests
[MASTER] 21:17:59.479 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 21:17:59.480 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(1);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(vec0);

Vec<String> vec1 = new Vec<String>(1);
assertTrue(vec1.equals((Object)vec0));
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertNotNull(vec1);

Integer[] integerArray0 = new Integer[3];
Integer integer0 = new Integer(4584);
assertNotNull(integer0);
assertEquals(4584, (int)integer0);

integerArray0[2] = integer0;
Vec<Object> vec2 = new Vec<Object>();
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());
assertNotNull(vec2);

Vec<Object> vec3 = new Vec<Object>();
assertTrue(vec3.equals((Object)vec2));
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());
assertNotNull(vec3);

boolean boolean0 = vec2.equals(vec3);
assertTrue(vec2.equals((Object)vec3));
assertTrue(vec3.equals((Object)vec2));
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());
assertTrue(boolean0);
assertNotSame(vec2, vec3);
assertNotSame(vec3, vec2);

Vec<String> vec4 = new Vec<String>(4584, "org.sat4j.core.ReadOnlyVec");
assertFalse(vec4.equals((Object)vec0));
assertFalse(vec4.equals((Object)vec1));
assertEquals(4584, vec4.size());
assertFalse(vec4.isEmpty());
assertNotNull(vec4);

vec4.remove("org.sat4j.core.ReadOnlyVec");

[MASTER] 21:18:06.036 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 21:18:06.042 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<ReadOnlyVec<String>> vec0 = new Vec<ReadOnlyVec<String>>();
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNotNull(vec0);

String[] stringArray0 = new String[3];
stringArray0[0] = "?";
stringArray0[1] = "";
stringArray0[2] = ",";
Vec<String> vec1 = new Vec<String>(stringArray0);
assertEquals(3, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(vec1);
assertEquals(3, stringArray0.length);

String string0 = vec1.toString();
assertEquals(3, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(string0);
assertEquals("?,,,", string0);
assertEquals(3, stringArray0.length);

vec1.ensure(1508);
assertEquals(3, vec1.size());
assertFalse(vec1.isEmpty());
assertEquals(3, stringArray0.length);

vec1.removeFromLast("");

[MASTER] 21:18:07.358 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.sat4j.core.Vec;
[MASTER] 21:18:07.359 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(1);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNotNull(vec0);

IVec<String> iVec0 = vec0.clone();
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertTrue(iVec0.isEmpty());
assertEquals(0, iVec0.size());
assertNotNull(iVec0);

Integer[] integerArray0 = new Integer[3];
Integer integer0 = new Integer(4584);
assertNotNull(integer0);
assertEquals(4584, (int)integer0);

integerArray0[0] = integer0;
Integer integer1 = new Integer((-1090));
assertFalse(integer1.equals((Object)integer0));
assertNotNull(integer1);
assertEquals((-1090), (int)integer1);

integerArray0[1] = integer1;
Integer integer2 = new Integer(0);
assertFalse(integer2.equals((Object)integer1));
assertFalse(integer2.equals((Object)integer0));
assertNotNull(integer2);
assertEquals(0, (int)integer2);

integerArray0[2] = integer2;
Vec<Integer> vec1 = new Vec<Integer>(integerArray0);
assertFalse(vec1.isEmpty());
assertEquals(3, vec1.size());
assertNotNull(vec1);
assertEquals(3, integerArray0.length);

Vec<Vec<Integer>> vec2 = new Vec<Vec<Integer>>(4584, vec1);
assertFalse(vec1.isEmpty());
assertEquals(3, vec1.size());
assertEquals(4584, vec2.size());
assertFalse(vec2.isEmpty());
assertNotNull(vec2);
assertEquals(3, integerArray0.length);

Vec<ReadOnlyVec<Integer>> vec3 = new Vec<ReadOnlyVec<Integer>>(1);
assertEquals(0, vec3.size());
assertTrue(vec3.isEmpty());
assertNotNull(vec3);

boolean boolean0 = vec3.equals(integerArray0[1]);
assertEquals(0, vec3.size());
assertTrue(vec3.isEmpty());
assertFalse(boolean0);
assertEquals(3, integerArray0.length);

Vec<Vec<Object>> vec4 = new Vec<Vec<Object>>(1);
assertEquals(0, vec4.size());
assertTrue(vec4.isEmpty());
assertNotNull(vec4);

Vec<Object>[] vecArray0 = vec4.toArray();
assertEquals(0, vec4.size());
assertTrue(vec4.isEmpty());
assertNotNull(vecArray0);
assertEquals(1, vecArray0.length);


[MASTER] 21:18:08.738 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 21:18:08.739 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>();
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(vec0);

Vec<Vec<String>> vec1 = new Vec<Vec<String>>(0, vec0);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertNotNull(vec1);

vec1.hashCode();
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

Integer[] integerArray0 = new Integer[6];
Integer integer0 = new Integer(0);
assertNotNull(integer0);
assertEquals(0, (int)integer0);

integerArray0[0] = integer0;
Integer integer1 = new Integer(0);
assertTrue(integer1.equals((Object)integer0));
assertNotNull(integer1);
assertEquals(0, (int)integer1);

integerArray0[1] = integer1;
Integer integer2 = new Integer(0);
assertTrue(integer2.equals((Object)integer0));
assertTrue(integer2.equals((Object)integer1));
assertNotNull(integer2);
assertEquals(0, (int)integer2);

integerArray0[2] = integer2;
Integer integer3 = new Integer((-4322));
assertFalse(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer2));
assertFalse(integer3.equals((Object)integer0));
assertNotNull(integer3);
assertEquals((-4322), (int)integer3);

integerArray0[3] = integer3;
Integer integer4 = new Integer(0);
assertTrue(integer4.equals((Object)integer1));
assertFalse(integer4.equals((Object)integer3));
assertTrue(integer4.equals((Object)integer0));
assertTrue(integer4.equals((Object)integer2));
assertNotNull(integer4);
assertEquals(0, (int)integer4);

integerArray0[4] = integer4;
Integer integer5 = new Integer(2115);
assertFalse(integer5.equals((Object)integer4));
assertFalse(integer5.equals((Object)integer2));
assertFalse(integer5.equals((Object)integer3));
assertFalse(integer5.equals((Object)integer1));
assertFalse(integer5.equals((Object)integer0));
assertNotNull(integer5);
assertEquals(2115, (int)integer5);

integerArray0[5] = integer5;
Vec<Integer> vec2 = new Vec<Integer>(integerArray0);
assertFalse(vec2.isEmpty());
assertEquals(6, vec2.size());
assertNotNull(vec2);
assertEquals(6, integerArray0.length);

vec2.removeFromLast(integer4);

[MASTER] 21:18:11.659 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.sat4j.core.Vec;
[MASTER] 21:18:11.661 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String[] stringArray0 = new String[5];
stringArray0[0] = "R9";
stringArray0[1] = "";
stringArray0[2] = "";
stringArray0[3] = "COS-OuGb:[d";
stringArray0[4] = "";
Vec<String> vec0 = new Vec<String>(stringArray0);
assertFalse(vec0.isEmpty());
assertEquals(5, vec0.size());
assertNotNull(vec0);
assertEquals(5, stringArray0.length);

Vec<Vec<String>> vec1 = new Vec<Vec<String>>(0, vec0);
assertFalse(vec0.isEmpty());
assertEquals(5, vec0.size());
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertNotNull(vec1);
assertEquals(5, stringArray0.length);

boolean boolean0 = vec1.isEmpty();
assertFalse(vec0.isEmpty());
assertEquals(5, vec0.size());
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertTrue(boolean0);
assertEquals(5, stringArray0.length);

Vec<String>[] vecArray0 = vec1.toArray();
assertFalse(vec0.isEmpty());
assertEquals(5, vec0.size());
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertNotNull(vecArray0);
assertEquals(5, stringArray0.length);
assertEquals(0, vecArray0.length);

int int0 = (-1);
Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
vec0.selectionSort(0, (-1), comparator0);
assertFalse(vec0.isEmpty());
assertEquals(5, vec0.size());
assertEquals(5, stringArray0.length);

Vec<Integer> vec2 = new Vec<Integer>(0);
assertTrue(vec2.isEmpty());
assertEquals(0, vec2.size());
assertNotNull(vec2);

Integer integer0 = new Integer(2600);
assertFalse(integer0.equals((Object)int0));
assertNotNull(integer0);
assertEquals(2600, (int)integer0);

vec2.removeFromLast(integer0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'Vec_ESTest' to evosuite-tests
* Done!

* Computation finished
