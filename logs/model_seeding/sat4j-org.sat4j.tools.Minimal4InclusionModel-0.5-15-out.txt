* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.tools.Minimal4InclusionModel
* Starting Client-0
* Connecting to master process on port 2720
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.tools.Minimal4InclusionModel
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 128
* Using seed 1550527716171
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 30 / 128
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.3783783783783784
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2631578947368421
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.0
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.0
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.8333333333333334
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.2631578947368421
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
[MASTER] 23:09:32.548 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.ILits
[MASTER] 23:09:34.533 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IConstr
[MASTER] 23:09:37.278 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.tools.Minimal4CardinalityModel
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 263
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.6486486486486487
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7894736842105263
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6060606060606061
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.375
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7894736842105263
[MASTER] 23:09:42.864 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.sat4j.minisat.orders.LevelBasedVarOrderHeap canUseFunctionalMocks=false, canBeMocked: true
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 334
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8378378378378378
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8421052631578947
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.7272727272727273
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.375
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
[MASTER] 23:09:51.262 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.tools.GroupClauseSelectorSolver due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.core.Solver due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.IOrder
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 409
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9459459459459459
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9090909090909091
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9473684210526315
[MASTER] 23:09:56.946 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.tools.ClausalCardinalitiesDecorator due to org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.tools.Minimal4CardinalityModel
[MASTER] 23:09:57.141 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for org.sat4j.core.ASolverFactory<org.sat4j.tools.FullClauseSelectorSolver<org.sat4j.tools.Minimal4CardinalityModel>> canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 23:10:00.840 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.sat4j.tools.GateTranslator canUseFunctionalMocks=false, canBeMocked: true
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 484
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9459459459459459
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9090909090909091
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9473684210526315
[MASTER] 23:10:11.422 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.UnitPropagationListener
[MASTER] 23:10:11.680 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.constraints.card.AtLeast due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.ILits
[MASTER] 23:10:13.700 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.minisat.core.SolverStats
[MASTER] 23:10:14.057 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.Constr
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 556
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9459459459459459
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9090909090909091
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.75
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9473684210526315
[MASTER] 23:10:28.893 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.sat4j.tools.StatisticsSolver canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 23:10:30.563 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.constraints.cnf.LearntBinaryClause due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.ILits
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 632
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9459459459459459
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9090909090909091
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.75
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9473684210526315
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 701
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
[MASTER] 23:10:45.035 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.ISolver
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 774
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9459459459459459
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9090909090909091
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.75
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 1.0
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 848
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9459459459459459
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9090909090909091
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.75
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9459459459459459
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9090909090909091
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.75
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 1.0
* Search finished after 123s and 9 generations, 15038 statements, best individual has fitness: 7.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9459459459459459
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9090909090909091
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.75
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 1.0
* Minimizing test suite
[MASTER] 23:12:02.911 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 37
* Number of covered goals: 35
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 19
* Number of covered goals: 19
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 91%
* Total number of goals: 33
* Number of covered goals: 30
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 75%
* Total number of goals: 8
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 19
* Number of covered goals: 19
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9459459459459459
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9090909090909091
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.75
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 1.0
* Generated 31 tests with total length 560
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 23:12:56.869 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.8899% of time used, but only 5/31 tests minimized), falling back to using all assertions
[MASTER] 23:13:03.528 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 6%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9459459459459459
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9090909090909091
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.75
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 1.0
* Compiling and checking tests
[MASTER] 23:13:32.588 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 23:13:32.594 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int[] intArray0 = new int[1];
intArray0[0] = 0;
ISolver iSolver0 = mock(ISolver.class, new ViolatedAssumptionAnswer());
doReturn(false, false).when(iSolver0).isSatisfiable();
doReturn(false).when(iSolver0).isSatisfiable(any(org.sat4j.specs.IVecInt.class));
doReturn(false).when(iSolver0).isSatisfiable(any(org.sat4j.specs.IVecInt.class) , anyBoolean());
doReturn(0, 0, 0, 0).when(iSolver0).nVars();
doReturn(0).when(iSolver0).newVar(anyInt());
doReturn((int[]) null).when(iSolver0).primeImplicant();
doReturn((IConstr) null, (IConstr) null, (IConstr) null).when(iSolver0).addBlockingClause(any(org.sat4j.specs.IVecInt.class));
doReturn((IConstr) null).when(iSolver0).addParity(any(org.sat4j.specs.IVecInt.class) , anyBoolean());
doReturn((Map) null).when(iSolver0).getStat();
doReturn((Object) intArray0, (Object) null).when(iSolver0).modelWithInternalVariables();
doReturn(0).when(iSolver0).realNumberOfVariables();
MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(iSolver0, true);
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(1, intArray0.length);
assertArrayEquals(new int[] {0}, intArray0);
assertNotNull(maxSatDecorator0);

IVecInt iVecInt0 = AbstractMinimalModel.positiveLiterals(maxSatDecorator0);
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertEquals(1, intArray0.length);
assertArrayEquals(new int[] {0}, intArray0);
assertNotNull(iVecInt0);

SolutionFoundListener solutionFoundListener0 = mock(SolutionFoundListener.class, new ViolatedAssumptionAnswer());
Minimal4InclusionModel minimal4InclusionModel0 = new Minimal4InclusionModel(maxSatDecorator0, iVecInt0, solutionFoundListener0);
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertEquals(1, intArray0.length);
assertArrayEquals(new int[] {0}, intArray0);
assertNotNull(minimal4InclusionModel0);

int[] intArray1 = minimal4InclusionModel0.modelWithInternalVariables();
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertEquals(1, intArray0.length);
assertEquals(1, intArray1.length);
assertSame(intArray0, intArray1);
assertSame(intArray1, intArray0);
assertArrayEquals(new int[] {0}, intArray0);
assertArrayEquals(new int[] {0}, intArray1);
assertNotNull(intArray1);

IConstr iConstr0 = maxSatDecorator0.addBlockingClause(iVecInt0);
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertEquals(1, intArray0.length);
assertSame(intArray0, intArray1);
assertArrayEquals(new int[] {0}, intArray0);
assertNull(iConstr0);

IConstr iConstr1 = minimal4InclusionModel0.addBlockingClause(iVecInt0);
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertEquals(1, intArray0.length);
assertSame(intArray0, intArray1);
assertArrayEquals(new int[] {0}, intArray0);
assertNull(iConstr1);

minimal4InclusionModel0.setTimeoutOnConflicts(0);
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertEquals(1, intArray0.length);
assertSame(intArray0, intArray1);
assertArrayEquals(new int[] {0}, intArray0);

boolean boolean0 = minimal4InclusionModel0.isSatisfiable();
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertEquals(1, intArray0.length);
assertFalse(boolean0);
assertSame(intArray0, intArray1);
assertArrayEquals(new int[] {0}, intArray0);

boolean boolean1 = maxSatDecorator0.isSatisfiable();
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertTrue(boolean1 == boolean0);
assertEquals(1, intArray0.length);
assertFalse(boolean1);
assertSame(intArray0, intArray1);
assertArrayEquals(new int[] {0}, intArray0);

boolean boolean2 = maxSatDecorator0.isSatisfiable(iVecInt0, false);
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertTrue(boolean2 == boolean1);
assertTrue(boolean2 == boolean0);
assertEquals(1, intArray0.length);
assertFalse(boolean2);
assertSame(intArray0, intArray1);
assertArrayEquals(new int[] {0}, intArray0);

int[] intArray2 = maxSatDecorator0.primeImplicant();
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(1, intArray0.length);
assertSame(intArray0, intArray1);
assertArrayEquals(new int[] {0}, intArray0);
assertNull(intArray2);

int[] intArray3 = maxSatDecorator0.model();
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(1, intArray0.length);
assertSame(intArray0, intArray1);
assertArrayEquals(new int[] {0}, intArray0);
assertNull(intArray3);

Minimal4InclusionModel minimal4InclusionModel1 = new Minimal4InclusionModel(minimal4InclusionModel0);
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertFalse(minimal4InclusionModel1.equals((Object)minimal4InclusionModel0));
assertEquals(1, intArray0.length);
assertArrayEquals(new int[] {0}, intArray0);
assertNotNull(minimal4InclusionModel1);

Map<String, Number> map0 = minimal4InclusionModel1.getStat();
assertEquals(0, map0.size());
assertTrue(map0.isEmpty());
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertFalse(minimal4InclusionModel1.equals((Object)minimal4InclusionModel0));
assertFalse(minimal4InclusionModel0.equals((Object)minimal4InclusionModel1));
assertEquals(1, intArray0.length);
assertNotSame(minimal4InclusionModel1, minimal4InclusionModel0);
assertSame(intArray0, intArray1);
assertNotSame(minimal4InclusionModel0, minimal4InclusionModel1);
assertArrayEquals(new int[] {0}, intArray0);
assertNotNull(map0);

IConstr iConstr2 = minimal4InclusionModel1.addParity(iVecInt0, false);
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertFalse(minimal4InclusionModel1.equals((Object)minimal4InclusionModel0));
assertFalse(minimal4InclusionModel0.equals((Object)minimal4InclusionModel1));
assertEquals(1, intArray0.length);
assertNotSame(minimal4InclusionModel1, minimal4InclusionModel0);
assertSame(intArray0, intArray1);
assertNotSame(minimal4InclusionModel0, minimal4InclusionModel1);
assertArrayEquals(new int[] {0}, intArray0);
assertNull(iConstr2);

int int0 = minimal4InclusionModel0.realNumberOfVariables();
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertFalse(minimal4InclusionModel0.equals((Object)minimal4InclusionModel1));
assertEquals(1, intArray0.length);
assertEquals(0, int0);
assertSame(intArray0, intArray1);
assertNotSame(minimal4InclusionModel0, minimal4InclusionModel1);
assertArrayEquals(new int[] {0}, intArray0);

int int1 = minimal4InclusionModel1.newVar((-1720));
assertEquals(0, maxSatDecorator0.getNbexpectedclauses());
assertFalse(maxSatDecorator0.isOptimal());
assertFalse(maxSatDecorator0.isSolutionOptimal());
assertFalse(maxSatDecorator0.hasNoObjectiveFunction());
assertEquals(0, maxSatDecorator0.getExpectedNumberOfClauses());
assertFalse(maxSatDecorator0.nonOptimalMeansSatisfiable());
assertEquals(0, iVecInt0.size());
assertTrue(iVecInt0.isEmpty());
assertFalse(minimal4InclusionModel1.equals((Object)minimal4InclusionModel0));
assertTrue(int1 == int0);
assertFalse(minimal4InclusionModel0.equals((Object)minimal4InclusionModel1));
assertEquals(1, intArray0.length);
assertEquals(0, int1);
assertNotSame(minimal4InclusionModel1, minimal4InclusionModel0);
assertSame(intArray0, intArray1);
assertNotSame(minimal4InclusionModel0, minimal4InclusionModel1);
assertArrayEquals(new int[] {0}, intArray0);

minimal4InclusionModel1.model();

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
[MASTER] 23:14:03.930 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
* Writing tests to file
* Writing JUnit test case 'Minimal4InclusionModel_ESTest' to evosuite-tests
* Done!

* Computation finished
