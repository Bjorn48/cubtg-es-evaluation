* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.core.Vec
* Starting Client-0
* Connecting to master process on port 21757
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.core.Vec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1334
* Using seed 1550520909525
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 418 / 1334
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.7528735632183908
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6842105263157895
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.580607476635514
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5263157894736842
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.8947368421052632
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6421052631578947
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 297
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8275862068965517
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.7429906542056075
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5263157894736842
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9473684210526315
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7368421052631579
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 399
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8793103448275862
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8315789473684211
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8142523364485982
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5263157894736842
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7684210526315789
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 498
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.896551724137931
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8526315789473684
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8352803738317757
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.631578947368421
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8210526315789474
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 601
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9022988505747126
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8526315789473684
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8411214953271028
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8315789473684211
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 701
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8947368421052632
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.947429906542056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8315789473684211
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 764
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9532710280373832
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* Search finished after 124s and 6 generations, 8762 statements, best individual has fitness: 80.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9532710280373832
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9532710280373832
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* Minimizing test suite
[MASTER] 21:18:33.856 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 174
* Number of covered goals: 167
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 95
* Number of covered goals: 88
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 28
* Number of covered goals: 28
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 856
* Number of covered goals: 816
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 71%
* Total number of goals: 38
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 95
* Number of covered goals: 80
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9532710280373832
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* Generated 128 tests with total length 1996
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:19:20.376 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7089666666666666% of time used, but only 8/128 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 11%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9532710280373832
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* Compiling and checking tests
[MASTER] 21:19:53.174 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.sat4j.core.Vec;
[MASTER] 21:19:53.175 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Vec<Integer>> vec0 = new Vec<Vec<Integer>>();
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNotNull(vec0);

boolean boolean0 = vec0.isEmpty();
assertTrue(boolean0);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());

Vec<Object> vec1 = new Vec<Object>();
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertNotNull(vec1);

Integer integer0 = Integer.valueOf((-825));
assertEquals((-825), (int)integer0);
assertNotNull(integer0);

Integer integer1 = new Integer((-2107));
assertEquals((-2107), (int)integer1);
assertNotNull(integer1);
assertFalse(integer1.equals((Object)integer0));

Integer integer2 = Integer.valueOf((-825));
assertEquals((-825), (int)integer2);
assertNotNull(integer2);
assertFalse(integer2.equals((Object)integer1));
assertTrue(integer2.equals((Object)integer0));

int int0 = integer1.intValue();
assertEquals((-2107), int0);
assertFalse(integer1.equals((Object)integer0));
assertFalse(integer1.equals((Object)integer2));

Integer integer3 = new Integer(867);
assertEquals(867, (int)integer3);
assertNotNull(integer3);
assertFalse(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer2));
assertFalse(integer3.equals((Object)int0));
assertFalse(integer3.equals((Object)integer0));

int int1 = integer3.intValue();
assertEquals(867, int1);
assertFalse(integer3.equals((Object)integer1));
assertFalse(integer3.equals((Object)integer2));
assertFalse(integer3.equals((Object)int0));
assertFalse(integer3.equals((Object)integer0));
assertFalse(int1 == int0);

Vec<Vec<Object>> vec2 = new Vec<Vec<Object>>();
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());
assertNotNull(vec2);

vec2.unsafePush(vec1);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertFalse(vec2.isEmpty());
assertEquals(1, vec2.size());

boolean boolean1 = vec2.contains(vec1);
assertTrue(boolean1);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertFalse(vec2.isEmpty());
assertEquals(1, vec2.size());
assertTrue(boolean1 == boolean0);

Object[] objectArray0 = new Object[2];
Object object0 = new Object();
assertNotNull(object0);

objectArray0[0] = object0;
objectArray0[1] = (Object) vec1;
Vec<Object> vec3 = new Vec<Object>(objectArray0);
assertEquals(2, vec3.size());
assertFalse(vec3.isEmpty());
assertNotNull(vec3);
assertEquals(2, objectArray0.length);
assertFalse(vec3.equals((Object)vec1));

Vec<Object>[] vecArray0 = vec2.toArray();
assertFalse(vec2.isEmpty());
assertEquals(1, vec2.size());
assertNotNull(vecArray0);
assertEquals(5, vecArray0.length);


[MASTER] 21:19:57.046 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 21:19:57.047 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Object> vec0 = new Vec<Object>();
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNotNull(vec0);

vec0.shrink((-645));
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());

Vec<String> vec1 = new Vec<String>(15, "=W");
assertEquals(15, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(vec1);

Object object0 = vec1.last();
assertEquals("=W", object0);
assertEquals(15, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(object0);

vec0.insertFirst("=W");
assertFalse(vec0.isEmpty());
assertEquals(1, vec0.size());

vec0.clear();
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());

Object object1 = vec0.get(0);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNull(object1);

vec1.removeFromLast("=W");

[MASTER] 21:20:05.879 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 21:20:05.879 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Vec<String>> vec0 = new Vec<Vec<String>>(0);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(vec0);

String[] stringArray0 = new String[4];
stringArray0[0] = ".XDlA4nj4$e'l";
Vec<String> vec1 = new Vec<String>(0, ".XDlA4nj4$e'l");
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertNotNull(vec1);

vec0.insertFirstWithShifting(vec1);
assertFalse(vec0.isEmpty());
assertEquals(1, vec0.size());
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

stringArray0[1] = "Ma9R>&6MCf?q/|lKK";
stringArray0[2] = "f/1(,ZDyuAy.#dLT";
stringArray0[3] = "";
Vec<String> vec2 = new Vec<String>(stringArray0);
assertEquals(4, vec2.size());
assertFalse(vec2.isEmpty());
assertNotNull(vec2);
assertEquals(4, stringArray0.length);
assertFalse(vec2.equals((Object)vec1));

vec2.remove(".XDlA4nj4$e'l");

[MASTER] 21:20:14.040 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.sat4j.core.Vec;
[MASTER] 21:20:14.041 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Vec<Object>> vec0 = new Vec<Vec<Object>>();
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNotNull(vec0);

Object[] objectArray0 = new Object[3];
objectArray0[0] = (Object) vec0;
objectArray0[2] = (Object) vec0;
Vec<Object> vec1 = new Vec<Object>(objectArray0);
assertFalse(vec1.isEmpty());
assertEquals(3, vec1.size());
assertNotNull(vec1);
assertEquals(3, objectArray0.length);

vec0.insertFirstWithShifting(vec1);
assertFalse(vec0.isEmpty());
assertEquals(1, vec0.size());
assertFalse(vec1.isEmpty());
assertEquals(3, vec1.size());
assertEquals(3, objectArray0.length);

Vec<Object> vec2 = new Vec<Object>();
assertTrue(vec2.isEmpty());
assertEquals(0, vec2.size());
assertNotNull(vec2);
assertFalse(vec2.equals((Object)vec1));

vec0.unsafePush(vec2);
assertNotSame(vec2, vec1);
assertFalse(vec0.isEmpty());
assertEquals(2, vec0.size());
assertTrue(vec2.isEmpty());
assertEquals(0, vec2.size());
assertFalse(vec2.equals((Object)vec1));

boolean boolean0 = vec0.contains((Vec<Object>) null);
assertFalse(boolean0);
assertFalse(vec0.isEmpty());
assertEquals(2, vec0.size());

Object[] objectArray1 = new Object[0];
assertFalse(objectArray1.equals((Object)objectArray0));

Vec<Object> vec3 = new Vec<Object>(objectArray1);
assertEquals(0, vec3.size());
assertTrue(vec3.isEmpty());
assertNotNull(vec3);
assertEquals(0, objectArray1.length);
assertFalse(objectArray1.equals((Object)objectArray0));
assertTrue(vec3.equals((Object)vec2));
assertFalse(vec3.equals((Object)vec1));

Vec<Object>[] vecArray0 = vec0.toArray();
assertFalse(vec0.isEmpty());
assertEquals(2, vec0.size());
assertNotNull(vecArray0);
assertEquals(5, vecArray0.length);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'Vec_ESTest' to evosuite-tests
* Done!

* Computation finished
