/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 23:55:17 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.BoxULSymbol;
import jahuwaldt.plot.DiamondSymbol;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.RTriangle1Symbol;
import jahuwaldt.plot.RTriangle4Symbol;
import jahuwaldt.plot.TabUpSymbol;
import jahuwaldt.plot.Triangle1Symbol;
import jahuwaldt.plot.XSymbol;
import java.awt.Color;
import java.awt.SystemColor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Triangle1Symbol triangle1Symbol0 = new Triangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.1876674071927422), (-1.1876674071927422), true, triangle1Symbol0);
      plotDatum0.setY(40.0);
      assertEquals(40.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      plotDatum0.setYError(43.6299);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(43.6299, plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      plotDatum0.setYError(43.6299);
      double double0 = plotDatum0.getYError();
      assertEquals(43.6299, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      double double0 = plotDatum0.getY();
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1228.3327), (-273.0), true);
      double double0 = plotDatum0.getY();
      assertTrue(plotDatum0.connected());
      assertEquals((-1228.3327), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-273.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BoxULSymbol boxULSymbol0 = new BoxULSymbol();
      PlotDatum plotDatum0 = new PlotDatum(1452.837881645628, 1452.837881645628, false, boxULSymbol0);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.connected());
      assertEquals(1452.837881645628, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1452.837881645628, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-1049.2), 78.313, true, tabUpSymbol0);
      double double0 = plotDatum0.getX();
      assertTrue(plotDatum0.connected());
      assertEquals(78.313, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-1049.2), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2730.271474), 4244.976467249588, true);
      plotDatum0.getPlotSymbol();
      assertEquals(4244.976467249588, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
      assertEquals((-2730.271474), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XSymbol xSymbol0 = new XSymbol();
      xSymbol0.setSize(0);
      PlotDatum plotDatum0 = new PlotDatum((-307.892441502892), 1506.02, true, xSymbol0);
      plotDatum0.getPlotSymbol();
      assertEquals(1506.02, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-307.892441502892), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Triangle1Symbol triangle1Symbol0 = new Triangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.1876674071927422), (-1.1876674071927422), true, triangle1Symbol0);
      triangle1Symbol0.setSize((-1));
      plotDatum0.getPlotSymbol();
      assertEquals((-1.1876674071927422), plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals((-1.1876674071927422), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      plotDatum0.setLineColor(systemColor0);
      plotDatum0.getLineColor();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DiamondSymbol diamondSymbol0 = new DiamondSymbol();
      PlotDatum plotDatum0 = new PlotDatum(1012.2, 0.0, false, diamondSymbol0);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(boolean0);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(1012.2, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RTriangle1Symbol rTriangle1Symbol0 = new RTriangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-2934.0), (-2934.0), true, rTriangle1Symbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertFalse(plotDatum1.hasErrorBar());
      assertNotSame(plotDatum1, plotDatum0);
      assertTrue(plotDatum1.connected());
      assertEquals((-2934.0), plotDatum1.x, 0.01);
      assertEquals((-2934.0), plotDatum1.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1359.4524036409), (-2264.90179), true);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertFalse(plotDatum1.hasErrorBar());
      assertEquals((-2264.90179), plotDatum1.y, 0.01);
      assertNotSame(plotDatum1, plotDatum0);
      assertEquals((-1359.4524036409), plotDatum1.x, 0.01);
      assertTrue(plotDatum1.connected());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2730.271474), 4244.976467249588, true);
      plotDatum0.setLineColor((Color) null);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-2730.271474), plotDatum0.x, 0.01);
      assertEquals(4244.976467249588, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      plotDatum0.setYError(0.0);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(3460.33709281397, 1.0, true);
      plotDatum0.setYError((-1.0));
      double double0 = plotDatum0.getYError();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(3460.33709281397, 1.0, true);
      double double0 = plotDatum0.getYError();
      assertEquals(3460.33709281397, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(80.0, 3460.33709281397, true);
      boolean boolean0 = plotDatum0.connected();
      assertTrue(boolean0);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(80.0, plotDatum0.x, 0.01);
      assertEquals(3460.33709281397, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2163.811803003198, 2163.811803003198, false);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(2163.811803003198, plotDatum0.x, 0.01);
      assertEquals(2163.811803003198, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Triangle1Symbol triangle1Symbol0 = new Triangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.1876674071927422), (-1.1876674071927422), true, triangle1Symbol0);
      plotDatum0.setX((-504.3281360698));
      assertEquals((-504.3281360698), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Triangle1Symbol triangle1Symbol0 = new Triangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.1876674071927422), (-1.1876674071927422), true, triangle1Symbol0);
      plotDatum0.setConnected(true);
      assertEquals((-1.1876674071927422), plotDatum0.y, 0.01);
      assertEquals((-1.1876674071927422), plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Triangle1Symbol triangle1Symbol0 = new Triangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.1876674071927422), (-1.1876674071927422), true, triangle1Symbol0);
      plotDatum0.getPlotSymbol();
      assertEquals((-1.1876674071927422), plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals((-1.1876674071927422), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1339.5), 2619.3855, false);
      double double0 = plotDatum0.getY();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(2619.3855, double0, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals((-1339.5), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      RTriangle4Symbol rTriangle4Symbol0 = new RTriangle4Symbol();
      plotDatum0.setPlotSymbol(rTriangle4Symbol0);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Triangle1Symbol triangle1Symbol0 = new Triangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.1876674071927422), (-1.1876674071927422), true, triangle1Symbol0);
      Color color0 = plotDatum0.getLineColor();
      plotDatum0.setLineColor(color0);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-1.1876674071927422), plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals((-1.1876674071927422), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, (-652.7116584437595), false);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-652.7116584437595), plotDatum0.y, 0.01);
  }
}
