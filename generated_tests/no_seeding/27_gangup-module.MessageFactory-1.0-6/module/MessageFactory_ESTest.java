/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 19:29:33 GMT 2019
 */

package module;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import module.Message;
import module.MessageFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFactory_ESTest extends MessageFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      MessageFactory.createMessage("", (Object) messageFactory0);
      MessageFactory messageFactory1 = MessageFactory.getInstance();
      assertEquals(1, messageFactory1.getTotalProduced());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Object[] objectArray0 = new Object[6];
      Message message0 = MessageFactory.createWarningMessage("IRC", objectArray0);
      assertEquals("WARNING", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createWarningMessage("G1S\"~S?y?+LsNd3", (Object[]) null);
      assertEquals("WARNING", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MessageFactory.createWarningMessage("fjZu%", objectArray0);
      Message message0 = MessageFactory.createWarningMessage("\nThis probably means that you have an old or otherwise\ninaccurate locale file (maybe it's missing altogether)\nor that the classpath does not contain the directory.", objectArray0);
      assertEquals("WARNING", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFactory.getInstance();
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createUnloadMessage("41bHEyzR_={yW%n,");
      assertEquals("*", message0.getRecipient());
      assertEquals("KERNEL", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis((-11L));
      Object[] objectArray0 = new Object[6];
      Message message0 = MessageFactory.createWarningMessage("IRC", objectArray0);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
      
      Message message1 = MessageFactory.createUnloadMessage("(yt X[u");
      assertEquals("*", message1.getRecipient());
      assertEquals("KERNEL", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MessageFactory.getInstance();
      Message message0 = new Message();
      MessageFactory.instance.unrefObject(message0);
      Message message1 = MessageFactory.createUnloadMessage("41bHEyzR_={yW%n,");
      assertEquals("KERNEL", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createMessage("41bHEyzR_={yW%n,", "41bHEyzR_={yW%n,", (Object) "41bHEyzR_={yW%n,");
      assertFalse(message0.getIsConsumed());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      System.setCurrentTimeMillis((-1896L));
      Message message0 = MessageFactory.createMessage("2q/%vY*NB~L", " ", object0);
      assertEquals("2q/%vY*NB~L", message0.getHeader());
      assertEquals(" ", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageFactory.getInstance();
      Message message0 = new Message();
      MessageFactory.instance.unrefObject(message0);
      Message message1 = MessageFactory.createMessage("41bHEyzR_={yW%n,", "41bHEyzR_={yW%n,", (Object) "41bHEyzR_={yW%n,");
      assertEquals(1392409281320L, message1.getTimeStamp());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Object object0 = new Object();
      MessageFactory.getInstance();
      Message message0 = MessageFactory.createMessage("", object0);
      assertEquals("", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Message message0 = MessageFactory.createConnectionDroppedMessage(640, "module.MessageFactory");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      
      System.setCurrentTimeMillis((-2224L));
      Message message1 = MessageFactory.createMessage("module.MessageFactory", (Object) null);
      assertEquals("*", message1.getRecipient());
      assertEquals("module.MessageFactory", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Message message0 = MessageFactory.createWarningMessage("West", objectArray0);
      MessageFactory messageFactory0 = MessageFactory.instance;
      Message message1 = new Message("West", message0);
      messageFactory0.unrefObject(message1);
      assertEquals("WARNING", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      
      Message message2 = MessageFactory.createMessage("", (Object) "");
      assertEquals("", message2.getHeader());
      assertEquals("*", message2.getRecipient());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      System.setCurrentTimeMillis(0L);
      Message message0 = messageFactory0.createMessage();
      assertEquals("", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      System.setCurrentTimeMillis((-11L));
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = messageFactory0.createMessage();
      assertEquals("*", message0.getRecipient());
      assertEquals("", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Message message0 = MessageFactory.createWarningMessage("kM.+~[Kbn>TXBH", (Object[]) null);
      assertEquals("WARNING", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      
      MessageFactory messageFactory0 = MessageFactory.instance;
      Message message1 = new Message("kM.+~[Kbn>TXBH", "kM.+~[Kbn>TXBH", (Object) null);
      messageFactory0.unrefObject(message1);
      Message message2 = messageFactory0.createMessage();
      assertEquals("*", message2.getRecipient());
      assertEquals("", message2.getHeader());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Message message0 = MessageFactory.createConnectionDroppedMessage((-1), "");
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
      
      System.setCurrentTimeMillis(0L);
      Object[] objectArray0 = new Object[4];
      Message message1 = MessageFactory.createErrorMessage("o9t", objectArray0);
      assertEquals("ERROR", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Message message0 = MessageFactory.createWarningMessage("fjZu%", objectArray0);
      assertEquals("WARNING", message0.getHeader());
      
      System.setCurrentTimeMillis((-981L));
      Message message1 = MessageFactory.createErrorMessage("Reading string from locale failed: key=", objectArray0);
      assertEquals("*", message1.getRecipient());
      assertEquals("ERROR", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Object[] objectArray0 = new Object[4];
      Message message1 = MessageFactory.createErrorMessage("", objectArray0);
      assertEquals("ERROR", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis((-981L));
      Message message0 = MessageFactory.createConnectionDroppedMessage(3000, "Reading string from locale failed: key=");
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createConnectionDroppedMessage(0, "f,d3{D!S(");
      assertEquals("DROPPED", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Message message0 = MessageFactory.createWarningMessage("West", objectArray0);
      assertEquals("WARNING", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      
      Message message1 = MessageFactory.createConnectionDroppedMessage(0, "9F4qec\"t}z");
      assertEquals("DROPPED", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        MessageFactory.createWarningMessage("Z-bb4`]a_}", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("F.:A2A.,f");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("41bHEyzR_={yW%n,", "41bHEyzR_={yW%n,", (Object) "41bHEyzR_={yW%n,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("IRC", (Object) "IRC");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("", (Object) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      MessageFactory.instance = null;
      // Undeclared exception!
      try { 
        messageFactory0.createMessage();
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      Object[] objectArray0 = new Object[8];
      // Undeclared exception!
      try { 
        MessageFactory.createErrorMessage("", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createConnectionDroppedMessage((-1898), "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      assertNotNull(messageFactory0);
      
      Message message0 = MessageFactory.createMessage("", (Object) messageFactory0);
      MessageFactory.createMessage("41bHEyzR_={yW%n,", "41bHEyzR_={yW%n,", (Object) message0);
      assertEquals("*", message0.getRecipient());
      assertEquals("", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("Gangup or: How I learned to stop worrying and love the bomb");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        MessageFactory.createErrorMessage("", objectArray0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
