/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 18 01:30:21 GMT 2019
 */

package org.sat4j.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sat4j.core.VecInt;
import org.sat4j.minisat.constraints.CardinalityDataStructure;
import org.sat4j.minisat.constraints.CardinalityDataStructureYanMax;
import org.sat4j.minisat.constraints.CardinalityDataStructureYanMin;
import org.sat4j.minisat.constraints.card.AtLeast;
import org.sat4j.minisat.core.ILits;
import org.sat4j.minisat.core.Solver;
import org.sat4j.minisat.learning.ClauseOnlyLearning;
import org.sat4j.minisat.orders.SubsetVarOrder;
import org.sat4j.minisat.orders.TabuListDecorator;
import org.sat4j.minisat.restarts.MiniSATRestarts;
import org.sat4j.opt.MaxSatDecorator;
import org.sat4j.specs.Constr;
import org.sat4j.specs.IConstr;
import org.sat4j.specs.IVecInt;
import org.sat4j.specs.Lbool;
import org.sat4j.tools.DimacsStringSolver;
import org.sat4j.tools.DotSearchTracing;
import org.sat4j.tools.Minimal4CardinalityModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DotSearchTracing_ESTest extends DotSearchTracing_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "\"[label=\" ";
      int int0 = 48;
      DotSearchTracing<Integer> dotSearchTracing0 = new DotSearchTracing<Integer>(string0);
      ILits iLits0 = null;
      ClauseOnlyLearning<CardinalityDataStructureYanMax> clauseOnlyLearning0 = new ClauseOnlyLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      int[] intArray0 = new int[5];
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(subsetVarOrder0);
      MiniSATRestarts miniSATRestarts0 = new MiniSATRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(clauseOnlyLearning0, cardinalityDataStructureYanMax0, tabuListDecorator0, miniSATRestarts0);
      IVecInt iVecInt0 = solver0.createBlockingClauseForCurrentModel();
      AtLeast atLeast0 = new AtLeast(iLits0, iVecInt0, int0);
      dotSearchTracing0.learn(atLeast0);
      assertTrue(atLeast0.locked());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("b]");
      int int0 = 16;
      CardinalityDataStructureYanMin cardinalityDataStructureYanMin0 = new CardinalityDataStructureYanMin();
      VecInt vecInt0 = new VecInt();
      Constr constr0 = cardinalityDataStructureYanMin0.createUnregisteredCardinalityConstraint(vecInt0, int0);
      dotSearchTracing0.enqueueing(int0, constr0);
      assertEquals(16, constr0.requiredNumberOfSatisfiedLiterals());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DotSearchTracing<Integer> dotSearchTracing0 = new DotSearchTracing<Integer>("Ue@sC{avS5yv+");
      int int0 = (-2174);
      dotSearchTracing0.propagating(int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DotSearchTracing<Integer> dotSearchTracing0 = new DotSearchTracing<Integer>("E)n[1`IRcW[%n^5");
      dotSearchTracing0.start();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("xVx{oF{Jcg");
      Lbool lbool0 = Lbool.UNDEFINED;
      dotSearchTracing0.end(lbool0);
      dotSearchTracing0.start();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("S]szRe&m5Rj1 2,7");
      IVecInt iVecInt0 = VecInt.EMPTY;
      AtLeast atLeast0 = new AtLeast((ILits) null, iVecInt0, 90);
      dotSearchTracing0.conflictFound((IConstr) atLeast0, 90, 90);
      assertFalse(atLeast0.canBePropagatedMultipleTimes());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DotSearchTracing<Integer> dotSearchTracing0 = new DotSearchTracing<Integer>("Ue@sC{avS5yv+");
      dotSearchTracing0.assuming(0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DotSearchTracing<Integer> dotSearchTracing0 = new DotSearchTracing<Integer>("\" [label=\"\", shape=box, color=\"green\", style=filled]");
      Lbool lbool0 = Lbool.UNDEFINED;
      dotSearchTracing0.end(lbool0);
      assertEquals("U", lbool0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DotSearchTracing<CardinalityDataStructureYanMax> dotSearchTracing0 = new DotSearchTracing<CardinalityDataStructureYanMax>("\t\"null\" -- \"null.48.false\"[label=\" java.lang.Integer@0000000009\", fontcolor =green, color = green, style = bold]");
      CardinalityDataStructure cardinalityDataStructure0 = new CardinalityDataStructure();
      VecInt vecInt0 = new VecInt(3150, 715);
      Constr constr0 = cardinalityDataStructure0.createUnregisteredClause(vecInt0);
      // Undeclared exception!
      try { 
        dotSearchTracing0.conflictFound((IConstr) constr0, 715, 3150);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 715
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Lits", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DotSearchTracing<Solver<CardinalityDataStructureYanMax>> dotSearchTracing0 = new DotSearchTracing<Solver<CardinalityDataStructureYanMax>>("CLIbPut<V=;:rAy]");
      dotSearchTracing0.propagating(0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DotSearchTracing<CardinalityDataStructureYanMax> dotSearchTracing0 = new DotSearchTracing<CardinalityDataStructureYanMax>("");
      String string0 = dotSearchTracing0.map((-2108510591));
      assertEquals("-2108510591", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("s.");
      // Undeclared exception!
      try { 
        dotSearchTracing0.backtracking((-1103));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.sat4j.core.Vec", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("");
      dotSearchTracing0.beginLoop();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DotSearchTracing<Integer> dotSearchTracing0 = new DotSearchTracing<Integer>("\t\"null\" -- \"null.48.false\"[label=\" java.lang.Integer@0000000009\", fontcolor =green, color = green, style = bold]");
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      dotSearchTracing0.setMapping(hashMap0);
      String string0 = dotSearchTracing0.map((-2121949295));
      assertEquals("-2121949295", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DotSearchTracing<CardinalityDataStructureYanMax> dotSearchTracing0 = new DotSearchTracing<CardinalityDataStructureYanMax>("LADDER");
      // Undeclared exception!
      try { 
        dotSearchTracing0.learn((IConstr) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DotSearchTracing", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("");
      int[] intArray0 = new int[5];
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(10);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(dimacsStringSolver0, true);
      Minimal4CardinalityModel minimal4CardinalityModel0 = new Minimal4CardinalityModel(maxSatDecorator0);
      // Undeclared exception!
      try { 
        dotSearchTracing0.solutionFound(intArray0, minimal4CardinalityModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DotSearchTracing", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("\"[label=\" ");
      dotSearchTracing0.adding(2837);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DotSearchTracing<Solver<CardinalityDataStructureYanMax>> dotSearchTracing0 = new DotSearchTracing<Solver<CardinalityDataStructureYanMax>>("phase appearing in latest learned clause");
      Constr constr0 = Constr.TAUTOLOGY;
      dotSearchTracing0.enqueueing(1555, constr0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("s.");
      dotSearchTracing0.enqueueing(1441, (IConstr) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("*G1)YsL{9bUbf-r!");
      dotSearchTracing0.assuming((-2107042728));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DotSearchTracing<Solver<CardinalityDataStructureYanMax>> dotSearchTracing0 = new DotSearchTracing<Solver<CardinalityDataStructureYanMax>>("Y");
      dotSearchTracing0.delete((IConstr) null);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("\"[label=\" ");
      dotSearchTracing0.conflictFound(9);
  }
}
