/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 18 19:30:33 GMT 2019
 */

package org.ow2.proactive.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.ow2.proactive.utils.OperatingSystem;
import org.ow2.proactive.utils.OperatingSystemFamily;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OperatingSystem_ESTest extends OperatingSystem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.resolveOrError("Windows 10");
      assertEquals(OperatingSystem.WINDOWS_10, operatingSystem0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.resolve("AIX");
      assertEquals(OperatingSystem.AIX, operatingSystem0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OperatingSystem[] operatingSystemArray0 = OperatingSystem.values();
      assertEquals(25, operatingSystemArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.valueOf("WINDOWS_2003");
      assertEquals(OperatingSystemFamily.WINDOWS, operatingSystem0.getFamily());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        OperatingSystem.resolveOrError((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        OperatingSystem.resolve((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.resolveOrError("Windows 7");
      assertEquals(OperatingSystem.WINDOWS_7, operatingSystem0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        OperatingSystem.resolveOrError("-CE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Operating System -CE
         //
         verifyException("org.ow2.proactive.utils.OperatingSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.resolve("Digital Unix");
      assertEquals(OperatingSystem.DIGITAL_UNIX, operatingSystem0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OperatingSystem.resolve("gtM_TYIo1|");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.WINDOWS_2000;
      String string0 = operatingSystem0.getLabel();
      assertEquals("Windows 2000", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.WINDOWS_NT;
      OperatingSystemFamily operatingSystemFamily0 = operatingSystem0.getFamily();
      assertEquals(OperatingSystemFamily.WINDOWS, operatingSystemFamily0);
  }
}
