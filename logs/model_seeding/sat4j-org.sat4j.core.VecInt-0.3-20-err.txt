[MASTER] 04:58:34.676 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 05:03:08.507 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_55_1550548988427/org/sat4j/core/VecInt_55_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_55_1550548988427/org/sat4j/core/VecInt_55_tmp__ESTest_scaffolding.java]]
[MASTER] 05:03:08.507 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 05:03:08.507 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 05:03:08.519 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method access$100(org.sat4j.core.VecInt)
  location: class org.sat4j.core.VecInt: 38
[MASTER] 05:03:08.519 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_55_1550548988427/org/sat4j/core/VecInt_55_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 05:03:08.519 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 05:03:08.536 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_55_1550548988427/org/sat4j/core/VecInt_55_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Feb 19 04:03:08 GMT 2019
4:  */
5: 
6: package org.sat4j.core;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.Comparator;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.ViolatedAssumptionAnswer;
16: import org.junit.runner.RunWith;
17: import org.sat4j.core.VecInt;
18: 
19: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
20: public class VecInt_55_tmp__ESTest extends VecInt_55_tmp__ESTest_scaffolding {
21: 
22:   @Test(timeout = 4000)
23:   public void test0()  throws Throwable  {
24:       int int0 = 0;
25:       VecInt vecInt0 = new VecInt(0, 0);
26:       assertNotNull(vecInt0);
27:       assertTrue(vecInt0.isEmpty());
28:       assertEquals(0, vecInt0.size());
29:       
30:       Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
31:       vecInt0.sort(2578, 2578, comparator0);
32:       assertTrue(vecInt0.isEmpty());
33:       assertEquals(0, vecInt0.size());
34:       
35:       VecInt vecInt1 = null;
36:       // Undeclared exception!
37:       try { 
38:         VecInt.access$100((VecInt) null);
39:         fail("Expecting exception: NullPointerException");
40:       
41:       } catch(NullPointerException e) {
42:          //
43:          // no message in exception (getMessage() returned null)
44:          //
45:          verifyException("org.sat4j.core.VecInt", e);
46:       }
47:   }
48: }
RegularFileObject[/tmp/EvoSuite_55_1550548988427/org/sat4j/core/VecInt_55_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Feb 19 04:03:08 GMT 2019
5:  */
6: 
7: package org.sat4j.core;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class VecInt_55_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.core.VecInt"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(VecInt_55_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.sat4j.core.ReadOnlyVecInt",
84:       "org.sat4j.specs.IteratorInt",
85:       "org.sat4j.core.VecInt$1",
86:       "org.sat4j.specs.IVecInt",
87:       "org.sat4j.core.EmptyVecInt",
88:       "org.sat4j.core.VecInt",
89:       "org.sat4j.core.EmptyVecInt$1"
90:     );
91:   } 
92:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
93:     mock(Class.forName("java.util.Comparator", false, VecInt_55_tmp__ESTest_scaffolding.class.getClassLoader()));
94:   }
95: 
96:   private static void resetClasses() {
97:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(VecInt_55_tmp__ESTest_scaffolding.class.getClassLoader()); 
98: 
99:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
100:       "org.sat4j.core.EmptyVecInt",
101:       "org.sat4j.core.VecInt",
102:       "org.sat4j.core.VecInt$1",
103:       "org.sat4j.core.EmptyVecInt$1",
104:       "org.sat4j.core.ReadOnlyVecInt"
105:     );
106:   }
107: }

[MASTER] 05:03:08.536 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
int int0 = 0;
VecInt vecInt0 = new VecInt(0, 0);
assertNotNull(vecInt0);
assertTrue(vecInt0.isEmpty());
assertEquals(0, vecInt0.size());

Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
vecInt0.sort(2578, 2578, comparator0);
assertTrue(vecInt0.isEmpty());
assertEquals(0, vecInt0.size());

VecInt vecInt1 = null;
VecInt.access$100((VecInt) null);

