/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 10:37:46 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.backup((-65));
      stringReader0.skip((-3165));
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('g');
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-65), (-3165));
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txgBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      JavaCharStream.hexval('5');
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JavaCharStream.hexval('8');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-536), (-536), (-1124));
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(1);
      stringReader0.markSupported();
      javaCharStream0.adjustBeginLineColumn(60, 1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.getBeginColumn();
      JavaCharStream.hexval('h');
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.getBeginLine();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte) (-89);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-97);
      byteArray0[5] = (byte)87;
      byteArray0[6] = (byte)92;
      byteArray0[7] = (byte)114;
      // Undeclared exception!
      try { 
        pipedInputStream0.read(byteArray0, 0, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)11;
      byte[] byteArray1 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.mark(91);
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":V{2} k,=IFJ.");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'w';
      charArray0[1] = 'O';
      charArray0[2] = '}';
      charArray0[3] = '(';
      charArray0[4] = 'u';
      charArray0[5] = '?';
      charArray0[6] = '}';
      charArray0[7] = '\'';
      charArray0[8] = 't';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1660, (byte)92, 1660);
      javaCharStream0.readChar();
      stringReader0.close();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      InputStream inputStream0 = null;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 13, (-1362), 1169);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2535, 2048);
      javaCharStream0.backup(2048);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)29;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte)84;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2249), (byte)60);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, (byte)84);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0, 93);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream1, 0, 949);
      javaCharStream0.backup((byte)11);
      bufferedInputStream0.mark((byte)84);
      javaCharStream0.backup(88);
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":V{2} k,=IFJ.");
      stringReader0.ready();
      stringReader0.read();
      stringReader0.close();
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1033), (-1033), 0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)29;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte)84;
      byteArray0[7] = (byte) (-17);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2232), (byte)60);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, (byte)84);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0, 93);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream1, 0, 949);
      javaCharStream0.bufsize = 96;
      javaCharStream0.backup((byte)11);
      bufferedInputStream0.mark((byte)84);
      javaCharStream0.backup((byte)11);
      javaCharStream0.backup((byte) (-17));
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 64);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 12);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0, 61);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 12, 1);
      bufferedInputStream0.markSupported();
      javaCharStream0.backup(508);
      bufferedInputStream0.mark(916);
      javaCharStream0.backup(237);
      javaCharStream0.backup(916);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(276, 75);
      javaCharStream0.backup((-875));
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      bufferedInputStream0.skip((-1L));
      javaCharStream0.GetSuffix(1695);
      javaCharStream0.getLine();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 1, 1);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReInit((Reader) stringReader0, 77, 1);
      javaCharStream0.adjustBeginLineColumn(1, 76);
      JavaCharStream.hexval('');
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)0);
      byteArrayInputStream0.skip((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, (byte)0);
      pushbackInputStream0.unread(byteArray0, 0, (int) (byte)0);
      javaCharStream0.GetImage();
      pushbackInputStream0.markSupported();
      pushbackInputStream0.unread(byteArray0);
      byteArrayInputStream0.skip(3356L);
      javaCharStream0.backup(0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JavaCharStream.hexval('e');
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "*>W>9txgBcS'Fc+,";
      StringReader stringReader0 = new StringReader("*>W>9txgBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      javaCharStream0.FillBuff();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      char char0 = '[';
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn((-3161), (-3161));
      javaCharStream0.ReadByte();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((-2341));
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 19, (byte)0);
      javaCharStream0.ExpandBuff(false);
      // Undeclared exception!
      try { 
        pushbackInputStream0.unread(byteArray0, 19, (int) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.GetSuffix(0);
      javaCharStream0.bufline = null;
      javaCharStream0.Done();
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0, (-303), (-1465), 2824);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-53);
      byteArray0[2] = (byte) (-26);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)68;
      byteArray0[6] = (byte) (-88);
      byteArray0[7] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)29;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte)84;
      byteArray0[7] = (byte) (-17);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2249), (byte)60);
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      char char0 = '^';
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("4_");
      stringReader0.markSupported();
      stringReader0.read();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-92);
      byteArray0[1] = (byte)78;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte) (-92);
      byteArray0[5] = (byte)96;
      byteArray0[6] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-92), (-728));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 60, 12);
      javaCharStream0.backup((byte)96);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      bufferedInputStream0.mark((byte)78);
      javaCharStream0.backup(0);
      javaCharStream0.backup(3358);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-2125), (byte)96);
      javaCharStream0.backup(15);
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-1718), (-1718), (-1718));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.backup(288);
      javaCharStream0.backup(288);
      stringReader0.reset();
      javaCharStream0.UpdateLineColumn('L');
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-1169), (-1169));
      javaCharStream0.GetImage();
      javaCharStream0.getEndLine();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte)7;
      byteArray0[7] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-517), (byte)59);
      byteArrayInputStream0.mark((byte)7);
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.GetSuffix(0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("egzqET");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2220), (-2220));
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txgBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      JavaCharStream.hexval('6');
      javaCharStream0.ReadByte();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, (byte)0);
      pushbackInputStream0.unread(byteArray0, 0, (int) (byte)0);
      javaCharStream0.GetImage();
      pushbackInputStream0.markSupported();
      pushbackInputStream0.unread(byteArray0);
      byteArrayInputStream0.skip(3356L);
      javaCharStream0.backup(0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(0, 1775);
      javaCharStream0.adjustBeginLineColumn(117, 0);
      javaCharStream0.ReadByte();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":V{2} k,=IFJ.");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1660, (byte)92, 1660);
      javaCharStream0.readChar();
      stringReader0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1033), (-1033), 0);
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("/f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 959);
      javaCharStream1.ReInit((InputStream) pipedInputStream0, (-2381), 649);
      StringReader stringReader1 = new StringReader("/f");
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JavaCharStream.hexval('E');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      javaCharStream0.backup((-65));
      javaCharStream0.backup((-65));
      javaCharStream0.backup((-3165));
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 56, 53);
      javaCharStream1.adjustBeginLineColumn(1, 0);
      javaCharStream1.ReInit((Reader) stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.FillBuff();
      javaCharStream1.FillBuff();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JavaCharStream.hexval('d');
      JavaCharStream.hexval('d');
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream.hexval('e');
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaCharStream.hexval('8');
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 64);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 12);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0, 61);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 12, 1);
      javaCharStream0.backup(508);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(byteArrayInputStream0, 508);
      bufferedInputStream2.mark(916);
      javaCharStream0.backup(237);
      javaCharStream0.backup(916);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(276, 75);
      javaCharStream0.backup((-875));
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.ExpandBuff(true);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, (-2228));
      javaCharStream0.backup(0);
      JavaCharStream.hexval('e');
      JavaCharStream.hexval('F');
      javaCharStream0.getEndColumn();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txgBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      javaCharStream0.FillBuff();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 725, 1010);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, 96, 524);
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream1 = new JavaCharStream(reader0);
      javaCharStream1.GetSuffix(68);
      javaCharStream1.backup(68);
      javaCharStream0.backup(0);
      javaCharStream1.backup(68);
      javaCharStream1.readChar();
      javaCharStream1.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(68, 47);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("*>W>9txgBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-1370), 4083, (-1370));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JavaCharStream.hexval('B');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("/f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("/f");
      stringReader1.ready();
      JavaCharStream.hexval('3');
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(1665, 3645);
      javaCharStream0.AdjustBuffSize();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JavaCharStream.hexval('E');
      PipedInputStream pipedInputStream0 = new PipedInputStream(14);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('E');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)29;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte)84;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2249), (byte)60);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, (byte)84);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0, 93);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream1, 0, 949);
      javaCharStream0.backup((byte)11);
      bufferedInputStream0.mark((byte)84);
      javaCharStream0.backup((byte)11);
      javaCharStream0.backup((byte) (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(10, (-1054));
      javaCharStream0.backup((byte) (-1));
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 11, 0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream.hexval('A');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (-1108));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      stringReader0.skip(1L);
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = (-776);
      javaCharStream0.backup((-776));
      stringReader0.markSupported();
      int int1 = 4082;
      javaCharStream0.available = 1358;
      javaCharStream0.adjustBeginLineColumn(1358, 4082);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = (-1);
      char[] charArray0 = new char[2];
      javaCharStream0.prevCharIsCR = false;
      charArray0[0] = '=';
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      try { 
        JavaCharStream.hexval('}');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, (byte)0);
      pushbackInputStream0.unread(byteArray0, 0, (int) (byte)0);
      String string0 = javaCharStream0.GetImage();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      pushbackInputStream0.markSupported();
      StringReader stringReader0 = new StringReader(string0);
      stringReader0.read();
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0, 0, (-303), 4061);
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char char0 = '_';
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 1, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.GetSuffix(0);
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      javaCharStream0.backup((-65));
      javaCharStream0.backup((-65));
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-65), (-3165));
      javaCharStream0.backup(75);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream.hexval('a');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 240);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("k:jOxk");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, 2916, 2112);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 92, (-2586), 653);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('S');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JavaCharStream.hexval('B');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("/f");
      JavaCharStream.hexval('B');
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte) (-30);
      JavaCharStream.hexval('B');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-663), (-1));
      javaCharStream0.Done();
      sequenceInputStream0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-663));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 64);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 12);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0, 61);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 12, 1);
      javaCharStream0.backup(508);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(byteArrayInputStream0, 508);
      bufferedInputStream2.mark(916);
      javaCharStream0.backup(237);
      javaCharStream0.backup(916);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(276, 75);
      javaCharStream0.backup((-875));
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(1695);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      char char0 = 'S';
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JavaCharStream.hexval('B');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader(".");
      char[] charArray0 = new char[5];
      charArray0[0] = '5';
      charArray0[1] = 'm';
      charArray0[2] = 'p';
      charArray0[3] = 'n';
      charArray0[4] = '';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-691), (-691));
      javaCharStream0.FillBuff();
      int[] intArray0 = new int[0];
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)121;
      byteArray0[5] = (byte) (-104);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 965, 0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte) (-1), (-1));
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte) (-1), (int) (byte)0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      sequenceInputStream0.available();
      int int0 = (-1184);
      int int1 = 92;
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1184), 92, 209);
      javaCharStream0.nextCharBuf = null;
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JavaCharStream.hexval('E');
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('b');
      JavaCharStream.hexval('E');
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9FxgBcS'Fc{+,");
      JavaCharStream.hexval('c');
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, (-1074), 47, 1);
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.prevCharIsCR = false;
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      char char0 = 'e';
      JavaCharStream.hexval('8');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("/f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("PJ&>");
      stringReader0.ready();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2048, 2048);
      javaCharStream0.backup(2048);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.skip((-1967L));
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 3;
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 3, 449, 449);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      int int0 = 0;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.GetSuffix(0);
      javaCharStream0.bufline = null;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      javaCharStream0.backup((-65));
      javaCharStream0.backup((-65));
      javaCharStream0.backup((-3165));
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 56, 53);
      javaCharStream1.adjustBeginLineColumn(1, 0);
      javaCharStream1.backup(1);
      JavaCharStream.hexval('7');
      try { 
        JavaCharStream.hexval('|');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.prevCharIsCR = true;
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('.');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte)84;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2249), (byte)46);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, (byte)84);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0, 93);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream1, 0, 949);
      javaCharStream0.backup((byte)11);
      bufferedInputStream0.mark((byte)84);
      javaCharStream0.backup((byte)11);
      javaCharStream0.backup((byte) (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(10, (-1054));
      javaCharStream0.backup((byte) (-1));
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      char char0 = 'T';
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.backup(82);
      javaCharStream0.UpdateLineColumn('/');
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(0, 2320);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JavaCharStream.hexval('0');
      JavaCharStream.hexval('0');
      StringReader stringReader0 = new StringReader(" -qOsT8$>cv!7#Ue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3348), (-3348), 771);
      javaCharStream0.adjustBeginLineColumn(67, 0);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("/f");
      stringReader1.ready();
      JavaCharStream.hexval('a');
      try { 
        JavaCharStream.hexval('\"');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("/f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("/f");
      stringReader0.ready();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)29;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte)84;
      byteArray0[7] = (byte) (-17);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2249), (byte)60);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, (byte)84);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0, 93);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream1, 0, 949);
      javaCharStream0.backup((byte)11);
      bufferedInputStream0.mark((byte)84);
      javaCharStream0.backup((byte)11);
      javaCharStream0.backup((byte) (-17));
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 47, 47, 47);
      int[] intArray0 = new int[7];
      intArray0[0] = 47;
      intArray0[1] = 47;
      intArray0[2] = 47;
      intArray0[3] = (-1);
      intArray0[4] = 47;
      intArray0[5] = (-1);
      intArray0[6] = 1;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)103;
      byteArray0[2] = (byte)103;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('\\');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      try { 
        JavaCharStream.hexval(',');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 82);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      JavaCharStream.hexval('6');
      StringReader stringReader0 = new StringReader("`en<\"Txg-Qq\"Oy[<}");
      javaCharStream0.ReInit((Reader) stringReader0, 82, 4096, 4096);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-130), (byte)92, (-130));
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JavaCharStream.hexval('3');
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txgBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      JavaCharStream.hexval('5');
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-86);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)44;
      byteArray0[5] = (byte)95;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)44, (byte)95);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(1188, (byte)95);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((-1), (-2498));
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-2498));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9FxgBcS'Fc{+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 273, 56);
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream2 = new JavaCharStream(reader0);
      javaCharStream2.GetSuffix(68);
      javaCharStream2.backup(68);
      javaCharStream2.backup(68);
      javaCharStream2.backup(68);
      javaCharStream2.readChar();
      javaCharStream2.adjustBeginLineColumn((-1), (-1));
      javaCharStream2.backup(2241);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?.NpZV*Y~v9-x,;nTS");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      InputStream inputStream0 = null;
      javaCharStream0.ReInit((Reader) stringReader0, 209, 209);
      javaCharStream0.ReadByte();
      int int0 = (-1995);
      int int1 = 4096;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 940);
      stringReader0.close();
      try { 
        bufferedInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JavaCharStream.hexval('8');
      JavaCharStream.hexval('8');
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 2798, 1198, (-1234));
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)92, (byte)92, (byte)92);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte)84;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2249), (byte)60);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, (byte)84);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0, 93);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream1, 0, 949);
      javaCharStream0.backup((byte)11);
      bufferedInputStream0.mark((byte)84);
      javaCharStream0.UpdateLineColumn('^');
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaCharStream.hexval('4');
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 19, (byte)0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JavaCharStream.hexval('B');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[5];
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 47, 47, 47);
      int[] intArray0 = new int[7];
      intArray0[0] = 47;
      intArray0[1] = 47;
      intArray0[2] = 47;
      intArray0[3] = (-1);
      intArray0[4] = 47;
      intArray0[5] = (-1);
      intArray0[6] = 1;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)103;
      byteArray0[2] = (byte) (-44);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte)110, 0, 1);
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('\\');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 64);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0, 61);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 64, 1);
      javaCharStream0.backup(508);
      bufferedInputStream0.mark(916);
      javaCharStream0.backup(237);
      javaCharStream0.backup(916);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(276, 75);
      javaCharStream0.backup((-882));
      javaCharStream0.getEndColumn();
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JavaCharStream.hexval('8');
      JavaCharStream.hexval('8');
      StringReader stringReader0 = new StringReader("A@PQc0- u7/9}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetSuffix(8);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JavaCharStream.hexval('2');
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.backup((-65));
      javaCharStream0.backup((-65));
      javaCharStream0.UpdateLineColumn('g');
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-65), (-3165));
      javaCharStream0.GetImage();
      javaCharStream0.getLine();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":V{2} k,=IFJ.");
      stringReader0.close();
      JavaCharStream.hexval('4');
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)92, (byte)92, (byte)92);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JavaCharStream.hexval('8');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, '8', '8', (-1124));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0);
      char[] charArray0 = new char[4];
      charArray0[0] = '*';
      charArray0[1] = ';';
      charArray0[2] = 'c';
      charArray0[3] = 'L';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.bufsize = 0;
      javaCharStream0.ReInit((Reader) null);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":V{2} k,=IFJ.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1033), (-1033), 0);
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      String string0 = "/f";
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.ready();
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-373), 422, 1382);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      char char0 = 'G';
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('c');
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JavaCharStream.hexval('B');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte) (-30);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":V{2} k,=IFJ.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((-1));
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream1.readChar();
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":V{2} k,=IFJ.");
      stringReader0.close();
      int int0 = (-1033);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1033), (-1033), 0);
      stringReader0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 0, 0);
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 44, 636, 3413);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.GetSuffix(0);
      javaCharStream1.backup((-65));
      javaCharStream1.backup(0);
      javaCharStream0.backup(0);
      javaCharStream1.BeginToken();
      javaCharStream1.readChar();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 1, 1238);
      javaCharStream2.adjustBeginLineColumn(1667, 0);
      javaCharStream2.backup(1);
      JavaCharStream.hexval('W');
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)0);
      StringReader stringReader0 = new StringReader("/f");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, (byte)0, 47);
      javaCharStream0.GetSuffix(12);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 12);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.read();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArrayInputStream0.mark((byte)0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u,A?6P}6A@Wk&cZ");
      int int0 = 61;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 61, 61, 61);
      javaCharStream0.backup(1);
      char char0 = 'b';
      JavaCharStream.hexval('b');
      StringReader stringReader1 = new StringReader("/f");
      stringReader1.close();
      try { 
        stringReader1.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      JavaCharStream.hexval('2');
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)29;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte) (-53);
      JavaCharStream.hexval('C');
      JavaCharStream.hexval('C');
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.backup((-65));
      javaCharStream0.backup((-65));
      javaCharStream0.UpdateLineColumn('g');
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-65), (-3165));
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      char char0 = 'J';
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":V{2} k,=IFJ.");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream.hexval('f');
      JavaCharStream.hexval('f');
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, (byte)0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      charArray0[1] = '\"';
      javaCharStream0.buffer = charArray0;
      pushbackInputStream0.unread(byteArray0, 0, (int) (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, (byte)0);
      pushbackInputStream0.unread(byteArray0, 0, (int) (byte)0);
      javaCharStream0.GetImage();
      pushbackInputStream0.markSupported();
      pushbackInputStream0.unread(byteArray0);
      byteArrayInputStream0.skip(3356L);
      javaCharStream0.backup(0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.backup((-1901));
      javaCharStream0.available = 386;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.GetSuffix(0);
      javaCharStream0.backup(490);
      javaCharStream0.bufline = null;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9FxgBcS'Fc{+,");
      StringReader stringReader1 = new StringReader("*>W>9FxgBcS'Fc{+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1238, 0, 0);
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream1 = new JavaCharStream(reader0);
      javaCharStream1.GetSuffix(68);
      javaCharStream1.backup(68);
      javaCharStream1.backup(68);
      javaCharStream1.backup(68);
      javaCharStream1.BeginToken();
      javaCharStream1.readChar();
      javaCharStream1.adjustBeginLineColumn(1, 20);
      javaCharStream0.backup(3893);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, (byte)0);
      pushbackInputStream0.unread(byteArray0, 0, (int) (byte)0);
      javaCharStream0.GetImage();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      pushbackInputStream0.markSupported();
      pushbackInputStream0.unread(byteArray0);
      byteArrayInputStream0.skip(3356L);
      javaCharStream0.backup(0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(0, 1775);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0, 1, (int) (byte)0, (int) (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)92, (byte)92, (byte)92);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      mockFileInputStream0.read(byteArray0, (int) (byte) (-1), (int) (byte) (-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-1), (-1), 1559);
      javaCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      JavaCharStream.hexval('7');
      JavaCharStream.hexval('7');
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 59;
      stringReader0.skip(59);
      stringReader0.mark(59);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 59, 59);
      javaCharStream0.maxNextCharInd = 59;
      javaCharStream0.bufcolumn = null;
      javaCharStream0.bufsize = 59;
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(1L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaCharStream0.available = 1358;
      javaCharStream0.adjustBeginLineColumn(1358, 4082);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*>W>9txBcS'Fc+,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.backup((-65));
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)93;
      byteArray0[0] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 64, 60);
      byteArrayInputStream0.mark((-3165));
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)92, (byte)92, (byte)92);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      char char0 = 'L';
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("-[hZ+RSvb~|zFK.!Ro7");
      int int0 = 1212;
      int int1 = 280;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 280, 280, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(80);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      JavaCharStream.hexval('D');
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)92;
      byteArray0[6] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)0, 1247, (byte)92);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, (byte)0);
      pushbackInputStream0.unread(byteArray0, 0, (int) (byte)0);
      String string0 = javaCharStream0.GetImage();
      pushbackInputStream0.markSupported();
      StringReader stringReader0 = new StringReader(string0);
      stringReader0.read();
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0, 0, (-303), 4061);
      javaCharStream0.backup((byte)0);
      javaCharStream0.getEndLine();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, (byte)0);
      javaCharStream0.GetImage();
      pushbackInputStream0.markSupported();
      pushbackInputStream0.unread(byteArray0);
      byteArrayInputStream0.skip(3356L);
      javaCharStream0.backup(0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-2124), 4);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-2124));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      JavaCharStream.hexval('d');
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.backup(0);
      javaCharStream0.backup(82);
      javaCharStream0.UpdateLineColumn('/');
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(0, 2320);
      assertEquals(4014, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(91);
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
