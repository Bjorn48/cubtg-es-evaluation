/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 07:30:50 GMT 2019
 */

package org.sat4j.minisat.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;
import org.sat4j.minisat.core.SolverStats;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SolverStats_ESTest extends SolverStats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incImportedUnits(1);
      assertEquals(1, solverStats0.getImportedUnits());
      
      solverStats0.incImportedUnits((-1));
      assertEquals(0, solverStats0.getImportedUnits());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incRootSimplifications();
      solverStats0.incUpdateLBD();
      assertEquals(1L, solverStats0.getUpdateLBD());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incReducedliterals(2277);
      solverStats0.incUpdateLBD();
      assertEquals(2277L, solverStats0.getReducedliterals());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incDecisions();
      solverStats0.incUpdateLBD();
      assertEquals(1L, solverStats0.getDecisions());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedternaryclauses();
      solverStats0.incUpdateLBD();
      assertEquals(1L, solverStats0.getUpdateLBD());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incConflicts();
      solverStats0.incUpdateLBD();
      assertEquals(1L, solverStats0.getConflicts());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incChangedreason();
      solverStats0.incUpdateLBD();
      assertEquals(1L, solverStats0.getChangedreason());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedliterals();
      solverStats0.incUpdateLBD();
      assertEquals(1L, solverStats0.getUpdateLBD());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedbinaryclauses();
      solverStats0.incUpdateLBD();
      assertEquals(1L, solverStats0.getLearnedbinaryclauses());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedclauses();
      solverStats0.incUpdateLBD();
      assertEquals(1L, solverStats0.getLearnedclauses());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incIgnoredclauses();
      solverStats0.incUpdateLBD();
      assertEquals(1L, solverStats0.getUpdateLBD());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incPropagations();
      solverStats0.incUpdateLBD();
      assertEquals(1L, solverStats0.getPropagations());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incInspects();
      solverStats0.incUpdateLBD();
      assertEquals(1L, solverStats0.getInspects());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incImportedUnits((-1));
      solverStats0.incShortcuts();
      assertEquals(1, solverStats0.getShortcuts());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incStarts();
      solverStats0.incShortcuts();
      assertEquals(1, solverStats0.getStarts());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incReduceddb();
      solverStats0.incShortcuts();
      assertEquals(1, solverStats0.getReduceddb());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incReduceddb();
      solverStats0.incReduceddb();
      assertEquals(2, solverStats0.getReduceddb());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incChangedreason();
      solverStats0.incChangedreason();
      assertEquals(2L, solverStats0.getChangedreason());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incRootSimplifications();
      solverStats0.incReducedliterals(1);
      assertEquals(1L, solverStats0.getRootSimplifications());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incDecisions();
      solverStats0.incReducedliterals(0);
      assertEquals(1L, solverStats0.getDecisions());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedternaryclauses();
      solverStats0.incReducedliterals((-284));
      assertEquals(1L, solverStats0.getLearnedternaryclauses());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incConflicts();
      solverStats0.incReducedliterals((-1));
      assertEquals((-1L), solverStats0.getReducedliterals());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incChangedreason();
      solverStats0.incReducedliterals((-1));
      assertEquals((-1L), solverStats0.getReducedliterals());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedliterals();
      solverStats0.incReducedliterals(0);
      assertEquals(1L, solverStats0.getLearnedliterals());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incUpdateLBD();
      solverStats0.incReducedliterals(0);
      assertEquals(1L, solverStats0.getUpdateLBD());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedbinaryclauses();
      solverStats0.incReducedliterals(2277);
      assertEquals(1L, solverStats0.getLearnedbinaryclauses());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedclauses();
      solverStats0.incReducedliterals(0);
      assertEquals(1L, solverStats0.getLearnedclauses());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incIgnoredclauses();
      solverStats0.incReducedliterals(0);
      assertEquals(1L, solverStats0.getIgnoredclauses());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incPropagations();
      solverStats0.incReducedliterals(0);
      assertEquals(1L, solverStats0.getPropagations());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incInspects();
      solverStats0.incReducedliterals(0);
      assertEquals(1L, solverStats0.getInspects());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incRootSimplifications();
      solverStats0.incRootSimplifications();
      assertEquals(2L, solverStats0.getRootSimplifications());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incRootSimplifications();
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getRootSimplifications());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incReducedliterals(1);
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getIgnoredclauses());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incDecisions();
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getIgnoredclauses());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedternaryclauses();
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getIgnoredclauses());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incConflicts();
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getConflicts());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incChangedreason();
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getIgnoredclauses());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedliterals();
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getIgnoredclauses());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incUpdateLBD();
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getIgnoredclauses());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedbinaryclauses();
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getLearnedbinaryclauses());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedclauses();
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getLearnedclauses());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incPropagations();
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getIgnoredclauses());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incInspects();
      solverStats0.incIgnoredclauses();
      assertEquals(1L, solverStats0.getInspects());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedclauses();
      solverStats0.incLearnedclauses();
      assertEquals(2L, solverStats0.getLearnedclauses());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedternaryclauses();
      solverStats0.incLearnedternaryclauses();
      assertEquals(2L, solverStats0.getLearnedternaryclauses());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedbinaryclauses();
      solverStats0.incLearnedbinaryclauses();
      assertEquals(2L, solverStats0.getLearnedbinaryclauses());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incRootSimplifications();
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getRootSimplifications());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incReducedliterals(1);
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getReducedliterals());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incDecisions();
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getDecisions());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedternaryclauses();
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getLearnedternaryclauses());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incConflicts();
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getConflicts());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incChangedreason();
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getLearnedliterals());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incUpdateLBD();
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getUpdateLBD());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedbinaryclauses();
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getLearnedbinaryclauses());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedclauses();
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getLearnedliterals());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incIgnoredclauses();
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getIgnoredclauses());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incPropagations();
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getPropagations());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incInspects();
      solverStats0.incLearnedliterals();
      assertEquals(1L, solverStats0.getInspects());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incConflicts();
      solverStats0.incConflicts();
      assertEquals(2L, solverStats0.getConflicts());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incInspects();
      solverStats0.incInspects();
      assertEquals(2L, solverStats0.getInspects());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incPropagations();
      solverStats0.incPropagations();
      assertEquals(2L, solverStats0.getPropagations());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incDecisions();
      solverStats0.incDecisions();
      assertEquals(2L, solverStats0.getDecisions());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incImportedUnits((-544));
      solverStats0.incStarts();
      assertEquals((-544), solverStats0.getImportedUnits());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incReduceddb();
      solverStats0.incStarts();
      assertEquals(1, solverStats0.getReduceddb());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incShortcuts();
      solverStats0.incStarts();
      assertEquals(1, solverStats0.getShortcuts());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 829);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      solverStats0.incShortcuts();
      solverStats0.printStat(mockPrintWriter0, "o+gC");
      assertEquals(1, solverStats0.getShortcuts());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incStarts();
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      PrintWriter printWriter0 = new PrintWriter(writer0);
      solverStats0.printStat(printWriter0, "<*+94=J/ jx*:;Av");
      assertEquals(1, solverStats0.getStarts());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incInspects();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 829);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      solverStats0.printStat(mockPrintWriter0, "");
      assertEquals(1L, solverStats0.getInspects());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedternaryclauses();
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      PrintWriter printWriter0 = new PrintWriter(writer0);
      solverStats0.printStat(printWriter0, "<il0w6jjW[\"5B");
      assertEquals(1L, solverStats0.getLearnedternaryclauses());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incChangedreason();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 829);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      solverStats0.printStat(mockPrintWriter0, "/18hr,dxIZPM|\"7\"!-");
      assertEquals(1L, solverStats0.getChangedreason());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 829);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      solverStats0.incLearnedliterals();
      solverStats0.printStat(mockPrintWriter0, "o+gC");
      assertEquals(1L, solverStats0.getLearnedliterals());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incUpdateLBD();
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      PrintWriter printWriter0 = new PrintWriter(writer0);
      solverStats0.printStat(printWriter0, "<il0w6jjW[\"5B");
      assertEquals(1L, solverStats0.getUpdateLBD());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 829);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      solverStats0.incLearnedbinaryclauses();
      solverStats0.printStat(mockPrintWriter0, "o+gC");
      assertEquals(1L, solverStats0.getLearnedbinaryclauses());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedclauses();
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      PrintWriter printWriter0 = new PrintWriter(writer0);
      solverStats0.printStat(printWriter0, "<*+94=J/ jx*:;Av");
      assertEquals(1L, solverStats0.getLearnedclauses());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 829);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      solverStats0.incIgnoredclauses();
      solverStats0.printStat(mockPrintWriter0, "o+gC");
      assertEquals(1L, solverStats0.getIgnoredclauses());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incPropagations();
      Writer writer0 = mock(Writer.class, new ViolatedAssumptionAnswer());
      PrintWriter printWriter0 = new PrintWriter(writer0);
      solverStats0.printStat(printWriter0, "<il0w6jjW[\"5B");
      assertEquals(1L, solverStats0.getPropagations());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incDecisions();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 829);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      solverStats0.printStat(mockPrintWriter0, "/18hr,dxIZPM|\"7\"!-");
      assertEquals(1L, solverStats0.getDecisions());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incConflicts();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 829);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      solverStats0.printStat(mockPrintWriter0, "/18hr,dxIZPM|\"7\"!-");
      assertEquals(1L, solverStats0.getConflicts());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incReducedliterals((-1));
      long long0 = solverStats0.getReducedliterals();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incImportedUnits(2062);
      int int0 = solverStats0.getImportedUnits();
      assertEquals(2062, int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      int int0 = solverStats0.getStarts();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      Map<String, Number> map0 = solverStats0.toMap();
      assertEquals(17, map0.size());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getChangedreason();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getReducedliterals();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incRootSimplifications();
      long long0 = solverStats0.getRootSimplifications();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incChangedreason();
      long long0 = solverStats0.getChangedreason();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedliterals();
      long long0 = solverStats0.getLearnedliterals();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getLearnedternaryclauses();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedbinaryclauses();
      long long0 = solverStats0.getLearnedbinaryclauses();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getUpdateLBD();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getDecisions();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedclauses();
      long long0 = solverStats0.getLearnedclauses();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getInspects();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incStarts();
      int int0 = solverStats0.getStarts();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.reset();
      assertEquals(0L, solverStats0.getInspects());
      assertEquals(0L, solverStats0.getConflicts());
      assertEquals(0, solverStats0.getReduceddb());
      assertEquals(0L, solverStats0.getLearnedclauses());
      assertEquals(0L, solverStats0.getChangedreason());
      assertEquals(0L, solverStats0.getLearnedternaryclauses());
      assertEquals(0L, solverStats0.getDecisions());
      assertEquals(0L, solverStats0.getLearnedliterals());
      assertEquals(0L, solverStats0.getReducedliterals());
      assertEquals(0L, solverStats0.getUpdateLBD());
      assertEquals(0, solverStats0.getStarts());
      assertEquals(0L, solverStats0.getRootSimplifications());
      assertEquals(0L, solverStats0.getPropagations());
      assertEquals(0, solverStats0.getShortcuts());
      assertEquals(0, solverStats0.getImportedUnits());
      assertEquals(0L, solverStats0.getIgnoredclauses());
      assertEquals(0L, solverStats0.getLearnedbinaryclauses());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getPropagations();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incImportedUnits((-544));
      int int0 = solverStats0.getImportedUnits();
      assertEquals((-544), int0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getConflicts();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getIgnoredclauses();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getLearnedbinaryclauses();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incReducedliterals(2277);
      long long0 = solverStats0.getReducedliterals();
      assertEquals(2277L, long0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incInspects();
      long long0 = solverStats0.getInspects();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incConflicts();
      long long0 = solverStats0.getConflicts();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incShortcuts();
      int int0 = solverStats0.getShortcuts();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      int int0 = solverStats0.getReduceddb();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incIgnoredclauses();
      long long0 = solverStats0.getIgnoredclauses();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getLearnedclauses();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incPropagations();
      long long0 = solverStats0.getPropagations();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incUpdateLBD();
      long long0 = solverStats0.getUpdateLBD();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      int int0 = solverStats0.getShortcuts();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incDecisions();
      long long0 = solverStats0.getDecisions();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      int int0 = solverStats0.getImportedUnits();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getLearnedliterals();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      long long0 = solverStats0.getRootSimplifications();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incLearnedternaryclauses();
      long long0 = solverStats0.getLearnedternaryclauses();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      solverStats0.incReduceddb();
      int int0 = solverStats0.getReduceddb();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      SolverStats solverStats0 = new SolverStats();
      // Undeclared exception!
      try { 
        solverStats0.printStat((PrintWriter) null, "propagations");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.core.SolverStats", e);
      }
  }
}
