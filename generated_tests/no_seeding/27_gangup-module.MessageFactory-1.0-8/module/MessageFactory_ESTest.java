/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 21:51:32 GMT 2019
 */

package module;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import module.Message;
import module.MessageFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFactory_ESTest extends MessageFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createWarningMessage(".v+v%GMOg)_R<vXeB", (Object[]) null);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      System.setCurrentTimeMillis((-2212L));
      Message message0 = MessageFactory.createWarningMessage("CciY", objectArray0);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message("%6(Ob29Lf'v", objectArray0[1]);
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createWarningMessage("", objectArray0);
      assertEquals("WARNING", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Message message0 = MessageFactory.createWarningMessage(".v+v%GMOg)_R<vXeB", objectArray0);
      assertEquals("WARNING", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      
      System.setCurrentTimeMillis(0L);
      Message message1 = MessageFactory.createUnloadMessage("");
      assertEquals("KERNEL", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFactory.getInstance();
      System.setCurrentTimeMillis((-4414L));
      Message message0 = MessageFactory.createUnloadMessage("6lZI");
      assertEquals("KERNEL", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message("%6(Ob29Lf'v", objectArray0[1]);
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createUnloadMessage("^");
      assertEquals("KERNEL", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createMessage("7Nf,Z.6Bl+:tk):BaD$", "module.MessageFactory", (Object) "module.MessageFactory");
      assertEquals("7Nf,Z.6Bl+:tk):BaD$", message0.getHeader());
      assertEquals("module.MessageFactory", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Message message0 = MessageFactory.createWarningMessage("CciY", objectArray0);
      System.setCurrentTimeMillis((-2212L));
      MessageFactory.createMessage((String) null, (String) null, (Object) message0);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Message message0 = MessageFactory.createMessage((String) null, (String) null, (Object) null);
      assertEquals(0L, message0.getSID());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Message message0 = MessageFactory.createWarningMessage(".v+v%GMOg)_R<vXeB", objectArray0);
      System.setCurrentTimeMillis(0L);
      Message message1 = MessageFactory.createMessage(".v+v%GMOg)_R<vXeB", (Object) message0);
      assertEquals("*", message0.getRecipient());
      assertEquals(".v+v%GMOg)_R<vXeB", message1.getHeader());
      assertEquals("WARNING", message0.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      System.setCurrentTimeMillis((-1489L));
      Message message0 = MessageFactory.createMessage("File", (Object) messageFactory0);
      assertEquals("File", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message("o", (String) null, messageFactory0);
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createMessage("xAaoNN&8+A.Ic(]", (Object) "xAaoNN&8+A.Ic(]");
      assertEquals("*", message1.getRecipient());
      assertEquals("xAaoNN&8+A.Ic(]", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = messageFactory0.createMessage();
      assertEquals("", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      System.setCurrentTimeMillis((-4414L));
      Message message0 = messageFactory0.createMessage();
      assertEquals("", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message("", " IP: ", messageFactory0);
      messageFactory0.unrefObject(message0);
      Message message1 = messageFactory0.createMessage();
      assertEquals("*", message1.getRecipient());
      assertEquals("", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Message message0 = MessageFactory.createWarningMessage(".v+v%GMOg)_R<vXeB", objectArray0);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
      
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message1 = messageFactory0.createMessage();
      assertEquals("", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Message message0 = MessageFactory.createWarningMessage(".v+v%GMOg)_R<vXeB", objectArray0);
      assertEquals("WARNING", message0.getHeader());
      
      System.setCurrentTimeMillis(0L);
      Message message1 = MessageFactory.createErrorMessage("q1]", objectArray0);
      assertEquals("ERROR", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Message message0 = MessageFactory.createWarningMessage("SIKo", objectArray0);
      assertEquals("WARNING", message0.getHeader());
      
      System.setCurrentTimeMillis((-1L));
      Message message1 = MessageFactory.createErrorMessage(" i{,F8a~1'*9$rPuy#", objectArray0);
      assertEquals("*", message1.getRecipient());
      assertEquals("ERROR", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MessageFactory.getInstance();
      Object[] objectArray0 = new Object[5];
      Message message0 = MessageFactory.createErrorMessage("6K*.\n_eH?Z6kuh0 ", objectArray0);
      assertEquals("ERROR", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "");
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis((-1489L));
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "File");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      assertNotNull(messageFactory0);
      
      Message message0 = new Message(" IP: ", " IP: ");
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createConnectionDroppedMessage(86, "");
      assertEquals("DROPPED", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        MessageFactory.createWarningMessage("", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("ERROR", (String) null, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("KERNEL", (Object) "KERNEL");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("Bt&Rz^cL-#gom1}N>/=", (Object) "'Tv }\"wVMi1,2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      // Undeclared exception!
      try { 
        MessageFactory.createErrorMessage("DROPPED", objectArray0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
