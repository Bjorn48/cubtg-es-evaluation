/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 19:40:14 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.EClientErrors;
import com.ib.client.EReader;
import com.ib.client.EWrapper;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EReader_ESTest extends EReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EReader eReader0 = new EReader((DataInputStream) null, (EWrapper) null, (-2634));
      try { 
        eReader0.processMsg(43);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)105;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EReader eReader0 = new EReader((DataInputStream) null, (EWrapper) null, (-1867));
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair(22, "/A2=^v3Tc");
      eReader0.createEException(109, eClientErrors_CodeMsgPair0);
      // Undeclared exception!
      try { 
        eReader0.readBoolFromInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(515, 515, (-1638)).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      dataInputStream1.readUnsignedShort();
      EReader eReader0 = new EReader(dataInputStream1, (EWrapper) null, (-255));
      int int0 = EReader.OPEN_ORDER;
      DataInputStream dataInputStream2 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader1 = new EReader(dataInputStream2, eWrapper1, 17);
      eReader1.stop();
      eReader1.run();
      eReader1.run();
      EReader eReader2 = new EReader(dataInputStream1, eWrapper0, 30);
      try { 
        eReader2.readLong();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 7);
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.processMsg(7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 54);
      eReader0.run();
      eReader0.stop();
      // Undeclared exception!
      try { 
        eReader0.readDoubleMax();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readUnsignedShort();
      EReader eReader0 = new EReader(dataInputStream0, (EWrapper) null, 1982);
      EReader.readInt(dataInputStream0);
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair((-2044), "{M>@B{6WC");
      eReader0.createEException(0, eClientErrors_CodeMsgPair0);
      try { 
        eReader0.processMsg(0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(39, 39).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      dataInputStream1.readUnsignedShort();
      int int0 = (-255);
      EReader eReader0 = new EReader(dataInputStream1, (EWrapper) null, (-255));
      try { 
        eReader0.processMsg(24);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EReader eReader0 = new EReader((DataInputStream) null, (EWrapper) null, 2379);
      int int0 = 56;
      // Undeclared exception!
      try { 
        eReader0.processMsg(56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)47;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte)47);
      eReader0.stop();
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.processMsg((byte)55);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 526);
      // Undeclared exception!
      try { 
        eReader0.processMsg(12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-14);
      byteArray0[0] = (byte) (-14);
      byteArray0[2] = (byte)42;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      EReader eReader0 = new EReader((DataInputStream) null, (EWrapper) null, (byte) (-14));
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair(0, "<,,{wpoIa}D@p, S !");
      eReader0.createEException((-635), eClientErrors_CodeMsgPair0);
      // Undeclared exception!
      try { 
        eReader0.readDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(45, 45, 45, (-53)).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      dataInputStream1.readUnsignedShort();
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 109);
      try { 
        EReader.readInt(dataInputStream1);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = EReader.OPEN_ORDER_END;
      EReader eReader0 = new EReader(dataInputStream0, (EWrapper) null, (-2989));
      eReader0.readLong();
      eReader0.readStr();
      try { 
        eReader0.processMsg(38);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      dataInputStream1.readUnsignedShort();
      EReader eReader0 = new EReader(dataInputStream1, (EWrapper) null, (-255));
      int int0 = EReader.OPEN_ORDER;
      DataInputStream dataInputStream2 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader1 = new EReader(dataInputStream2, eWrapper1, 17);
      eReader1.stop();
      eReader1.run();
      eReader1.run();
      EReader eReader2 = new EReader(dataInputStream1, eWrapper0, 30);
      eReader2.readLong();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (-1610));
      // Undeclared exception!
      try { 
        eReader0.processMsg(21);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-14);
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)42;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = null;
      dataInputStream1.readUnsignedShort();
      EReader eReader0 = new EReader(dataInputStream1, (EWrapper) null, 1982);
      // Undeclared exception!
      try { 
        eReader0.readIntMax();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"*\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
          doReturn(8, 352, 352, 8, 43).when(dataInputStream0).read();
          EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
          byte[] byteArray0 = new byte[6];
          byteArray0[0] = (byte)4;
          DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
          EReader eReader0 = new EReader(dataInputStream1, eWrapper0, (byte)6);
          eReader0.run();
          // Undeclared exception!
          EReader.readStr(dataInputStream1);
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(18, 18, 55, 18, 18).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, (-475));
      eReader0.run();
      int int0 = 14;
      // Undeclared exception!
      eReader0.processMsg(2);
  }
}
