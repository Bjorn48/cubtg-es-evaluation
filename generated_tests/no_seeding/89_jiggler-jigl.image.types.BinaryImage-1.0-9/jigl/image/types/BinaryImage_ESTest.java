/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 23:21:39 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Image;
import jigl.image.ROI;
import jigl.image.types.BinaryImage;
import jigl.image.types.ComplexImage;
import jigl.image.types.GrayImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.InterpolatedGrayImage;
import jigl.image.types.KernelType;
import jigl.image.types.MagnitudeImage;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BinaryImage_ESTest extends BinaryImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(221, 221);
      ComplexImage complexImage0 = new ComplexImage();
      RealGrayImage realGrayImage0 = complexImage0.magnitudeImage();
      ImageKernel imageKernel0 = new ImageKernel(realGrayImage0);
      BinaryImage binaryImage0 = new BinaryImage(imageKernel0);
      binaryImage0.getData();
      binaryImage0.X();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      Byte byte0 = new Byte((byte) (-96));
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(3069, (byte) (-116), byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ComplexImage complexImage0 = new ComplexImage();
      complexImage0.imaginary();
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((RealGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-22));
      Byte.toUnsignedLong((byte) (-70));
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage2 = binaryImage1.union(binaryImage0);
      BinaryImage binaryImage3 = new BinaryImage(binaryImage0);
      binaryImage2.compliment();
      Integer integer0 = new Integer((-386));
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(12, 12);
      binaryImage0.getJavaImage();
      binaryImage0.count();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 0;
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      Byte byte0 = binaryImage0.min();
      binaryImage0.Y();
      int int1 = (-1640);
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-22));
      Byte.toUnsignedLong((byte) (-70));
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.union(binaryImage0);
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage3 = binaryImage2.shift((-165), 1);
      binaryImage3.getJavaImage();
      binaryImage2.shift((byte) (-70), 9);
      BinaryImage binaryImage4 = new BinaryImage(binaryImage2);
      binaryImage4.intersection(binaryImage1);
      binaryImage0.union(binaryImage2);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Byte.toUnsignedLong((byte) (-106));
      BinaryImage binaryImage0 = new BinaryImage(12, 12);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage2 = binaryImage0.union(binaryImage1);
      BinaryImage binaryImage3 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage4 = binaryImage1.shift(12, 612);
      binaryImage3.getJavaImage();
      binaryImage2.shift(8, 0);
      BinaryImage binaryImage5 = new BinaryImage(174, 0);
      MagnitudeImage magnitudeImage0 = new MagnitudeImage(8, 0);
      BinaryImage binaryImage6 = new BinaryImage(magnitudeImage0);
      binaryImage4.intersection(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(2906, 2906);
      // Undeclared exception!
      binaryImage1.shift(2906, 2906);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(3069, 3069);
      // Undeclared exception!
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.compliment();
      // Undeclared exception!
      try { 
        binaryImage1.set(60, 60, (Byte) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-22));
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.union(binaryImage0);
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage3 = binaryImage2.shift((-165), 1);
      binaryImage3.shift(2311, 206);
      KernelType kernelType0 = KernelType.LAPLACIAN;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage4 = new BinaryImage(imageKernel0);
      int int0 = 4;
      binaryImage4.shift(4, (byte) (-22));
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((Image) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)119;
      byte byte0 = (byte)16;
      byteArray1[1] = (byte)16;
      byteArray1[2] = (byte)27;
      byteArray1[3] = (byte)52;
      byteArray1[4] = (byte)119;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage2 = new BinaryImage(byteArray0);
      BinaryImage binaryImage3 = new BinaryImage(binaryImage1);
      BinaryImage binaryImage4 = new BinaryImage(byteArray0);
      binaryImage2.difference(binaryImage4);
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[][] byteArray1 = new byte[3][1];
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)9;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)9;
      byteArray2[4] = (byte) (-120);
      byteArray2[5] = (byte)60;
      byteArray2[6] = (byte) (-3);
      byteArray2[7] = (byte)9;
      byteArray1[0] = byteArray2;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[][] intArray0 = new int[0][6];
      GrayImage grayImage0 = new GrayImage(intArray0);
      grayImage0.diff((jigl.image.Image<Integer>) null);
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      binaryImage0.max();
      byte byte0 = (byte) (-121);
      Byte.toUnsignedLong((byte) (-121));
      grayImage0.min();
      byte byte1 = (byte)42;
      Byte byte2 = new Byte((byte)0);
      int int0 = 2486;
      Byte.compare((byte)42, (byte) (-77));
      Byte.toUnsignedLong((byte) (-77));
      ROI rOI0 = new ROI((byte)42, (-2604), 2486, (byte)0);
      // Undeclared exception!
      try { 
        binaryImage0.set((-2604), (int) (byte)42, byte2, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(3069, 3069);
      // Undeclared exception!
      binaryImage0.intersection(binaryImage0);
  }
}
