/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 18 01:35:53 GMT 2019
 */

package org.sat4j.minisat.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sat4j.minisat.core.Heap;
import org.sat4j.minisat.orders.ActivityBasedVariableComparator;
import org.sat4j.minisat.orders.LevelAndActivityVariableComparator;
import org.sat4j.minisat.orders.VariableComparator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Heap_ESTest extends Heap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        heap0.percolateUp(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.sat4j.minisat.orders.ActivityBasedVariableComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      assertEquals(0, heap0.size());
      
      heap0.setBounds(2428);
      // Undeclared exception!
      try { 
        heap0.increase(568);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.ok((-1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.heapProperty((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-611.164168962703);
      doubleArray0[1] = 1682.21301361;
      doubleArray0[2] = (-263.37917);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-1619.27);
      doubleArray0[5] = (-181.0);
      doubleArray0[6] = 915.41;
      doubleArray0[7] = (-1.0);
      doubleArray0[8] = (-3250.108402);
      LevelAndActivityVariableComparator levelAndActivityVariableComparator0 = new LevelAndActivityVariableComparator(doubleArray0, (int[]) null);
      Heap heap0 = new Heap(levelAndActivityVariableComparator0);
      heap0.heapProperty(620);
      int int0 = 0;
      // Undeclared exception!
      try { 
        heap0.increase(1607);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-877.7606526);
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 0.0;
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      // Undeclared exception!
      try { 
        heap0.setBounds((-1949));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 2542.76;
      doubleArray0[1] = 1454.7573261;
      doubleArray0[2] = 2463.86807;
      doubleArray0[3] = (-768.9);
      doubleArray0[4] = 842.56002;
      doubleArray0[5] = (-1.0);
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      heap0.size();
      // Undeclared exception!
      try { 
        heap0.getmin();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator((double[]) null);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      // Undeclared exception!
      try { 
        heap0.insert(318);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      // Undeclared exception!
      try { 
        heap0.insert(0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(366);
      heap0.setBounds(0);
      heap0.setBounds(366);
      heap0.size();
      heap0.setBounds(0);
      heap0.size();
      heap0.empty();
      heap0.inHeap(0);
      // Undeclared exception!
      try { 
        heap0.increase(0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 3907.7299379158;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-695.90257055923);
      doubleArray0[3] = 861.05;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (-1.0);
      doubleArray0[6] = 0.0;
      doubleArray0[7] = (-565.8322106);
      int[] intArray0 = new int[8];
      intArray0[0] = 1762;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = (-2740);
      intArray0[4] = (-3072);
      intArray0[5] = 1;
      intArray0[6] = (-1);
      intArray0[7] = 0;
      LevelAndActivityVariableComparator levelAndActivityVariableComparator0 = new LevelAndActivityVariableComparator(doubleArray0, intArray0);
      Heap heap0 = new Heap(levelAndActivityVariableComparator0);
      // Undeclared exception!
      try { 
        heap0.getmin();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 124.9395075112718;
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = (-896.2283);
      doubleArray0[3] = 0.0;
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      // Undeclared exception!
      try { 
        heap0.heapProperty((-3984));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.setBounds((-1));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.insert(1016);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1966.39036115382;
      doubleArray0[1] = (-1.0);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 990;
      intArray0[2] = 0;
      intArray0[3] = (-1);
      intArray0[4] = 359;
      intArray0[5] = (-2868);
      intArray0[6] = 0;
      intArray0[7] = (-1);
      intArray0[8] = 0;
      LevelAndActivityVariableComparator levelAndActivityVariableComparator0 = new LevelAndActivityVariableComparator(doubleArray0, intArray0);
      Heap heap0 = new Heap(levelAndActivityVariableComparator0);
      heap0.setBounds(2256);
      boolean boolean0 = heap0.ok(1095);
      boolean boolean1 = heap0.heapProperty();
      assertTrue(heap0.empty());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1712.76971171798;
      doubleArray0[1] = (-579.1);
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = 0.0;
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      boolean boolean0 = heap0.ok(1);
      assertEquals(0, heap0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 691.307517267;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = (-422.67015);
      doubleArray0[4] = 1.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-1);
      intArray0[5] = 2085;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = (-401);
      LevelAndActivityVariableComparator levelAndActivityVariableComparator0 = new LevelAndActivityVariableComparator(doubleArray0, intArray0);
      Heap heap0 = new Heap(levelAndActivityVariableComparator0);
      // Undeclared exception!
      try { 
        heap0.percolateDown(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.sat4j.minisat.orders.LevelAndActivityVariableComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      int int0 = 1;
      // Undeclared exception!
      try { 
        heap0.inHeap(1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.percolateDown((-1992));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      boolean boolean0 = heap0.empty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-40.555848);
      doubleArray0[2] = (-1210.5973);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-1040.3991201091517);
      doubleArray0[5] = 819.1012;
      doubleArray0[6] = 96.28625286545;
      doubleArray0[7] = 0.0;
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      int int0 = 1;
      heap0.percolateDown(1);
      // Undeclared exception!
      try { 
        heap0.setBounds((-1989));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.getmin();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.increase(0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 531.1236727844;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-428.001991452714);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = (-1.0);
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 1542;
      intArray0[2] = (-1);
      intArray0[3] = 3102;
      LevelAndActivityVariableComparator levelAndActivityVariableComparator0 = new LevelAndActivityVariableComparator(doubleArray0, intArray0);
      Heap heap0 = new Heap(levelAndActivityVariableComparator0);
      // Undeclared exception!
      try { 
        heap0.increase((-2088));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      boolean boolean0 = heap0.heapProperty();
      assertTrue(boolean0);
      assertTrue(heap0.empty());
      
      int int0 = heap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(91);
      assertTrue(heap0.empty());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 542.0451224;
      doubleArray0[1] = (-214.3025);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      heap0.setBounds(0);
      int int0 = 1;
      heap0.percolateUp(1);
      heap0.setBounds(1);
      heap0.size();
      heap0.size();
      // Undeclared exception!
      try { 
        heap0.getmin();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      int[] intArray0 = new int[9];
      intArray0[0] = (-163);
      intArray0[1] = 3538;
      intArray0[2] = (-321);
      intArray0[3] = (-161);
      intArray0[4] = (-543);
      intArray0[5] = (-1);
      intArray0[6] = 531;
      intArray0[7] = (-156);
      intArray0[8] = 1598;
      LevelAndActivityVariableComparator levelAndActivityVariableComparator0 = new LevelAndActivityVariableComparator(doubleArray0, intArray0);
      Heap heap0 = new Heap(levelAndActivityVariableComparator0);
      heap0.setBounds(1598);
      assertEquals(0, heap0.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(2897);
      // Undeclared exception!
      try { 
        heap0.setBounds(2428);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator((double[]) null);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      Heap heap1 = new Heap(activityBasedVariableComparator0);
      int int0 = (-3361);
      // Undeclared exception!
      try { 
        heap1.percolateUp((-3361));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 2487.3;
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      heap0.empty();
      heap0.size();
      int int0 = (-1446);
      // Undeclared exception!
      try { 
        heap0.insert((-1446));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      int int0 = 0;
      heap0.setBounds(366);
      heap0.setBounds(0);
      heap0.setBounds(366);
      heap0.size();
      heap0.setBounds(0);
      heap0.size();
      heap0.empty();
      heap0.inHeap(0);
      // Undeclared exception!
      try { 
        heap0.get(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = (-114.5833667);
      doubleArray0[2] = 0.0;
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      heap0.empty();
      int int0 = 2;
      heap0.setBounds(4009);
      heap0.insert(2);
      // Undeclared exception!
      try { 
        heap0.setBounds((-1893));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      // Undeclared exception!
      try { 
        heap0.percolateDown(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.sat4j.minisat.orders.ActivityBasedVariableComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.get(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.inHeap(1185);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(366);
      heap0.setBounds(0);
      heap0.setBounds(366);
      heap0.size();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-1863.477);
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap1 = new Heap((VariableComparator) null);
      Heap heap2 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.percolateDown(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.core.Heap", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 542.0451224;
      int[] intArray0 = new int[2];
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      heap0.setBounds(0);
      heap0.percolateUp(1);
      heap0.setBounds(1);
      ActivityBasedVariableComparator activityBasedVariableComparator1 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap1 = new Heap(activityBasedVariableComparator1);
      heap0.percolateDown(1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 542.0451224;
      doubleArray0[1] = (-214.3025);
      int[] intArray0 = new int[2];
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      heap0.setBounds(0);
      heap0.percolateUp(1);
      ActivityBasedVariableComparator activityBasedVariableComparator1 = new ActivityBasedVariableComparator(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 698;
      intArray0[1] = (-717);
      intArray0[2] = 0;
      intArray0[3] = 813;
      intArray0[4] = 1;
      intArray0[5] = 0;
      intArray0[6] = (-1234);
      intArray0[7] = (-3871);
      LevelAndActivityVariableComparator levelAndActivityVariableComparator0 = new LevelAndActivityVariableComparator((double[]) null, intArray0);
      Heap heap0 = new Heap(levelAndActivityVariableComparator0);
      // Undeclared exception!
      try { 
        heap0.percolateUp(2145);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
