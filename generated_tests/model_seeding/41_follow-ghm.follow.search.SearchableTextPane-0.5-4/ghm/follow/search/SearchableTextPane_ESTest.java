/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 12:00:37 GMT 2019
 */

package ghm.follow.search;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ghm.follow.search.LineResult;
import ghm.follow.search.SearchableTextPane;
import java.awt.Font;
import java.text.AttributedCharacterIterator;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;
import java.util.regex.PatternSyntaxException;
import javax.swing.JLayer;
import javax.swing.plaf.LayerUI;
import javax.swing.plaf.TextUI;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SearchableTextPane_ESTest extends SearchableTextPane_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Font font0 = new Font("", 0, (-2127));
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      int int0 = searchableTextPane0.search("", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-262));
      // Undeclared exception!
      try { 
        searchableTextPane0.search((String) null, (-262));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Font font0 = new Font(")", (-2314), (-2314));
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, (-2314));
      // Undeclared exception!
      try { 
        searchableTextPane0.highlight(")", (-2314));
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')'
         // )
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-3232));
      searchableTextPane0.setUI((TextUI) null);
      // Undeclared exception!
      try { 
        searchableTextPane0.highlight("", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ghm.follow.search.SearchableTextPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Font font0 = Font.decode("J");
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, (-1828));
      // Undeclared exception!
      try { 
        searchableTextPane0.highlight("J", (-1828));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown search strategy requested [flags=-1828
         //
         verifyException("ghm.follow.search.SearchEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Font font0 = new Font("J", (-2314), (-2314));
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, (-2314));
      List<LineResult> list0 = searchableTextPane0.highlight("J", (-2314));
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-1943));
      searchableTextPane0.removeHighlights();
      assertFalse(searchableTextPane0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Font font0 = new Font("J", (-2314), (-2314));
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, (-2314));
      int int0 = searchableTextPane0.search("+@Y27KWfRyL|oH:#", (-2314));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Font font0 = Font.decode("");
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      int int0 = searchableTextPane0.search("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 311);
      int int0 = searchableTextPane0.search((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Font font0 = new Font("", (-2314), (-2314));
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, (-2314));
      List<LineResult> list0 = searchableTextPane0.highlight("", (-2314));
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Font font0 = Font.decode("");
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      List<LineResult> list0 = searchableTextPane0.highlight((String) null, (-729));
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Hashtable<AttributedCharacterIterator.Attribute, String> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, String>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 10);
      JLayer<SearchableTextPane> jLayer0 = new JLayer<SearchableTextPane>(searchableTextPane0);
      boolean boolean0 = searchableTextPane0.getScrollableTracksViewportWidth();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Hashtable<AttributedCharacterIterator.Attribute, DefaultTableModel> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, DefaultTableModel>();
      Font font0 = new Font(hashtable0);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 14);
      searchableTextPane0.replaceSelection("ghm.follow.search.SearchableTextPane");
      JLayer<SearchableTextPane> jLayer0 = new JLayer<SearchableTextPane>(searchableTextPane0);
      boolean boolean0 = searchableTextPane0.getScrollableTracksViewportWidth();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-626));
      JLayer<SearchableTextPane> jLayer0 = new JLayer<SearchableTextPane>(searchableTextPane0, (LayerUI<SearchableTextPane>) null);
      // Undeclared exception!
      try { 
        searchableTextPane0.getScrollableTracksViewportWidth();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.text.PlainView", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Font font0 = Font.decode("");
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      boolean boolean0 = searchableTextPane0.getScrollableTracksViewportWidth();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-626));
      int int0 = searchableTextPane0.search("G");
      assertEquals((-1), int0);
  }
}
