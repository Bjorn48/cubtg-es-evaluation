/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 15:02:47 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(12);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.bufpos = 12;
      javaCharStream0.adjustBeginLineColumn(12, (-714));
      javaCharStream0.adjustBeginLineColumn(3571, (-1));
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "D5XqRO!S$c&q+A=R8");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2, 482, 2349);
      javaCharStream0.Done();
      byteArrayInputStream0.mark(117);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lW=z9 5X|LU6|Vfy[");
      stringReader0.ready();
      stringReader0.skip(1204L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1358, 1358);
      javaCharStream0.backup(233);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(3007);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 3007, 10, 10);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(12);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.bufpos = 12;
      javaCharStream0.adjustBeginLineColumn(12, (-714));
      javaCharStream0.adjustBeginLineColumn(3571, (-1));
      javaCharStream0.readChar();
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 0, 995);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-714));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1778, 1);
      javaCharStream0.ReInit((Reader) stringReader0, (-1572), 86, 86);
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      char char0 = 'm';
      javaCharStream0.adjustBeginLineColumn((-3518), 1112);
      javaCharStream0.adjustBeginLineColumn(77, 1);
      javaCharStream0.ReadByte();
      javaCharStream0.adjustBeginLineColumn(77, (-2738));
      char char1 = javaCharStream0.BeginToken();
      JavaCharStream.hexval(char0);
      javaCharStream0.getEndLine();
      javaCharStream0.getColumn();
      javaCharStream0.UpdateLineColumn(char1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 77, 77, 77);
      javaCharStream0.adjustBeginLineColumn(3189, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.backup(0);
      int int0 = (-1045);
      javaCharStream0.ReInit((Reader) stringReader0, 0, (-1045), 77);
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[0] = 'M';
      charArray0[1] = 'V';
      charArray0[2] = 'V';
      charArray0[3] = 'M';
      charArray0[4] = 'V';
      charArray0[5] = 'V';
      charArray0[6] = 'V';
      charArray0[7] = 'V';
      charArray0[8] = '1';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 1886, 1886);
      javaCharStream0.prevCharIsCR = false;
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = 'V';
      charArray0[2] = 'V';
      charArray0[3] = 'N';
      charArray0[4] = 'W';
      charArray0[5] = 'K';
      charArray0[6] = 'm';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      charArray0[1] = 'm';
      charArray0[2] = 'E';
      charArray0[3] = 'K';
      charArray0[4] = 'G';
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)40, (byte)53);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream1.ReInit((InputStream) byteArrayInputStream0, (int) (byte)40, (int) (byte)40, (-1));
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)2, (-644));
      // Undeclared exception!
      try { 
        javaCharStream1.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)53, (-1), (int) (byte)53);
      StringReader stringReader1 = new StringReader("3");
      JavaCharStream.hexval('F');
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(77);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      int int0 = (-1776);
      javaCharStream0.ReInit((Reader) stringReader0, 0, (-1776), 0);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      javaCharStream0.prevCharIsCR = false;
      JavaCharStream.hexval('1');
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      int int0 = (-1678);
      JavaCharStream javaCharStream0 = new JavaCharStream(reader0, 1463, (-1678), 0);
      javaCharStream0.inBuf = (-1678);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(12);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.bufsize = 12;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, 11);
      javaCharStream0.ReInit((Reader) stringReader0, 4072, 0);
      javaCharStream0.adjustBeginLineColumn(4192, 0);
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      doReturn(394).when(reader0).read(any(char[].class) , anyInt() , anyInt());
      JavaCharStream javaCharStream0 = new JavaCharStream(reader0, 4096, 4096, 4096);
      javaCharStream0.GetSuffix(4096);
      javaCharStream0.GetSuffix(4055);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(4086);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((-2582), 11);
      javaCharStream0.adjustBeginLineColumn(1063, (-892));
      // Undeclared exception!
      javaCharStream0.adjustBeginLineColumn((-892), 52);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 22, (-1108));
      PipedInputStream pipedInputStream0 = new PipedInputStream(621);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, (-3874), (-1087));
      // Undeclared exception!
      try { 
        javaCharStream1.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(reader0).read(any(char[].class) , anyInt() , anyInt());
      JavaCharStream javaCharStream0 = new JavaCharStream(reader0, 4096, 4096, 4096);
      javaCharStream0.GetSuffix(4096);
      char[] charArray0 = javaCharStream0.GetSuffix(4055);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(4086);
      javaCharStream0.GetImage();
      javaCharStream0.backup(459);
      stringReader0.markSupported();
      javaCharStream0.backup(4087);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 956, 1864);
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('\u0000');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      javaCharStream0.adjustBeginLineColumn(1, 1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-8);
      javaCharStream0.backup((-8));
      javaCharStream0.BeginToken();
      javaCharStream0.backup(185);
      JavaCharStream.hexval('T');
      javaCharStream0.GetImage();
      int int1 = 56;
      javaCharStream0.GetSuffix(int1);
      int int2 = (-3869);
      javaCharStream0.adjustBeginLineColumn(int2, int0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      int int3 = 2426;
      javaCharStream0.adjustBeginLineColumn(int2, int3);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4889), 1112);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = 77;
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 77, (-4889), 88);
      javaCharStream0.ReInit((Reader) stringReader0, 77, 0, 77);
      StringReader stringReader1 = new StringReader("3");
      char[] charArray0 = new char[5];
      charArray0[0] = 'K';
      charArray0[1] = 'E';
      charArray0[2] = 'f';
      charArray0[3] = 'm';
      charArray0[4] = 'E';
      stringReader0.read(charArray0);
      JavaCharStream.hexval('f');
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(12);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.bufpos = 12;
      javaCharStream0.adjustBeginLineColumn(12, (-714));
      javaCharStream0.ReadByte();
      javaCharStream0.adjustBeginLineColumn(3571, (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 1886, 1886);
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 997, 15);
      JavaCharStream.hexval('1');
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream2 = new JavaCharStream(reader0, 4096, 4096, 4096);
      javaCharStream2.GetSuffix(4096);
      javaCharStream2.GetSuffix(4055);
      javaCharStream2.backup(459);
      javaCharStream2.BeginToken();
      javaCharStream2.backup(4086);
      javaCharStream2.GetImage();
      javaCharStream2.backup(459);
      javaCharStream2.backup(4087);
      javaCharStream2.AdjustBuffSize();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3174, 0);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      char[] charArray0 = new char[20];
      charArray0[0] = 'f';
      charArray0[1] = 'm';
      charArray0[2] = 'H';
      charArray0[3] = 'K';
      charArray0[4] = 'G';
      charArray0[5] = 'V';
      charArray0[6] = 'M';
      charArray0[7] = 'M';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 2, 2);
      char[] charArray1 = new char[6];
      charArray1[0] = '1';
      charArray1[1] = '1';
      charArray1[2] = '1';
      StringReader stringReader1 = new StringReader("3");
      stringReader1.read(charArray0);
      JavaCharStream.hexval('2');
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream.hexval('1');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream.hexval('2');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(2);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, (byte)75);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 2, (-2));
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.prevCharIsCR = true;
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-100);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)0, (byte)124);
      byteArrayInputStream0.close();
      javaCharStream0.GetSuffix(0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(0);
      String string0 = javaCharStream0.GetImage();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.mark(902);
      javaCharStream0.getBeginLine();
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader(string0);
      javaCharStream0.ReInit((Reader) stringReader0, (-2344), (int) (byte)0);
      javaCharStream0.adjustBeginLineColumn((byte)124, (byte) (-100));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream(2048);
      pipedInputStream1.close();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1120), 0);
      javaCharStream0.adjustBeginLineColumn((-2162), 0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)123;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte) (-50);
      byteArray0[3] = (byte)82;
      byteArray0[4] = (byte) (-101);
      byteArray0[5] = (byte)90;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)82, (byte)0);
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      charArray0[1] = 'm';
      charArray0[2] = 'E';
      charArray0[3] = 'K';
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 1112, 85, 77);
      charArray0[4] = 'G';
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)53, (-1), (int) (byte)53);
      StringReader stringReader1 = new StringReader("3");
      stringReader1.read(charArray0);
      JavaCharStream.hexval('F');
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(77);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 0);
      javaCharStream0.adjustBeginLineColumn(0, 1144);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream0 = new JavaCharStream(reader0, (-1835), (-1835), 0);
      javaCharStream0.ExpandBuff(false);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(12);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.bufpos = 12;
      javaCharStream0.adjustBeginLineColumn(12, (-714));
      javaCharStream0.ReadByte();
      javaCharStream0.adjustBeginLineColumn(3571, (-1));
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('S');
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JavaCharStream.hexval('D');
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream.hexval('1');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      javaCharStream0.Done();
      byteArray0[6] = (byte)86;
      byteArray0[7] = (byte)25;
      byteArray0[8] = (byte)92;
      sequenceInputStream0.read(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1024, 12, 1024);
      javaCharStream0.inBuf = 5;
      javaCharStream0.adjustBeginLineColumn(11, 1024);
      javaCharStream0.bufsize = 1024;
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.backup(12);
      javaCharStream0.BeginToken();
      javaCharStream0.backup('\u0000');
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 11);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, 5);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream1, 12, 5, (-3782));
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" /T1zzx&U");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1630, 107, 1630);
      javaCharStream0.getBeginColumn();
      char char0 = '\\';
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('\\');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JavaCharStream.hexval('1');
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q_YW.M q1&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1294);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-607), 1294, (-607));
      javaCharStream0.inBuf = (-1233);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, 0);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 4281, 4281, 1294);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 77, 77, 77);
      int int0 = 0;
      javaCharStream0.adjustBeginLineColumn(0, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.backup(0);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(57);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3174, 0);
      byte[] byteArray0 = new byte[6];
      javaCharStream0.column = (-1231);
      byteArray0[0] = (byte) (-21);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 5;
      int int1 = 3554;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 3554);
      javaCharStream0.ReInit((Reader) stringReader0, 5, 5);
      javaCharStream0.Done();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      charArray0[1] = 'm';
      charArray0[2] = 'E';
      charArray0[3] = 'K';
      charArray0[4] = 'G';
      charArray0[5] = 'V';
      charArray0[6] = 'M';
      charArray0[7] = 'M';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 2, 2);
      char[] charArray1 = new char[6];
      charArray1[0] = '1';
      charArray1[1] = '1';
      charArray1[2] = '1';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.prevCharIsCR = false;
      charArray1[3] = '1';
      charArray1[4] = '1';
      charArray1[5] = '1';
      stringReader0.read(charArray1);
      JavaCharStream.hexval('1');
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 1886, 1886);
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = 'V';
      charArray0[2] = 'V';
      charArray0[3] = 'N';
      charArray0[4] = 'X';
      charArray0[5] = 'K';
      charArray0[6] = 'm';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      charArray0[1] = 'm';
      charArray0[2] = 'm';
      charArray0[3] = 'K';
      charArray0[4] = 'G';
      StringReader stringReader1 = new StringReader("3");
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, (-1));
      javaCharStream0.ReInit((Reader) stringReader0, 4688, 4072, 4068);
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[3];
      charArray0[0] = 'G';
      charArray0[0] = 'F';
      charArray0[2] = 'F';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)53;
      byteArray0[3] = (byte) (-51);
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte) (-51), (int) (byte)0, 1011);
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.adjustBeginLineColumn(1, 1);
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "", (-1), 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      char char0 = 'K';
      int int0 = 77;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      int int1 = 73;
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 73, (byte)53, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Reader reader0 = null;
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0);
      javaCharStream0.ReInit((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('y');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(3007);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 3007, 3007, 3007);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1024, 12, 1024);
      javaCharStream0.inBuf = 5;
      javaCharStream0.adjustBeginLineColumn(11, 1024);
      javaCharStream0.bufsize = 1024;
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.backup(12);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(2351);
      javaCharStream0.adjustBeginLineColumn(67, 2351);
      javaCharStream0.adjustBeginLineColumn(55, (-12));
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -314
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-449), 4281);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 77, 77, 77);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.FillBuff();
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.GetImage();
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      javaCharStream0.bufsize = 0;
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 482, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Y!~GR-l':IBJ5y9!9u:");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(false);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 22, (-1108));
      javaCharStream0.adjustBeginLineColumn(10, 4094);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)73;
      byte byte0 = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-34);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)10, 1141);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (-262));
      char[] charArray0 = new char[6];
      charArray0[0] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      byteArrayInputStream0.mark(0);
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = 'E';
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('E');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(12);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.bufpos = 12;
      javaCharStream0.adjustBeginLineColumn(12, (-714));
      javaCharStream0.ReadByte();
      javaCharStream0.adjustBeginLineColumn(3571, (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      char[] charArray0 = new char[20];
      charArray0[0] = 'f';
      charArray0[1] = 'm';
      charArray0[2] = 'H';
      charArray0[3] = 'K';
      javaCharStream0.BeginToken();
      int int0 = 57;
      javaCharStream0.backup(1112);
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream.hexval('1');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JavaCharStream.hexval('f');
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-11);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 22, (-1108));
      javaCharStream0.ReInit((Reader) stringReader0, 10, 4094);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      try { 
        JavaCharStream.hexval(',');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)53, (-1), (int) (byte)53);
      StringReader stringReader1 = new StringReader("3");
      JavaCharStream.hexval('F');
      javaCharStream0.readChar();
      JavaCharStream.hexval('3');
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(12);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.bufsize = 12;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Y!~GR-l':IBJ5y9!9u:");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      int int0 = 12;
      int int1 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(12);
      int int2 = (-714);
      javaCharStream0.adjustBeginLineColumn(int0, int2);
      int int3 = 3571;
      javaCharStream0.adjustBeginLineColumn(int3, int1);
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(12);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.bufpos = 12;
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.adjustBeginLineColumn(3571, (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(14, 12);
      javaCharStream0.backup(9);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 77, 77, 77);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.backup(0);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(57);
      javaCharStream0.GetImage();
      javaCharStream0.getEndColumn();
      javaCharStream0.GetSuffix('3');
      javaCharStream0.adjustBeginLineColumn(0, 3);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.adjustBeginLineColumn(0, (-2101));
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      int int0 = 77;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 77, 77, 77);
      int int1 = 0;
      javaCharStream0.adjustBeginLineColumn(0, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.backup(0);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 1886, 1886);
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 997, 15);
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[6];
      javaCharStream0.nextCharInd = (-1);
      charArray0[2] = 'X';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = '1';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      int int0 = 1112;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      charArray0[1] = 'm';
      charArray0[2] = 'E';
      charArray0[3] = 'K';
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 1112, 85, 77);
      charArray0[4] = 'G';
      javaCharStream0.adjustBeginLineColumn(14, 1028);
      int int1 = 1253;
      javaCharStream0.adjustBeginLineColumn(int0, int1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = "3";
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 1112, 80);
      char[] charArray0 = new char[8];
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 80, 2897, (-178));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      char[] charArray0 = new char[8];
      charArray0[0] = 's';
      charArray0[1] = 'm';
      charArray0[2] = 'E';
      charArray0[3] = 'K';
      charArray0[4] = 'G';
      charArray0[5] = 'V';
      charArray0[7] = 'M';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 2, 2);
      char[] charArray1 = new char[6];
      charArray1[0] = '1';
      charArray1[1] = '1';
      charArray1[2] = '1';
      javaCharStream0.prevCharIsCR = false;
      charArray1[3] = '1';
      charArray1[4] = '1';
      charArray1[5] = 'E';
      stringReader0.read(charArray1);
      try { 
        JavaCharStream.hexval('s');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 0);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(0, 0);
      javaCharStream0.bufpos = 12;
      javaCharStream0.adjustBeginLineColumn(12, (-714));
      javaCharStream0.adjustBeginLineColumn(3571, (-714));
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CSjb!/D\":7ksT");
      int int0 = 0;
      int int1 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 4, (-1), (-4119));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 1112, 80);
      char[] charArray0 = new char[8];
      charArray0[0] = '\u0080';
      charArray0[1] = 'm';
      charArray0[2] = '\u0080';
      charArray0[3] = 'm';
      charArray0[4] = 'G';
      charArray0[5] = 'V';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("3");
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      charArray0[1] = 'm';
      charArray0[2] = 'E';
      charArray0[3] = 'K';
      charArray0[4] = 'G';
      charArray0[5] = 'V';
      charArray0[6] = 'M';
      charArray0[7] = 'M';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 2, 2);
      char[] charArray1 = new char[6];
      charArray1[0] = '1';
      charArray1[1] = '1';
      charArray1[2] = '1';
      javaCharStream0.prevCharIsCR = false;
      charArray1[3] = '1';
      charArray1[4] = '1';
      charArray1[5] = '1';
      stringReader0.read(charArray1);
      JavaCharStream.hexval('1');
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 12);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(2687);
      javaCharStream0.adjustBeginLineColumn(2687, 2687);
      int int0 = (-714);
      javaCharStream0.adjustBeginLineColumn((-714), (-2978));
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      charArray0[1] = 'm';
      charArray0[2] = 'E';
      charArray0[3] = 'K';
      charArray0[4] = 'G';
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      char[] charArray0 = new char[20];
      charArray0[0] = 'f';
      charArray0[1] = 'm';
      charArray0[2] = 'H';
      StringReader stringReader1 = new StringReader("3");
      stringReader0.read(charArray0);
      JavaCharStream.hexval('0');
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3174, 0);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      int int0 = (-1108);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1108), 66);
      int int1 = 1564;
      javaCharStream0.adjustBeginLineColumn(1564, (-1));
      javaCharStream0.getColumn();
      char[] charArray0 = null;
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.GetSuffix(int1);
      javaCharStream0.backup(int0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 6, (byte)2);
      byteArrayInputStream0.reset();
      javaCharStream1.ReInit((InputStream) byteArrayInputStream0, 570, 11, 0);
      javaCharStream1.readChar();
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.BeginToken();
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mc{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(12);
      javaCharStream0.adjustBeginLineColumn(4641, 0);
      javaCharStream0.adjustBeginLineColumn(12, 0);
      javaCharStream0.ReadByte();
      javaCharStream0.adjustBeginLineColumn(4641, 12);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1112, 1112);
      javaCharStream0.ReInit((Reader) stringReader0, 1112, 1886, 1886);
      stringReader0.markSupported();
      javaCharStream0.adjustBeginLineColumn(1886, 1112);
      javaCharStream0.adjustBeginLineColumn(87, 1886);
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream0 = new JavaCharStream(reader0, 4096, 4096, 4096);
      char[] charArray0 = javaCharStream0.GetSuffix(4096);
      javaCharStream0.GetSuffix(4055);
      javaCharStream0.backup(459);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(4086);
      javaCharStream0.GetImage();
      javaCharStream0.backup(459);
      javaCharStream0.backup(4087);
      StringReader stringReader0 = new StringReader(" column ");
      javaCharStream0.ReInit((Reader) stringReader0, 6630, (-712), 70);
      StringReader stringReader1 = new StringReader(" column ");
      stringReader1.read(charArray0);
      try { 
        JavaCharStream.hexval('n');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 3554);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 1630, 1630);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('g');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((Reader) null, (-1839), 0, (-1773));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 1630, 1630);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('g');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = (-1);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-1), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte)75;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-127);
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.mark((-321));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 313, 9);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Reader reader0 = null;
      int int0 = 1008;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1008, 12, 1008);
      javaCharStream0.inBuf = 5;
      javaCharStream0.adjustBeginLineColumn(0, 1008);
      javaCharStream0.bufsize = (-1352);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 12, 12);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.backup(12);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(2351);
      pipedInputStream0.close();
      int int1 = (-33);
      javaCharStream0.ReInit((Reader) null, 1008, (-33));
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
