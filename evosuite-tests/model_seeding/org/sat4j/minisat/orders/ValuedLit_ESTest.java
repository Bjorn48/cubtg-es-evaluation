/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 17:08:57 GMT 2019
 */

package org.sat4j.minisat.orders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sat4j.minisat.orders.ValuedLit;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ValuedLit_ESTest extends ValuedLit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit((-406), (-1));
      String string0 = valuedLit0.toString();
      assertEquals("-406(-1)", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit(761, (-2094));
      valuedLit0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit(0, 0);
      ValuedLit valuedLit1 = new ValuedLit((-406), (-1));
      boolean boolean0 = valuedLit1.equals(valuedLit0);
      assertFalse(boolean0);
      assertFalse(valuedLit0.equals((Object)valuedLit1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit(414, 414);
      ValuedLit valuedLit1 = new ValuedLit(761, (-2094));
      int int0 = valuedLit0.compareTo(valuedLit1);
      assertEquals(2508, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit((-406), (-1));
      int int0 = valuedLit0.compareTo(valuedLit0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit(1810, 1810);
      // Undeclared exception!
      try { 
        valuedLit0.compareTo((ValuedLit) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.ValuedLit", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit(0, 0);
      ValuedLit valuedLit1 = new ValuedLit(0, (-182));
      boolean boolean0 = valuedLit0.equals(valuedLit1);
      assertFalse(valuedLit1.equals((Object)valuedLit0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit(1, 1);
      Object object0 = new Object();
      boolean boolean0 = valuedLit0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit(1103, 1103);
      boolean boolean0 = valuedLit0.equals(valuedLit0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit((-1), (-1));
      ValuedLit valuedLit1 = new ValuedLit((-1), 0);
      int int0 = valuedLit0.compareTo(valuedLit1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit(0, 0);
      int int0 = valuedLit0.compareTo(valuedLit0);
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit(1804, 1804);
      int int0 = valuedLit0.compareTo(valuedLit0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValuedLit valuedLit0 = new ValuedLit((-17), (-17));
      boolean boolean0 = valuedLit0.equals((Object) null);
      assertFalse(boolean0);
  }
}
